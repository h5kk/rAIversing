{
    "FUN_0800192c": {
        "renaming": {
            "FUN_0800192c": "checkFlagStatus_0800192c", 
            "undefined4": "int", 
            "0": "FLAG_OFF", 
            "1": "FLAG_ON", 
            "8": "FLAG_BIT", 
            "0x28": "FLAG_INDEX", 
            "PTR_DAT_08001958": "flagArrayValue", 
            "PTR_DAT_08001954": "flagArray"
        }, 
        "code": "void checkFlagStatus_0800192c(void)\\n{\\n  if ((PTR_DAT_08001954[0x28] & FLAG_BIT) == 0) {\\n    *(int *)PTR_DAT_08001958 = FLAG_OFF;\\n  }\\n  else {\\n    *(int *)PTR_DAT_08001958 = FLAG_ON;\\n  }\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800192c", 
        "calling": [
            "FUN_08001ddc", 
            "FUN_08004e30"
        ], 
        "imported": true, 
        "current_name": "checkFlagStatus_0800192c"
    }, 
    "FUN_08006950": {
        "renaming": {
            "FUN_08006950": "setParameter_08006950", 
            "originalValue": "originalValue", 
            "param_1": "parameterValue", 
            "uint": "unsigned int", 
            "uint*": "unsigned int*", 
            "DAT_08006994": "DATA_ADDRESS", 
            "maskedValue": "maskedValue", 
            "shiftedValue": "shiftedValue", 
            "0xc": "OFFSET", 
            "finalValue": "finalValue", 
            "mask": "mask"
        }, 
        "code": "void setParameter_08006950(uint parameterValue)\\n{\\n  uint* parameterAddress = (uint*)(DAT_08006994 + 0xc);\\n  uint originalValue = *parameterAddress;\\n  uint mask = 0xf8ff;\\n  uint maskedValue = originalValue & mask;\\n  uint shiftedValue = (parameterValue & 7) << 8;\\n  uint finalValue = maskedValue | shiftedValue | 0x5fa0000;\\n  *parameterAddress = finalValue;\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006950", 
        "calling": [
            "FUN_08006ce0"
        ], 
        "imported": true, 
        "current_name": "setParameter_08006950"
    }, 
    "FUN_08008ba0": {
        "renaming": {
            "FUN_08008ba0": "calculateValue_08008ba0", 
            "iVar2": "scaledValue", 
            "uVar1": "shiftAmount", 
            "0x7ffffe01": "MAX_POSITIVE_VALUE", 
            "0x80000000": "SIGN_BIT", 
            "param_1": "param1", 
            "0xfffffc20": "MAX_NEGATIVE_VALUE", 
            "uint": "unsigned int", 
            "0x3e1": "SHIFT_ADJUSTMENT", 
            "0xffe00000": "MAX_VALUE", 
            "param_2": "param2", 
            "shiftedValue": "finalValue", 
            "0x200000": "SCALING_CONSTANT", 
            "uVar3": "shiftAmountAdjusted", 
            "0xb": "SHIFT_AMOUNT", 
            "0xff": "MASK"
        }, 
        "code": "uint calculateValue_08008ba0(uint param1, uint param2)\\n{\\n  uint scaledValue = param2 * 2 + 0x200000;\\n  if (scaledValue * 2 < 0xffe00000) {\\n    if (scaledValue >= 0x7ffffe01) {\\n      return 0;\\n    }\\n    uint uVar1 = scaledValue >> 0x15;\\n    uint uVar3 = -uVar1 - 0x3e1;\\n    if (uVar1 < 0xfffffc20 && uVar3 != 0) {\\n      uint shiftedValue = (param2 << 0xb | 0x80000000 | param1 >> 0x15) >> (uVar3 & 0xff);\\n      if ((param2 & 0x80000000) != 0) {\\n        shiftedValue = -shiftedValue;\\n      }\\n      return shiftedValue;\\n    }\\n  }\\n  else if ((param1 | param2 << 0xc) != 0) {\\n    return 0;\\n  }\\n  if ((param2 & 0x80000000) == 0) {\\n    return 0x7fffffff;\\n  }\\n  return param2;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08008ba0", 
        "calling": [
            "FUN_08003004", 
            "FUN_0800adf0", 
            "FUN_080005b4", 
            "FUN_080095b8", 
            "FUN_0800a5a0", 
            "FUN_08009d78", 
            "FUN_0800a348", 
            "FUN_08002c18"
        ], 
        "imported": true, 
        "current_name": "calculateValue_08008ba0"
    }, 
    "FUN_08005a5c": {
        "renaming": {
            "FUN_08005a5c": "doNothing_08005a5c"
        }, 
        "code": "void doNothing_08005a5c(void)\\n{\\n  // This function does nothing\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005a5c", 
        "calling": [
            "FUN_080059f8"
        ], 
        "imported": true, 
        "current_name": "doNothing_08005a5c"
    }, 
    "FUN_08005984": {
        "renaming": {
            "uVar1": "isAvailable", 
            "FUN_08005984": "checkSystemCallAvailability_08005984", 
            "param_1": "param"
        }, 
        "code": "int checkSystemCallAvailability_08005984(int param)\\n{\\n  int isAvailable;\\n  if (*(int *)PTR_DAT_080059b0 == 0) {\\n    isAvailable = triggerSystemCall(1, param, 0);\\n  }\\n  else {\\n    isAvailable = 0;\\n  }\\n  return isAvailable;\\n}", 
        "called": [
            "FUN_0800597c"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005984", 
        "calling": [
            "FUN_08007540"
        ], 
        "imported": true, 
        "current_name": "checkSystemCallAvailability_08005984"
    }, 
    "FUN_08007a10": {
        "renaming": {
            "FLAG_3": "DAT_08007a6c", 
            "DAT_08007a64": "DATA_ADDRESS", 
            "param_1": "flagValue", 
            "uint": "unsigned int", 
            "int": "int", 
            "uint*": "unsigned int*", 
            "0x40": "OFFSET", 
            "FUN_08007a10": "setFlag_08007a10", 
            "FLAG_1": "0x40000000", 
            "FLAG_2": "DAT_08007a68"
        }, 
        "code": "void setFlag_08007a10(int flagValue)\\n{\\n  uint* flagAddress = (uint*)(DAT_08007a64 + 0x40);\\n  if (flagValue == FLAG_1) {\\n    *flagAddress = *flagAddress | 1;\\n  }\\n  else if (flagValue == FLAG_2) {\\n    *flagAddress = *flagAddress | 2;\\n  }\\n  else if (flagValue == FLAG_3) {\\n    *flagAddress = *flagAddress | 4;\\n  }\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007a10", 
        "calling": [
            "FUN_08007ad0", 
            "FUN_08007d08"
        ], 
        "imported": true, 
        "current_name": "setFlag_08007a10"
    }, 
    "FUN_0800856c": {
        "renaming": {
            "FUN_0800856c": "FUNC_0800856c"
        }, 
        "code": "\nulonglong FUNC_0800856c(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  uint in_r12;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  if (param_1 == 0) {\n    return 0;\n  }\n  uVar6 = param_1 & 0x80000000;\n  uVar2 = param_1;\n  if ((int)uVar6 < 0) {\n    uVar2 = -param_1;\n  }\n  uVar1 = 0;\n  iVar4 = count_leading_zeroes(uVar2);\n  uVar5 = iVar4 + 0x15;\n  bVar9 = SBORROW4(uVar5,0x20);\n  uVar3 = iVar4 - 0xb;\n  bVar7 = (int)uVar3 < 0;\n  bVar8 = uVar3 == 0;\n  if ((int)uVar5 < 0x20) {\n    bVar9 = SCARRY4(uVar3,0xc);\n    iVar4 = iVar4 + 1;\n    bVar7 = iVar4 < 0;\n    bVar8 = iVar4 == 0;\n    uVar3 = uVar5;\n    if (!bVar8 && bVar7 == bVar9) {\n      uVar1 = uVar2 << (uVar5 & 0xff);\n      uVar2 = uVar2 >> (0xcU - iVar4 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar8 || bVar7 != bVar9) {\n    in_r12 = 0x20 - uVar3;\n  }\n  uVar2 = uVar2 << (uVar3 & 0xff);\n  if (bVar8 || bVar7 != bVar9) {\n    uVar2 = uVar2 | 0U >> (in_r12 & 0xff);\n  }\n  if (bVar8 || bVar7 != bVar9) {\n    uVar1 = 0 << (uVar3 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar5 < 0x433) {\n    return CONCAT44(uVar2 + (0x432 - uVar5) * 0x100000 | uVar6,uVar1);\n  }\n  uVar3 = ~(0x432 - uVar5);\n  if (0x1e < (int)uVar3) {\n    return CONCAT44(param_1,uVar2 >> (uVar3 - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  iVar4 = uVar3 - 0x13;\n  if (iVar4 == 0 || iVar4 < 0 != SCARRY4(uVar3 - 0x1f,0xc)) {\n    uVar3 = uVar3 + 1;\n    return CONCAT44(uVar6 | uVar2 >> (uVar3 & 0xff),\n                    uVar1 >> (uVar3 & 0xff) | uVar2 << (0x20 - uVar3 & 0xff));\n  }\n  return CONCAT44(param_1,uVar1 >> (0x20 - (0xcU - iVar4) & 0xff) | uVar2 << (0xcU - iVar4 & 0xff))\n         & 0x80000000ffffffff;\n}\n\n", 
        "called": [], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x0800856c", 
        "calling": [
            "FUN_0800a5a0", 
            "FUN_08009d78", 
            "FUN_08002c18"
        ], 
        "current_name": "FUNC_0800856c"
    }, 
    "FUN_08008b00": {
        "renaming": {
            "compareUintValues_08008a74": "compare_uint_values", 
            "param_1": "input_value", 
            "FUN_08008b00": "compare_and_return_uint_values_08008b00_08008b00"
        }, 
        "code": "undefined4 compare_and_return_uint_values_08008b00_08008b00(undefined4 input_value)\\n{\\n  compareUintValues_08008a74();\\n  return input_value;\\n}", 
        "called": [
            "FUN_08008a74"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08008b00", 
        "calling": [
            "FUN_08008b24", 
            "FUN_08008af0", 
            "FUN_08008b10"
        ], 
        "imported": true, 
        "current_name": "compare_and_return_uint_values_08008b00_08008b00"
    }, 
    "FUN_0800585c": {
        "renaming": {
            "FUN_0800585c": "updateDeviceFlagsIfFlagTwoIsSet_0800585c", 
            "PTR_DAT_08005878": "deviceFlags"
        }, 
        "code": "void updateDeviceFlagsIfFlagTwoIsSet_0800585c(void)\\n{\\n  if (PTR_DAT_08005878[1] == '\\x02') {\\n    PTR_DAT_08005878[1] = 3;\\n    updateDeviceFlags();\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08005790"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800585c", 
        "calling": [
            "FUN_08003a74", 
            "FUN_08001e98", 
            "FUN_080024c4"
        ], 
        "imported": true, 
        "current_name": "updateDeviceFlagsIfFlagTwoIsSet_0800585c"
    }, 
    "FUN_0800597c": {
        "renaming": {
            "FUN_0800597c": "triggerSystemCall_0800597c"
        }, 
        "code": "void triggerSystemCall_0800597c(void)\\n{\\n  software_interrupt(0x3f);\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800597c", 
        "calling": [
            "FUN_08005984"
        ], 
        "imported": true, 
        "current_name": "triggerSystemCall_0800597c"
    }, 
    "FUN_08009798": {
        "renaming": {
            "FUN_08009798": "decode_float_08009798", 
            "lVar3": "mantissa", 
            "uVar1": "exponent_diff", 
            "param_1": "float_bits", 
            "DAT_08009814": "float_mask", 
            "param_2": "float_mask", 
            "param_3": "unknown1", 
            "param_4": "unknown2", 
            "uVar2": "exponent"
        }, 
        "code": "long long decode_float_08009798(uint32_t float_bits, uint32_t DAT_08009814, uint32_t unknown1, uint32_t unknown2) {\\n  uint32_t exponent = (float_bits << 1) >> 0x15;\\n  uint32_t exponent_diff = exponent - 0x3ff;\\n  if ((int)exponent_diff < 0x14) {\\n    if ((int)exponent_diff < 0) {\\n      return ((uint64_t)float_bits & 0x80000000) << 0x20;\\n    }\\n    uint32_t mantissa_mask = ~(DAT_08009814 >> (exponent_diff & 0xff));\\n    uint64_t mantissa = (uint64_t)(float_bits & mantissa_mask) << 0x20;\\n    return mantissa;\\n  }\\n  else {\\n    if ((int)exponent_diff < 0x34) {\\n      uint32_t mantissa_mask = ~(0xffffffffU >> (exponent - 0x413 & 0xff));\\n      uint64_t mantissa = float_bits & mantissa_mask;\\n      uint64_t result = (uint64_t)mantissa << 0x20 | (uint64_t)(unknown1 & ~mantissa_mask);\\n      return result;\\n    }\\n    if (exponent_diff != 0x400) {\\n      uint64_t result = (uint64_t)float_bits << 0x20 | unknown1;\\n      return result;\\n    }\\n    uint64_t result = FUNC_080082d4(float_bits, DAT_08009814, unknown1, unknown2, unknown2);\\n    return result;\\n  }\\n}", 
        "called": [
            "FUN_080082d4"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08009798", 
        "calling": [
            "FUN_080005b4", 
            "FUN_08003b98", 
            "FUN_08004e30"
        ], 
        "imported": true, 
        "current_name": "decode_float_08009798"
    }, 
    "FUN_08008cd8": {
        "renaming": {
            "FUN_08008cd8": "FUNC_08008cd8"
        }, 
        "code": "\nuint FUNC_08008cd8(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08008e12:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if (uVar5 - 1 == 0 || uVar4 < 0x800000) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_08008e12;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n", 
        "called": [], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x08008cd8", 
        "calling": [
            "FUN_08003004", 
            "FUN_08002408", 
            "FUN_08004940", 
            "FUN_08002978", 
            "FUN_080005b4", 
            "FUN_08002908", 
            "FUN_080028bc", 
            "FUN_08001f00"
        ], 
        "current_name": "FUNC_08008cd8"
    }, 
    "FUN_08007930": {
        "renaming": {
            "FUN_08007930": "process_data_08007930", 
            "iVar5": "data_index", 
            "puVar1": "data_pointer", 
            "uVar3": "previous_data_value", 
            "uVar2": "data_value"
        }, 
        "code": "void process_data_08007930(void)\\n{\\n  uint32_t *data_pointer;\\n  uint32_t data_value;\\n  uint32_t previous_data_value;\\n  int data_index;\\n  data_pointer = data_array_pointer;\\n  if (*data_count_pointer != 0) {\\n    data_index = *(int *)(data_array_pointer + 0x14);\\n    data_value = get_bits();\\n    *(uint32_t *)(data_pointer + data_index * 4) = data_value;\\n    if (*(int *)(data_pointer + 0x14) == 3) {\\n      data_index = 0;\\n    }\\n    else {\\n      data_index = *(int *)(data_pointer + 0x14) + 1;\\n    }\\n    *(int *)(data_pointer + 0x14) = data_index;\\n    previous_data_value = *(uint32_t *)(data_pointer + 0x10);\\n    data_value = get_combined_data_value();\\n    if (data_value != previous_data_value) {\\n      if ((~previous_data_value & data_value) != 0) {\\n        enable_tasks(~previous_data_value & data_value);\\n      }\\n      if ((~data_value & previous_data_value) != 0) {\\n        set_odd_bits_in_array(~data_value & previous_data_value);\\n      }\\n      *(uint32_t *)(data_pointer + 0x10) = data_value;\\n    }\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08007884", 
            "FUN_080074c8", 
            "FUN_080078f4", 
            "FUN_08007520"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007930", 
        "calling": [
            "FUN_08007756"
        ], 
        "imported": true, 
        "current_name": "process_data_08007930"
    }, 
    "FUN_080082ba": {
        "renaming": {
            "FUN_080082ba": "doNothing_080082ba"
        }, 
        "code": "void doNothing_080082ba(void)\\n{\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080082ba", 
        "calling": [
            "FUN_08001ddc"
        ], 
        "imported": true, 
        "current_name": "doNothing_080082ba"
    }, 
    "FUN_08000188": {
        "renaming": {
            "PTR_DAT_080001a0": "is_initialized", 
            "FUN_08000188": "check_if_initialized_and_return_function_pointer_08000188", 
            "param_1": "function_pointer", 
            "PTR_FUN_080001a8": "function_to_return", 
            "DAT_080001a4": "global_variable"
        }, 
        "code": "undefined * check_if_initialized_and_return_function_pointer_08000188(undefined *function_pointer)\\n{\\n  if (*PTR_DAT_080001a0 == '\\0') {\\n    if (DAT_080001a4 != 0) {\\n      function_pointer = PTR_FUN_080001a8;\\n    }\\n    *PTR_DAT_080001a0 = 1;\\n  }\\n  return function_pointer;\\n}", 
        "called": [
            "FUN_0800b5b0"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08000188", 
        "calling": [], 
        "imported": true, 
        "current_name": "check_if_initialized_and_return_function_pointer_08000188"
    }, 
    "FUN_080082d0": {
        "renaming": {
            "FUN_080082d0": "FUNC_080082d0"
        }, 
        "code": "\nulonglong FUNC_080082d0(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if (uVar9 - 1 != 0 && 0xfffff < uVar11) goto LAB_080083e0;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n", 
        "called": [], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x080082d0", 
        "calling": [
            "FUN_08003004", 
            "FUN_08004940", 
            "FUN_0800a1bc", 
            "FUN_08009b24", 
            "FUN_080096e8", 
            "FUN_08009410", 
            "FUN_08009d78", 
            "FUN_0800adf0", 
            "FUN_0800af78", 
            "FUN_0800a5a0", 
            "FUN_08009990", 
            "FUN_0800a348", 
            "FUN_08001f00"
        ], 
        "current_name": "FUNC_080082d0"
    }, 
    "FUN_08009318": {
        "renaming": {
            "lVar6": "result", 
            "bVar4": "carry_occurred", 
            "iVar1": "end_reached", 
            "param_1": "input1", 
            "FUN_08009318": "calculate_result_08009318", 
            "param_2": "input2", 
            "param_3": "param3", 
            "param_4": "param4", 
            "uVar3": "mask", 
            "uVar2": "shift_amount", 
            "uVar5": "temp_result"
        }, 
        "code": "long long calculate_result_08009318(uint32_t input1, uint32_t input2, uint32_t param3, uint32_t param4) {\\n  int shift_amount = ((input2 << 1) >> 21) - 1023;\\n  if (shift_amount < 20) {\\n    if (shift_amount < 0) {\\n      uint64_t result = FUNC_080082d4(input1, input2, DAT_08009400, DAT_08009404, param4);\\n      int end_reached = is_end_of_string_reached_08008b60((int)result, (int)(result >> 32), 0, 0);\\n      result = ((uint64_t)input2 << 32) | input1;\\n      if (end_reached) {\\n        if ((int)input2 < 0) {\\n          result = 0x8000000000000000;\\n        }\\n        else {\\n          input1 |= input2;\\n          result = ((uint64_t)input1 << 32);\\n          if (input1 != 0) {\\n            result = ((uint64_t)DAT_0800940c) << 32;\\n          }\\n        }\\n      }\\n      return result;\\n    }\\n    else {\\n      uint32_t mask = DAT_08009408 >> (shift_amount & 0xff);\\n      uint64_t result = ((uint64_t)input2 << 32) | input1;\\n      if ((input2 & mask) | input1) {\\n        uint64_t temp_result = FUNC_080082d4(input1, input2, DAT_08009400, DAT_08009404, param4);\\n        int end_reached = is_end_of_string_reached_08008b60((int)temp_result, (int)(temp_result >> 32), 0, 0);\\n        result = ((uint64_t)input2 << 32) | input1;\\n        if (end_reached) {\\n          if (input2 > 0) {\\n            if (shift_amount == 20) {\\n              input2++;\\n            }\\n            else {\\n              uint32_t carry = ((uint32_t)1 << (52 - shift_amount));\\n              bool carry_occurred = __builtin_uadd_overflow(carry, input1, &input1);\\n              if (carry_occurred) {\\n                input2++;\\n              }\\n            }\\n          }\\n          result = ((uint64_t)input2 << 32) | (input1 & ~mask);\\n        }\\n      }\\n      return result;\\n    }\\n  }\\n  else {\\n    uint64_t result = ((uint64_t)input2 << 32) | input1;\\n    if (shift_amount == 1024) {\\n      result = FUNC_080082d4();\\n    }\\n    return result;\\n  }\\n}", 
        "called": [
            "FUN_080082d4", 
            "FUN_08008b60"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08009318", 
        "calling": [
            "FUN_08001994", 
            "FUN_08003004", 
            "FUN_08002c18"
        ], 
        "imported": true, 
        "current_name": "calculate_result_08009318"
    }, 
    "FUN_080018cc": {
        "renaming": {
            "param_1": "value", 
            "FUN_080018cc": "setParam_080018cc", 
            "DAT_080018f8": "PARAMS_START_ADDRESS"
        }, 
        "code": "void setParam_080018cc(uint value)\\n{\\n  uint* paramPtr = (uint*)(DAT_080018f8 + 0x14);\\n  uint currentValue = *paramPtr;\\n  *paramPtr = value | (currentValue & 0xfffffaaf);\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080018cc", 
        "calling": [
            "FUN_08001994"
        ], 
        "imported": true, 
        "current_name": "setParam_080018cc"
    }, 
    "FUN_080079e0": {
        "renaming": {
            "param_1": "bitIndex", 
            "FUN_080079e0": "setBitInArray_080079e0", 
            "DAT_08007a0c": "ARRAY_START_ADDRESS"
        }, 
        "code": "void setBitInArray_080079e0(byte bitIndex)\\n{\\n  int* arrayPtr = (int*)(DAT_08007a0c + ((uint)bitIndex >> 5) * 4);\\n  int bitMask = 1 << (bitIndex & 0x1f);\\n  *arrayPtr = bitMask;\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080079e0", 
        "calling": [
            "FUN_08007a70"
        ], 
        "imported": true, 
        "current_name": "setBitInArray_080079e0"
    }, 
    "FUN_08006a58": {
        "renaming": {
            "DAT_08006a88": "EXTENDED_ARRAY_START_ADDRESS", 
            "param_1": "bitIndex", 
            "FUN_08006a58": "setBitInExtendedArray_08006a58"
        }, 
        "code": "void setBitInExtendedArray_08006a58(byte bitIndex)\\n{\\n  int* arrayPtr = (int*)(DAT_08006a88 + (((uint)bitIndex >> 5) + 0x40) * 4);\\n  int bitMask = 1 << (bitIndex & 0x1f);\\n  *arrayPtr = bitMask;\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006a58", 
        "calling": [
            "FUN_08006dc4"
        ], 
        "imported": true, 
        "current_name": "setBitInExtendedArray_08006a58"
    }, 
    "FUN_08005a84": {
        "renaming": {
            "PTR_DAT_08005a94": "POINTER_ADDRESS", 
            "FUN_08005a84": "getValueFromPointer_08005a84"
        }, 
        "code": "undefined4 getValueFromPointer_08005a84(void)\\n{\\n  undefined4* ptr = (undefined4*)PTR_DAT_08005a94;\\n  return *ptr;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005a84", 
        "calling": [
            "FUN_08007756", 
            "FUN_08005a98", 
            "FUN_0800618c", 
            "FUN_08005cec", 
            "FUN_08000268"
        ], 
        "imported": true, 
        "current_name": "getValueFromPointer_08005a84"
    }, 
    "FUN_08008b10": {
        "renaming": {
            "in_ZR": "input_char", 
            "FUN_08008b10": "check_input_is_not_null_char_08008b10"
        }, 
        "code": "bool check_input_is_not_null_char_08008b10(void)\\n{\\n  char input_char;\\n  compare_and_return_uint_values_08008b00_08008b00();\\n  return input_char != '\\0';\\n}", 
        "called": [
            "FUN_08008b00"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08008b10", 
        "calling": [
            "FUN_0800a5a0", 
            "FUN_08009d78"
        ], 
        "imported": true, 
        "current_name": "check_input_is_not_null_char_08008b10"
    }, 
    "FUN_08004e30": {
        "renaming": {
            "FUN_08004e30": "FUNC_08004e30"
        }, 
        "code": "\nundefined4 FUNC_08004e30(int param_1,uint param_2)\n\n{\n  undefined uVar1;\n  undefined2 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined8 uVar5;\n  \n  switch(param_1) {\n  case 0:\n  case 1:\n  case 2:\n    iVar4 = check_result_and_return_concatenation_0800923c(param_2,0);\n    if (iVar4 != 0) {\n      return 8;\n    }\n    *(uint *)(PTR_DAT_080051a8 + param_1 * 4) = param_2;\n    break;\n  case 3:\n    iVar4 = is_input_empty_08009228(param_2,DAT_080051ac);\n    if (iVar4 != 0) {\n      return 9;\n    }\n    uVar5 = FUNC_08008590(param_2);\n    uVar5 = decode_float_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = calculate_value_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0xd] = uVar1;\n    break;\n  case 4:\n    *(uint *)(PTR_DAT_080051a8 + 0x10) = param_2;\n    break;\n  case 5:\n    *(uint *)(PTR_DAT_080051a8 + 0x14) = param_2;\n    break;\n  case 6:\n    uVar5 = FUNC_08008590(param_2);\n    uVar5 = decode_float_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = calculate_value_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x18) = uVar2;\n    break;\n  case 7:\n    uVar5 = FUNC_08008590(param_2);\n    uVar5 = decode_float_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = calculate_value_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3c] = uVar1;\n    break;\n  case 8:\n    uVar3 = FUNC_08008eec(param_2,DAT_080051b0);\n    uVar3 = FUNC_08008eec(uVar3,DAT_080051b0);\n    *(undefined4 *)(PTR_DAT_080051a8 + 0x20) = uVar3;\n    break;\n  case 9:\n    *(uint *)(PTR_DAT_080051a8 + 0x24) = param_2 & 0x7fffffff;\n    break;\n  case 10:\n    *(uint *)(PTR_DAT_080051a8 + 0x1c) = param_2;\n    break;\n  case 0xb:\n    uVar5 = FUNC_08008590(param_2);\n    uVar5 = decode_float_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = calculate_value_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3e] = uVar1;\n    break;\n  case 0xc:\n    uVar5 = FUNC_08008590(param_2);\n    uVar5 = decode_float_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = calculate_value_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3d] = uVar1;\n    break;\n  case 0xd:\n    iVar4 = checkResultIsNotEmpty_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 1;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfe;\n    }\n    break;\n  case 0xe:\n    iVar4 = checkResultIsNotEmpty_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 2;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfd;\n    }\n    break;\n  case 0xf:\n    iVar4 = checkResultIsNotEmpty_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 4;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfb;\n    }\n    break;\n  case 0x10:\n    iVar4 = checkResultIsNotEmpty_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 8;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xf7;\n    }\n    checkFlagStatus_0800192c();\n    break;\n  case 0x11:\n    iVar4 = checkResultIsNotEmpty_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 0x10;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xef;\n    }\n    break;\n  case 0x12:\n    uVar5 = FUNC_08008590(param_2);\n    uVar5 = decode_float_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = calculate_value_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x2a) = uVar2;\n    break;\n  case 0x13:\n    *(uint *)(PTR_DAT_080051a8 + 0x2c) = param_2;\n    break;\n  case 0x14:\n    *(uint *)(PTR_DAT_080051a8 + 0x30) = param_2;\n    break;\n  case 0x15:\n    uVar5 = FUNC_08008590(param_2);\n    uVar5 = decode_float_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = calculate_value_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x34) = uVar2;\n    break;\n  case 0x16:\n    *(uint *)(PTR_DAT_080051a8 + 0x38) = param_2;\n    break;\n  case 0x17:\n    uVar5 = FUNC_08008590(param_2);\n    uVar5 = decode_float_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = calculate_value_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x1a) = uVar2;\n    break;\n  default:\n    return 6;\n  }\n  initializeMemory_08004c2a();\n  return 0;\n}\n\n", 
        "called": [
            "FUN_0800923c", 
            "FUN_0800192c", 
            "FUN_08009214", 
            "FUN_08009798", 
            "FUN_08004c2a", 
            "FUN_08009228", 
            "FUN_08008590", 
            "FUN_08008bf0", 
            "FUN_08009654", 
            "FUN_08008eec"
        ], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x08004e30", 
        "calling": [
            "FUN_08003b98"
        ], 
        "current_name": "FUNC_08004e30"
    }, 
    "FUN_08008c30": {
        "renaming": {
            "param_1": "mantissa", 
            "param_2": "exponent", 
            "FUN_08008c30": "calculateFloat_08008c30"
        }, 
        "code": "uint calculateFloat_08008c30(uint mantissa, uint exponent)\\n{\\n  uint shiftedMantissa = mantissa * 2;\\n  uint exponentShifted = shiftedMantissa + 0x90000000;\\n  uint shiftedMantissaOverflow = shiftedMantissa + 0x8fe00000;\\n  bool isExponentOverflow = shiftedMantissa < 0x70000000;\\n  uint result = exponentShifted;\\n  if (!isExponentOverflow) {\\n    result = shiftedMantissaOverflow;\\n  }\\n  bool isSpecialCase = result == 0;\\n  if (!isExponentOverflow && exponentShifted >= 0x200000) {\\n    isSpecialCase = shiftedMantissaOverflow == 0x1fc00000;\\n  }\\n  if ((isExponentOverflow || exponentShifted < 0x200000 || 0x1fc00000 < shiftedMantissaOverflow) || isSpecialCase) {\\n    if ((exponent & 0x40000000) != 0) {\\n      if (((int)shiftedMantissa >> 0x15 == -1) && ((mantissa | exponent << 0xc) != 0)) {\\n        return 0x7fc00000;\\n      }\\n      return exponent & 0x80000000 | 0x7f800000;\\n    }\\n    if ((int)(shiftedMantissaOverflow + 0x92e00000) < 0 != SCARRY4(exponentShifted,0x2e00000)) {\\n      return exponent & 0x80000000;\\n    }\\n    uint exponentShift = 0x18 - (shiftedMantissaOverflow + 0x92e00000 >> 0x15);\\n    uint shiftedMantissaNormalized = mantissa >> (exponentShift & 0xff);\\n    if (mantissa << (0x20 - exponentShift & 0xff) != 0) {\\n      shiftedMantissaNormalized = shiftedMantissaNormalized | 1;\\n    }\\n    uint mantissaNormalized = shiftedMantissaNormalized | (exponent & 0x1fffff | 0x100000) << (0x20 - exponentShift & 0xff);\\n    uint exponentNormalized = (exponent & 0x1fffff | 0x100000) >> (exponentShift & 0xff) << 1;\\n    result = (exponent & 0x80000000 | mantissaNormalized >> 0x1d) + exponentNormalized * 4 + (uint)(0x7fffffff < mantissa * 8);\\n    if (mantissa * 8 == 0x80000000) {\\n      result = result & 0xfffffffe;\\n    }\\n  }\\n  return result;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08008c30", 
        "calling": [
            "FUN_08001994", 
            "FUN_08003004", 
            "FUN_080046d0", 
            "FUN_08002638", 
            "FUN_08004940", 
            "FUN_08002978", 
            "FUN_080005b4", 
            "FUN_0800056c", 
            "FUN_080044e8", 
            "FUN_08001f00"
        ], 
        "imported": true, 
        "current_name": "calculateFloat_08008c30"
    }, 
    "FUN_080082d4": {
        "renaming": {
            "FUN_080082d4": "FUNC_080082d4"
        }, 
        "code": "\nulonglong FUNC_080082d4(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if (uVar7 - 1 != 0 && 0xfffff < uVar10) goto LAB_080083e0;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n", 
        "called": [], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x080082d4", 
        "calling": [
            "FUN_0800b2e8", 
            "FUN_08009798", 
            "FUN_0800a1bc", 
            "FUN_08009b24", 
            "FUN_08009d78", 
            "FUN_0800adf0", 
            "FUN_0800af78", 
            "FUN_0800a5a0", 
            "FUN_08009318", 
            "FUN_080094c0", 
            "FUN_08009990", 
            "FUN_0800a348", 
            "FUN_08009654", 
            "FUN_08001f00"
        ], 
        "current_name": "FUNC_080082d4"
    }, 
    "FUN_08008590": {
        "renaming": {
            "FUN_08008590": "FUNC_08008590"
        }, 
        "code": "\nulonglong FUNC_08008590(uint param_1,undefined4 param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint in_r12;\n  bool bVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar5 = param_1 << 1;\n  bVar9 = uVar5 == 0;\n  uVar1 = (uint)((param_1 & 0x80000000) != 0) << 0x1f;\n  uVar4 = (uint)((int)uVar5 >> 3) >> 1;\n  uVar3 = uVar1 | uVar4;\n  param_1 = param_1 << 0x1d;\n  if (!bVar9) {\n    param_4 = uVar5 & 0xff000000;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff000000;\n  }\n  if (!bVar9) {\n    return CONCAT44(uVar3,param_1) ^ 0x3800000000000000;\n  }\n  if ((uVar5 & 0xffffff) == 0) {\n    return CONCAT44(uVar3,param_1);\n  }\n  if (param_4 == 0xff000000) {\n    return CONCAT44(uVar3,param_1) | 0x8000000000000;\n  }\n  uVar2 = param_1;\n  uVar5 = uVar4;\n  if (uVar4 == 0) {\n    uVar2 = 0;\n    uVar5 = param_1;\n  }\n  iVar6 = count_leading_zeroes(uVar5);\n  if (uVar4 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar7 = iVar6 - 0xb;\n  bVar10 = SBORROW4(uVar7,0x20);\n  uVar4 = iVar6 - 0x2b;\n  bVar9 = (int)uVar4 < 0;\n  bVar8 = uVar4 == 0;\n  if ((int)uVar7 < 0x20) {\n    bVar10 = SCARRY4(uVar4,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar9 = iVar6 < 0;\n    bVar8 = iVar6 == 0;\n    uVar4 = uVar7;\n    if (!bVar8 && bVar9 == bVar10) {\n      uVar2 = uVar5 << (uVar7 & 0xff);\n      uVar5 = uVar5 >> (0xcU - iVar6 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar8 || bVar9 != bVar10) {\n    in_r12 = 0x20 - uVar4;\n  }\n  uVar5 = uVar5 << (uVar4 & 0xff);\n  if (bVar8 || bVar9 != bVar10) {\n    uVar5 = uVar5 | uVar2 >> (in_r12 & 0xff);\n  }\n  if (bVar8 || bVar9 != bVar10) {\n    uVar2 = uVar2 << (uVar4 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar7 < 0x381) {\n    return CONCAT44(uVar5 + (0x380 - uVar7) * 0x100000 | uVar1,uVar2);\n  }\n  uVar4 = ~(0x380 - uVar7);\n  if (0x1e < (int)uVar4) {\n    return CONCAT44(uVar3,uVar5 >> (uVar4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  iVar6 = uVar4 - 0x13;\n  if (iVar6 == 0 || iVar6 < 0 != SCARRY4(uVar4 - 0x1f,0xc)) {\n    uVar4 = uVar4 + 1;\n    return CONCAT44(uVar1 | uVar5 >> (uVar4 & 0xff),\n                    uVar2 >> (uVar4 & 0xff) | uVar5 << (0x20 - uVar4 & 0xff));\n  }\n  return CONCAT44(uVar3,uVar2 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar5 << (0xcU - iVar6 & 0xff)) &\n         0x80000000ffffffff;\n}\n\n", 
        "called": [], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x08008590", 
        "calling": [
            "FUN_08003004", 
            "FUN_080046d0", 
            "FUN_08004940", 
            "FUN_080044e8", 
            "FUN_08003b98", 
            "FUN_08001994", 
            "FUN_08002408", 
            "FUN_08002638", 
            "FUN_08002978", 
            "FUN_080005b4", 
            "FUN_0800056c", 
            "FUN_08002c18", 
            "FUN_08004e30", 
            "FUN_08001f00"
        ], 
        "current_name": "FUNC_08008590"
    }, 
    "FUN_08007bf0": {
        "renaming": {
            "param_1": "newValue", 
            "_DAT_40000024": "MIN_GLOBAL_VALUE", 
            "FUN_08007bf0": "updateGlobalValue_08007bf0", 
            "_DAT_4000002c": "GLOBAL_VALUE"
        }, 
        "code": "void updateGlobalValue_08007bf0(uint newValue)\\n{\\n  _DAT_4000002c = newValue;\\n  if (newValue <= _DAT_40000024) {\\n    _DAT_40000024 = newValue;\\n  }\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007bf0", 
        "calling": [
            "FUN_08005324"
        ], 
        "imported": true, 
        "current_name": "updateGlobalValue_08007bf0"
    }, 
    "FUN_08007ad0": {
        "renaming": {
            "_DAT_40000018": "ptr_5", 
            "_DAT_40000008": "ptr_2", 
            "_DAT_40000038": "ptr_11", 
            "_DAT_40000028": "global_data_3", 
            "_DAT_40000010": "ptr_4", 
            "_DAT_40000000": "ptr", 
            "_DAT_40000020": "ptr_7", 
            "_DAT_40000004": "ptr_1", 
            "_DAT_40000048": "ptr_14", 
            "set_data_value_and_set_bit_in_array_08007a70": "set_data_value_and_set_bit_in_array", 
            "_DAT_40000034": "ptr_10", 
            "_DAT_40000024": "ptr_8", 
            "PTR_DAT_08007b68": "global_data_2", 
            "DAT_08007b6c": "global_data_1", 
            "_DAT_40000040": "ptr_13", 
            "_DAT_4000004c": "ptr_15", 
            "_DAT_4000003c": "ptr_12", 
            "FUN_08007ad0": "initialize_data_08007ad0", 
            "_DAT_4000000c": "ptr_3", 
            "_DAT_4000002c": "ptr_9", 
            "_DAT_4000001c": "ptr_6"
        }, 
        "code": "void initialize_data_08007ad0(void)\\n{\\n  setFlag(0x40000000);\\n  uint32_t* _DAT_40000000 = (uint32_t*)0x40000000;\\n  for(int i=0;i<10;i++)\\n  {\\n    _DAT_40000000[i] = 0;\\n  }\\n  _DAT_40000000[9] = (uint32_t)((uint64_t)DAT_08007b6c * (uint64_t)*PTR_DAT_08007b68 >> 0x38) - 1;\\n  for(int i=10;i<16;i++)\\n  {\\n    _DAT_40000000[i] = 0;\\n  }\\n  set_data_value_and_set_bit_in_array(0x40000000,0,0);\\n  return;\\n}", 
        "called": [
            "FUN_08007a10", 
            "FUN_08007a70"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007ad0", 
        "calling": [
            "FUN_08007e08"
        ], 
        "imported": true, 
        "current_name": "initialize_data_08007ad0"
    }, 
    "FUN_080005b4": {
        "renaming": {
            "FUN_080005b4": "FUNC_080005b4"
        }, 
        "code": "\nuint FUNC_080005b4(undefined4 param_1)\n\n{\n  undefined *puVar1;\n  undefined uVar2;\n  int iVar3;\n  undefined4 uVar4;\n  uint uVar5;\n  undefined4 uVar6;\n  undefined8 uVar7;\n  undefined4 local_94 [4];\n  undefined4 local_84;\n  undefined4 local_80;\n  undefined4 local_7c;\n  undefined4 uStack_78;\n  undefined4 uStack_74;\n  undefined4 auStack_70 [6];\n  undefined4 local_58;\n  byte local_52;\n  undefined local_51 [20];\n  byte local_3d;\n  byte local_3c;\n  byte local_3b;\n  byte local_3a;\n  char local_39;\n  undefined4 local_38;\n  undefined4 local_34;\n  sbyte local_2f;\n  char local_2e;\n  char local_2d;\n  undefined4 local_2c;\n  byte local_27;\n  ushort local_26;\n  uint local_24;\n  \n  if (PTR_DAT_08000808[1] == '\\x06') {\n    uVar5 = 0xc;\n  }\n  else {\n    local_51[0] = 0;\n    local_26 = 0;\n    local_27 = 0;\n    local_2c = DAT_0800080c;\n    local_2d = '\\0';\n    local_2e = '\\0';\n    fillMemoryWithByte_0800b430(auStack_70 + 3,0,0xc);\n    fillMemoryWithByte_0800b430(auStack_70,0,0xc);\n    *PTR_DAT_08000810 = 0;\n    local_2f = 0;\n    while (iVar3 = parse_and_validate_input_0800184c(&local_52,auStack_70 + 6,param_1,local_51), iVar3 != 0) {\n      uVar7 = FUNC_08008590(local_58);\n      uVar7 = decode_float_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n      local_24 = calculateValue_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n      if (local_52 == 0x47) {\n        switch(local_24) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          local_2f = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          local_2f = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          local_2f = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          local_2f = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          local_2f = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          local_2f = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          local_2f = 6;\n        }\n        switch(local_24) {\n        case 0:\n          PTR_DAT_08000ca0[1] = 0;\n          break;\n        case 1:\n          PTR_DAT_08000ca0[1] = 1;\n          break;\n        case 2:\n          PTR_DAT_08000ca0[1] = 2;\n          break;\n        case 3:\n          PTR_DAT_08000ca0[1] = 3;\n          break;\n        case 4:\n          local_2e = '\\x01';\n          break;\n        default:\n          *PTR_DAT_08000ca0 = 3;\n          break;\n        case 10:\n          local_2e = '\\x02';\n          break;\n        case 0x11:\n          set_data_values_08000478(0,1,2);\n          break;\n        case 0x12:\n          set_data_values_08000478(2,0,1);\n          break;\n        case 0x13:\n          set_data_values_08000478(1,2,0);\n          break;\n        case 0x14:\n          PTR_DAT_08000ca0[3] = 1;\n          break;\n        case 0x15:\n          PTR_DAT_08000ca0[3] = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          uVar4 = FUNC_08008eec(local_58,DAT_08000ca4);\n          uVar7 = FUNC_08008590(uVar4);\n          uVar7 = decode_float_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = calculateValue_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          switch(local_24) {\n          case 0x118:\n            local_2e = '\\x03';\n            break;\n          case 0x119:\n            local_2e = '\\x04';\n            break;\n          default:\n            *PTR_DAT_08000ca0 = 3;\n            break;\n          case 300:\n            local_2e = '\\x05';\n            break;\n          case 0x12d:\n            local_2e = '\\x06';\n          }\n          break;\n        case 0x35:\n          local_2d = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          PTR_DAT_08000ca0[0x1c] = (char)local_24 + -0x36;\n          break;\n        case 0x50:\n          PTR_DAT_08000ca0[1] = 4;\n          break;\n        case 0x5a:\n          PTR_DAT_08000ca0[4] = 1;\n          break;\n        case 0x5b:\n          PTR_DAT_08000ca0[4] = 0;\n          break;\n        case 0x5c:\n          uVar4 = FUNC_08008eec(local_58,DAT_08000ca4);\n          uVar7 = FUNC_08008590(uVar4);\n          uVar7 = decode_float_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = calculateValue_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          if (local_24 == 0x398) {\n            local_2e = '\\a';\n          }\n          else if (local_24 == 0x399) {\n            local_2e = '\\b';\n          }\n          else {\n            *PTR_DAT_08000ca0 = 3;\n          }\n          break;\n        case 0x5d:\n          PTR_DAT_08000ca0[2] = 1;\n          break;\n        case 0x5e:\n          PTR_DAT_08000ca0[2] = 0;\n        }\n      }\n      else if (local_52 == 0x4d) {\n        if (local_24 == 0x1e) {\nLAB_08000b96:\n          local_2f = 5;\n        }\n        else if ((int)local_24 < 0x1f) {\n          if ((int)local_24 < 3) {\n            if (-1 < (int)local_24) goto LAB_08000b96;\n          }\n          else if (local_24 - 3 < 3) {\n            local_2f = 8;\n          }\n        }\n        switch(local_24) {\n        case 0:\n          PTR_DAT_08000ca0[5] = 1;\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          PTR_DAT_08000ca0[5] = 2;\n          break;\n        case 3:\n          PTR_DAT_08000ca0[6] = 1;\n          break;\n        case 4:\n          PTR_DAT_08000ca0[6] = 0xff;\n          break;\n        case 5:\n          PTR_DAT_08000ca0[6] = 0;\n          break;\n        default:\n          *PTR_DAT_08000ca0 = 3;\n          break;\n        case 7:\n          PTR_DAT_08000ca0[7] = 2;\n          break;\n        case 8:\n          PTR_DAT_08000ca0[7] = 1;\n          break;\n        case 9:\n          PTR_DAT_08000ca0[7] = 0;\n        }\n      }\n      if (local_2f != 0) {\n        if (((int)(uint)local_26 >> local_2f & 1U) == 0) {\n          local_26 = local_26 | (ushort)(1 << local_2f);\n        }\n        else {\n          *PTR_DAT_08000ca0 = 5;\n        }\n        local_2f = 0;\n      }\n    }\n    if (*PTR_DAT_08000ff0 == '\\0') {\n      local_34 = 0;\n      local_38 = 0;\n      local_39 = '\\0';\n      local_51[0] = 0;\nswitchD_08000d18_caseD_47:\n      iVar3 = parse_and_validate_input_0800184c(&local_52,auStack_70 + 6,param_1,local_51);\n      if (iVar3 != 0) {\n        switch(local_52) {\n        case 0x46:\n          iVar3 = check_result_and_return_concatenation_0800923c(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          if (PTR_DAT_08000ff0[2] == '\\0') {\n            uVar4 = calculate_result_0800056c(local_58);\n            *(undefined4 *)(PTR_DAT_08000ff0 + 8) = uVar4;\n          }\n          else {\n            local_2c = calculate_result_0800056c(local_58);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          *PTR_DAT_08000ff0 = 3;\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          uVar5 = (uint)local_52;\n          uVar4 = calculate_result_0800056c(local_58);\n          auStack_70[uVar5 - 0x49] = uVar4;\n          break;\n        case 0x4c:\n          uVar7 = FUNC_08008590(local_58);\n          uVar7 = decode_float_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_39 = calculate_value_08008bf0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          break;\n        case 0x50:\n          local_34 = local_58;\n          break;\n        case 0x52:\n          local_38 = calculate_result_0800056c(local_58);\n          break;\n        case 0x53:\n          iVar3 = is_input_empty_08009228(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          break;\n        case 0x54:\n          iVar3 = is_input_empty_08009228(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          uVar7 = FUNC_08008590(local_58);\n          uVar7 = decode_float_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          uVar2 = calculate_value_08008bf0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          PTR_DAT_08000ff0[0x18] = uVar2;\n          break;\n        case 0x58:\n          auStack_70[3] = calculate_result_0800056c(local_58);\n          local_27 = local_27 | 1;\n          break;\n        case 0x59:\n          auStack_70[4] = calculate_result_0800056c(local_58);\n          local_27 = local_27 | 2;\n          break;\n        case 0x5a:\n          auStack_70[5] = calculate_result_0800056c(local_58);\n          local_27 = local_27 | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      if (*PTR_DAT_08000ff0 == '\\0') {\n        if (PTR_DAT_08000ff4[1] != '\\a') {\n          checkAndUpdateCharacter_0800525c((int)(char)PTR_DAT_08000ff0[6]);\n          update_status_08000220(PTR_DAT_08000ff0[7]);\n        }\n        if ((local_26 & 0x200) != 0) {\n          iVar3 = verify_checksum_08004d7c(PTR_DAT_08000ff0[0x1c],&local_7c);\n          puVar1 = PTR_DAT_08000ff0;\n          if (iVar3 == 0) {\n            return 10;\n          }\n          *(undefined4 *)(PTR_DAT_08000ff0 + 0x20) = local_7c;\n          *(undefined4 *)(puVar1 + 0x24) = uStack_78;\n          *(undefined4 *)(puVar1 + 0x28) = uStack_74;\n        }\n        switch(local_2e) {\n        case '\\x01':\n          iVar3 = is_input_empty_08009228(local_34,0);\n          if (iVar3 == 0) {\n            if (PTR_DAT_08000ff4[1] != '\\a') {\n              display_alarm_until_condition_met_08002fd4_08002408(local_34);\n            }\n          }\n          else {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          break;\n        case '\\x02':\n          uVar7 = FUNC_08008590(local_34);\n          uVar7 = decode_float_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = calculateValue_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          if ((((local_39 == '\\x02') || (local_39 == '\\x14')) && (-1 < (int)local_24)) &&\n             ((int)local_24 < 7)) {\n            if ((local_27 == 0) && (local_39 == '\\x02')) {\n              *PTR_DAT_08000ff0 = 6;\n            }\n            else {\n              if ((int)local_24 < 1) {\n                local_24 = (uint)(byte)PTR_DAT_08001304[0x1c];\n              }\n              else {\n                local_24 = local_24 - 1;\n              }\n              iVar3 = verify_checksum_08004d7c(local_24 & 0xff,local_94);\n              if (iVar3 == 0) {\n                return 10;\n              }\n              for (local_3a = 0; local_3a < 3; local_3a = local_3a + 1) {\n                if (((int)(uint)local_27 >> local_3a & 1U) != 0) {\n                  if (local_39 == '\\x14') {\n                    uVar5 = (uint)local_3a;\n                    uVar4 = FUNC_08008cd8(*(undefined4 *)(PTR_DAT_08001304 + (local_3a + 2) * 4 + 4),\n                                         auStack_70[local_3a + 3]);\n                    local_94[uVar5] = uVar4;\n                  }\n                  else {\n                    local_94[local_3a] = auStack_70[local_3a + 3];\n                  }\n                }\n              }\n              set_memory_with_checksum_08004bf4(local_24 & 0xff,local_94);\n              puVar1 = PTR_DAT_08001304;\n              if (local_24 == (byte)PTR_DAT_08001304[0x1c]) {\n                *(undefined4 *)(PTR_DAT_08001304 + 0x20) = local_94[0];\n                *(undefined4 *)(puVar1 + 0x24) = local_94[1];\n                *(undefined4 *)(puVar1 + 0x28) = local_94[2];\n              }\n            }\n          }\n          else {\n            *PTR_DAT_08000ff0 = 3;\n          }\n          local_27 = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (local_27 != 0) {\n            for (local_3b = 0; local_3b < 3; local_3b = local_3b + 1) {\n              if (((int)(uint)local_27 >> local_3b & 1U) == 0) {\n                auStack_70[local_3b + 3] =\n                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 2) * 4 + 4);\n              }\n              else if (PTR_DAT_08001304[4] == '\\0') {\n                uVar5 = (uint)local_3b;\n                uVar4 = FUNC_08008cdc(auStack_70[local_3b + 3],\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 2) * 4 + 4));\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n              else {\n                uVar6 = auStack_70[local_3b + 3];\n                uVar4 = FUNC_08008cdc(*(undefined4 *)(PTR_DAT_08001304 + (local_3b + 8) * 4),\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 10) * 4 + 4));\n                uVar5 = (uint)local_3b;\n                uVar4 = FUNC_08008cdc(uVar6,uVar4);\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n            }\n            checkDeviceStatusAndUpdateIfNecessary_08001e98(auStack_70[3],auStack_70[4],auStack_70[5],\n                         *(undefined4 *)(PTR_DAT_08001308 + 0x14),0);\n          }\n          if (local_2e == '\\x05') {\n            iVar3 = verify_checksum_08004d7c(7,local_94 + 3);\n            if (iVar3 == 0) {\n              return 10;\n            }\n          }\n          else {\n            iVar3 = verify_checksum_08004d7c(6,local_94 + 3);\n            if (iVar3 == 0) {\n              return 10;\n            }\n          }\n          checkDeviceStatusAndUpdateIfNecessary_08001e98(local_94[3],local_84,local_80,*(undefined4 *)(PTR_DAT_08001308 + 0x14),0);\n          puVar1 = PTR_DAT_08001304;\n          *(undefined4 *)(PTR_DAT_08001304 + 0xc) = local_94[3];\n          *(undefined4 *)(puVar1 + 0x10) = local_84;\n          *(undefined4 *)(puVar1 + 0x14) = local_80;\n          local_27 = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (local_2e == '\\x06') {\n            set_memory_with_checksum_08004bf4(7,PTR_DAT_0800130c);\n          }\n          else {\n            set_memory_with_checksum_08004bf4(6,PTR_DAT_0800130c);\n          }\n          break;\n        case '\\a':\n          if (local_27 == 0) {\n            *PTR_DAT_08001304 = 6;\n          }\n          else {\n            for (local_3c = 0; local_3c < 3; local_3c = local_3c + 1) {\n              if (((int)(uint)local_27 >> local_3c & 1U) != 0) {\n                uVar4 = FUNC_08008cd8(*(undefined4 *)(PTR_DAT_08001304 + (local_3c + 2) * 4 + 4),\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3c + 8) * 4));\n                uVar5 = (uint)local_3c;\n                uVar4 = FUNC_08008cd8(uVar4,auStack_70[local_3c + 3]);\n                *(undefined4 *)(PTR_DAT_08001304 + (uVar5 + 10) * 4 + 4) = uVar4;\n              }\n            }\n          }\n          local_27 = 0;\n          break;\n        case '\\b':\n          fillMemoryWithByte_0800b430(PTR_DAT_08001310,0,0xc);\n        }\n        if (((local_26 & 4) != 0) || (local_27 != 0)) {\n          if ((PTR_DAT_08001574[2] != '\\0') &&\n             ((iVar3 = is_input_empty_08009228(local_2c,0), iVar3 != 0 && (PTR_DAT_08001574[1] != '\\x04')))) {\n            *PTR_DAT_08001574 = 6;\n          }\n          if (((local_2d != '\\0') && (PTR_DAT_08001574[1] != '\\0')) &&\n             (PTR_DAT_08001574[1] != '\\x01')) {\n            *PTR_DAT_08001574 = 6;\n          }\n          if (*PTR_DAT_08001574 != '\\0') {\n            return (uint)(byte)*PTR_DAT_08001574;\n          }\n          for (local_3d = 0; puVar1 = PTR_DAT_08001840, local_3d < 3; local_3d = local_3d + 1) {\n            if (((int)(uint)local_27 >> local_3d & 1U) == 0) {\n              auStack_70[local_3d + 3] = *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 2) * 4 + 4);\n            }\n            else if (local_2d == '\\0') {\n              if (PTR_DAT_08001574[4] == '\\0') {\n                uVar5 = (uint)local_3d;\n                uVar4 = FUNC_08008cdc(auStack_70[local_3d + 3],\n                                     *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 2) * 4 + 4));\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n              else {\n                uVar6 = auStack_70[local_3d + 3];\n                uVar4 = FUNC_08008cdc(*(undefined4 *)(PTR_DAT_08001574 + (local_3d + 8) * 4),\n                                     *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 10) * 4 + 4));\n                uVar5 = (uint)local_3d;\n                uVar4 = FUNC_08008cdc(uVar6,uVar4);\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n            }\n          }\n          if ((byte)PTR_DAT_08001574[1] < 5) {\n                    /* WARNING: Could not recover jumptable at 0x08001474. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n            uVar5 = (*(code *)(&switchD_08001474::switchdataD_08001478)[(byte)PTR_DAT_08001574[1]])\n                              ();\n            return uVar5;\n          }\n          if (*PTR_DAT_08001840 != '\\0') {\n            return (uint)(byte)*PTR_DAT_08001840;\n          }\n          *(undefined4 *)(PTR_DAT_08001840 + 0xc) = auStack_70[3];\n          *(undefined4 *)(puVar1 + 0x10) = auStack_70[4];\n          *(undefined4 *)(puVar1 + 0x14) = auStack_70[5];\n        }\n        if (PTR_DAT_08001840[5] != '\\0') {\n          display_alarm_until_condition_met_08002fd4();\n          PTR_DAT_08001848[0x10] = 0;\n          if (PTR_DAT_08001840[5] == '\\x02') {\n            enable_task_execution_if_not_already_enabled_080025e8();\n          }\n          else {\n            PTR_DAT_08001840[5] = 0;\n          }\n        }\n        uVar5 = (uint)(byte)*PTR_DAT_08001840;\n      }\n      else {\n        uVar5 = (uint)(byte)*PTR_DAT_08000ff0;\n      }\n    }\n    else {\n      uVar5 = (uint)(byte)*PTR_DAT_08000ff0;\n    }\n  }\n  return uVar5;\n}\n\n", 
        "called": [
            "FUN_0800923c", 
            "FUN_08009798", 
            "FUN_08002fd4", 
            "FUN_0800525c", 
            "FUN_08008bf0", 
            "FUN_08008cd8", 
            "FUN_08002408", 
            "FUN_08008cdc", 
            "FUN_08001e98", 
            "FUN_0800184c", 
            "FUN_0800056c", 
            "FUN_08009228", 
            "FUN_08008590", 
            "FUN_08001f00", 
            "FUN_08008894", 
            "FUN_08000220", 
            "FUN_08000478", 
            "FUN_08008ba0", 
            "FUN_08004d7c", 
            "FUN_0800b430", 
            "FUN_080025e8", 
            "FUN_08004bf4", 
            "FUN_08009214", 
            "FUN_08008c30", 
            "FUN_0800981c", 
            "FUN_080098d0", 
            "FUN_08008eec"
        ], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x080005b4", 
        "calling": [
            "FUN_080039bc", 
            "FUN_08003b98"
        ], 
        "current_name": "FUNC_080005b4"
    }, 
    "FUN_080039a0": {
        "renaming": {
            "PTR_DAT_080039b8": "game_status", 
            "send_help_message_08004228": "display_help_message", 
            "resetData_08003980": "reset_game_data", 
            "FUN_080039a0": "initialize_game_080039a0"
        }, 
        "code": "void initialize_game_080039a0(void)\\n{\\n  resetData_08003980();\\n  display_help_message();\\n  *(int *)PTR_DAT_080039b8 = 1;\\n  return;\\n}", 
        "called": [
            "FUN_08004228", 
            "FUN_08003980"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080039a0", 
        "calling": [
            "FUN_08001ddc"
        ], 
        "imported": true, 
        "current_name": "initialize_game_080039a0"
    }, 
    "FUN_08009204": {
        "renaming": {
            "FUN_08009204": "calculateResultAndReturnConcatenation_08009204_08009204", 
            "param_1": "param1", 
            "param_2": "param2"
        }, 
        "code": "undefined8 calculateResultAndReturnConcatenation_08009204_08009204(undefined4 param1, undefined4 param2)\\n{\\n  calculateResult_0800919c();\\n  return CONCAT44(param2, param1);\\n}", 
        "called": [
            "FUN_0800919c"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08009204", 
        "calling": [
            "FUN_0800923c", 
            "FUN_08009214", 
            "FUN_080091fc", 
            "FUN_08009228"
        ], 
        "imported": true, 
        "current_name": "calculateResultAndReturnConcatenation_08009204_08009204"
    }, 
    "FUN_080029d8": {
        "renaming": {
            "FUN_080029d8": "processInputAndCalculateResult_080029d8", 
            "iVar1": "isResultNotEmpty", 
            "param_1": "inputParam", 
            "param_2": "inputStructAddr", 
            "is_end_of_input_reached_08009264": "is_end_of_input_reached", 
            "calculate_result_from_input_08002978": "calculate_result_from_input", 
            "param_3": "outputStructAddr", 
            "uVar3": "inputCopy", 
            "is_input_empty_08009228": "is_input_empty", 
            "uVar2": "calculatedResult", 
            "PTR_DAT_08002a90": "PTR_DAT_08002a90"
        }, 
        "code": "void processInputAndCalculateResult_080029d8(undefined4 inputParam, int inputStructAddr, int outputStructAddr) {\\n  int isResultNotEmpty;\\n  undefined4 calculatedResult;\\n  undefined4 inputCopy;\\n  int isEndOfInputReached;\\n  if ((inputStructAddr != 0) && (outputStructAddr != 0)) {\\n    isResultNotEmpty = checkResultIsNotEmpty(*(undefined4 *)(inputStructAddr + 0x18), *(undefined4 *)(inputStructAddr + 0x1c));\\n    if (isResultNotEmpty == 0) {\\n      if ((*(char *)(inputStructAddr + 0x25) == '\\0') && (is_end_of_input_reached(*(undefined4 *)(inputStructAddr + 0x1c), *(undefined4 *)(outputStructAddr + 0x18)) != 0)) {\\n        inputCopy = *(undefined4 *)(inputStructAddr + 0x1c);\\n        calculatedResult = calculate_result_from_input(*(uint *)(PTR_DAT_08002a90 + 0x20) ^ 0x80000000, *(undefined4 *)(outputStructAddr + 0x18), *(undefined4 *)(inputStructAddr + 0x20));\\n        if (is_input_empty(inputCopy, calculatedResult) == 0) {\\n          calculatedResult = calculate_result_from_input(*(uint *)(PTR_DAT_08002a90 + 0x20) ^ 0x80000000, *(undefined4 *)(outputStructAddr + 0x18), *(undefined4 *)(inputStructAddr + 0x20));\\n        }\\n        *(undefined4 *)(inputStructAddr + 0x18) = calculatedResult;\\n      }\\n      else {\\n        *(undefined4 *)(inputStructAddr + 0x18) = *(undefined4 *)(inputStructAddr + 0x1c);\\n      }\\n      *(undefined *)(inputStructAddr + 0x24) = 1;\\n    }\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08002978", 
            "FUN_08009214", 
            "FUN_08009264", 
            "FUN_08009228"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080029d8", 
        "calling": [
            "FUN_08002a94"
        ], 
        "imported": true, 
        "current_name": "processInputAndCalculateResult_080029d8"
    }, 
    "FUN_08007c5e": {
        "renaming": {
            "FUN_08007c5e": "setGlobalVariable_08007c5e", 
            "_DAT_40000038": "globalVariable", 
            "param_1": "value"
        }, 
        "code": "void setGlobalVariable_08007c5e(undefined4 value)\\n{\\n  _DAT_40000038 = value;\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007c5e", 
        "calling": [
            "FUN_08005790"
        ], 
        "imported": true, 
        "current_name": "setGlobalVariable_08007c5e"
    }, 
    "FUN_08005760": {
        "renaming": {
            "FUN_08005760": "update_parameter_08005760", 
            "PTR_DAT_08005774": "PTR_PARAMETER_DATA", 
            "update_param_080052ac": "update_param_value"
        }, 
        "code": "void update_parameter_08005760(void)\\n{\\n  int parameter_value = *(int *)(PTR_DAT_08005774 + 0x18);\\n  update_param_value(parameter_value);\\n  return;\\n}", 
        "called": [
            "FUN_080052ac"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005760", 
        "calling": [
            "FUN_08007c7c"
        ], 
        "imported": true, 
        "current_name": "update_parameter_08005760"
    }, 
    "FUN_08008b24": {
        "renaming": {
            "in_CY": "current_char", 
            "FUN_08008b24": "is_end_of_input_08008b24"
        }, 
        "code": "bool is_end_of_input_08008b24(void)\\n{\\n  char current_char;\\n  compare_and_return_uint_values();\\n  return current_char == '\\0';\\n}", 
        "called": [
            "FUN_08008b00"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08008b24", 
        "calling": [
            "FUN_08003004", 
            "FUN_08009b24", 
            "FUN_080098d0"
        ], 
        "imported": true, 
        "current_name": "is_end_of_input_08008b24"
    }, 
    "FUN_08002814": {
        "renaming": {
            "FUN_08002814": "doNothing_08002814"
        }, 
        "code": "void doNothing_08002814()\\n{\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002814", 
        "calling": [
            "FUN_08002408", 
            "FUN_08004148", 
            "FUN_08001d4c"
        ], 
        "imported": true, 
        "current_name": "doNothing_08002814"
    }, 
    "FUN_0800587c": {
        "renaming": {
            "FUN_0800587c": "updateData_0800587c", 
            "PTR_DAT_0800589c": "data"
        }, 
        "code": "void updateData_0800587c()\\n{\\n  if (PTR_DAT_0800589c[1] == '\\x03') {\\n    PTR_DAT_0800589c[1] = 4;\\n    PTR_DAT_0800589c[0x10] = 0;\\n  }\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800587c", 
        "calling": [
            "FUN_08003a74"
        ], 
        "imported": true, 
        "current_name": "updateData_0800587c"
    }, 
    "FUN_08008a02": {
        "renaming": {
            "bVar4": "", 
            "uVar1": "", 
            "param_1": "mantissa", 
            "count_leading_zeroes": "", 
            "unaff_r4": "", 
            "param_2": "sign", 
            "param_3": "exponent", 
            "FUN_08008a02": "calculateDouble_08008a02", 
            "param_4": "zeroBits", 
            "CONCAT44": "", 
            "uVar3": "", 
            "uVar2": "", 
            "in_r12": ""
        }, 
        "code": "ulonglong calculateDouble_08008a02(uint mantissa, uint sign, uint exponent, uint zeroBits)\\n{\\n  uint shiftedMantissa = mantissa << 1;\\n  bool isZero = shiftedMantissa == 0;\\n  uint signShift = (uint)((mantissa & 0x80000000) != 0) << 0x1f;\\n  uint exponentShifted = (uint)((int)shiftedMantissa >> 3) >> 1 | signShift;\\n  mantissa = mantissa << 0x1d;\\n  if (!isZero) {\\n    zeroBits = shiftedMantissa & 0xff000000;\\n    isZero = zeroBits == 0;\\n  }\\n  if (!isZero) {\\n    isZero = zeroBits == 0xff000000;\\n  }\\n  if (!isZero) {\\n    return CONCAT44(exponentShifted,mantissa) ^ 0x3800000000000000;\\n  }\\n  if ((shiftedMantissa & 0xffffff) == 0) {\\n    return CONCAT44(exponentShifted,mantissa);\\n  }\\n  if (zeroBits == 0xff000000) {\\n    return CONCAT44(exponentShifted,mantissa) | 0x8000000000000;\\n  }\\n  uint shiftedMantissaNormalized = mantissa;\\n  uint exponentShift = (uint)((int)shiftedMantissa >> 3) >> 1;\\n  if (exponentShift == 0) {\\n    shiftedMantissaNormalized = 0;\\n    exponentShift = mantissa;\\n  }\\n  int leadingZeroes = count_leading_zeroes(exponentShift);\\n  if (exponentShift == 0) {\\n    leadingZeroes = leadingZeroes + 0x20;\\n  }\\n  uint shiftAmount = leadingZeroes - 0xb;\\n  bool isShiftAmountNegative = shiftAmount < 0;\\n  bool isShiftAmountZero = shiftAmount == 0;\\n  if (leadingZeroes < 0x20) {\\n    isShiftAmountNegative = shiftAmount + 0xc < 0;\\n    leadingZeroes = leadingZeroes + -0x1f;\\n    isShiftAmountZero = leadingZeroes == 0;\\n    exponentShift = shiftAmount;\\n    if (!isShiftAmountZero && isShiftAmountNegative == SBORROW4(shiftAmount,0xc)) {\\n      shiftedMantissaNormalized = shiftedMantissa << (shiftAmount & 0xff);\\n      shiftedMantissa = shiftedMantissa >> (0xcU - leadingZeroes & 0xff);\\n      goto LAB_08008458;\\n    }\\n  }\\n  uint shiftAmountNormalized = shiftAmount;\\n  if (isShiftAmountZero || isShiftAmountNegative) {\\n    shiftAmountNormalized = 0x20 - exponentShift;\\n  }\\n  shiftedMantissa = shiftedMantissa << (shiftAmountNormalized & 0xff);\\n  if (exponentShift == 0) {\\n    shiftedMantissaNormalized = shiftedMantissa;\\n  }\\nLAB_08008458:\\n  return CONCAT44(exponentShifted | ((uint)(shiftedMantissaNormalized | shiftedMantissa) != 0),shiftedMantissa);\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08008a02", 
        "calling": [
            "FUN_08008894"
        ], 
        "imported": true, 
        "current_name": "calculateDouble_08008a02"
    }, 
    "FUN_0800369c": {
        "renaming": {
            "local_c": "currentChar", 
            "param_1": "stringToSend", 
            "send_byte_to_device_08008250": "send_byte_to_device", 
            "FUN_0800369c": "send_string_to_device_0800369c"
        }, 
        "code": "void send_string_to_device_0800369c(char *stringToSend) {\\n  char *currentChar = stringToSend;\\n  while (*currentChar != '\\0') {\\n    send_byte_to_device(*currentChar);\\n    currentChar++;\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08008250"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800369c", 
        "calling": [
            "FUN_08004900", 
            "FUN_080039bc"
        ], 
        "imported": true, 
        "current_name": "send_string_to_device_0800369c"
    }, 
    "FUN_08005a98": {
        "renaming": {
            "iVar1": "initialValue", 
            "param_1": "targetSum", 
            "FUN_08005a98": "waitForValueToBeGreaterThanSumOfValueAndParameter_08005a98", 
            "uVar2": "currentValue"
        }, 
        "code": "void waitForValueToBeGreaterThanSumOfValueAndParameter_08005a98(int targetSum)\\n{\\n  int initialValue = getValueFromPointer_08005a84();\\n  uint currentValue;\\n  do {\\n    currentValue = getValueFromPointer_08005a84();\\n  } while (currentValue < (uint)(targetSum + initialValue));\\n  return;\\n}", 
        "called": [
            "FUN_08005a84"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005a98", 
        "calling": [
            "FUN_080002a0"
        ], 
        "imported": true, 
        "current_name": "waitForValueToBeGreaterThanSumOfValueAndParameter_08005a98"
    }, 
    "FUN_08008cdc": {
        "renaming": {
            "FUN_08008cdc": "FUNC_08008cdc"
        }, 
        "code": "\nuint FUNC_08008cdc(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08008e12:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if (uVar4 - 1 == 0 || uVar3 < 0x800000) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_08008e12;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n", 
        "called": [], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x08008cdc", 
        "calling": [
            "FUN_08003004", 
            "FUN_08004940", 
            "FUN_08002978", 
            "FUN_080005b4", 
            "FUN_08002908", 
            "FUN_080028bc", 
            "FUN_08003826", 
            "FUN_08001f00"
        ], 
        "current_name": "FUNC_08008cdc"
    }, 
    "FUN_080044e8": {
        "renaming": {
            "iVar1": "checksum_result", 
            "local_a": "i", 
            "auStack_18": "checksum_array", 
            "local_9": "data_counter", 
            "FUN_080044e8": "verifyAndPrintData_080044e8", 
            "uVar3": "double_value", 
            "uVar2": "float_value"
        }, 
        "code": "void verifyAndPrintData_080044e8(void)\\n{\\n  int data_index;\\n  undefined4 checksum_array[3];\\n  byte data_counter = 0;\\n  while (true)\\n  {\\n    if (data_counter > 7)\\n    {\\n      send_string_to_device_080036c6(DATA_VERIFIED_MSG);\\n      for (byte i = 0; i < 3; i++)\\n      {\\n        if ((PTR_DAT_080046bc[0x28] & 1) == 0)\\n        {\\n          print_float_08003826(*(undefined4 *)(PTR_DAT_080046cc + (i + 10) * 4 + 4));\\n        }\\n        else\\n        {\\n          undefined8 double_value = FUNC_08008590(*(undefined4 *)(PTR_DAT_080046cc + (i + 10) * 4 + 4));\\n          double_value = FUNC_08008640((int)double_value,(int)((ulonglong)double_value >> 0x20),DAT_08004690,DAT_08004694);\\n          undefined4 float_value = calculateFloat_08008c30((int)double_value,(int)((ulonglong)double_value >> 0x20));\\n          print_float_08003826(float_value);\\n        }\\n        if (i < 2)\\n        {\\n          send_string_to_device_080036c6(MIDDLE_SEPARATOR);\\n        }\\n        else\\n        {\\n          send_string_to_device_080036c6(LAST_SEPARATOR);\\n        }\\n      }\\n      return;\\n    }\\n    int checksum_result = verify_checksum_08004d7c(data_counter,checksum_array);\\n    if (checksum_result == 0) break;\\n    send_string_to_device_080036c6(CHECKSUM_ERROR_MSG);\\n    switch(data_counter)\\n    {\\n      case 0:\\n        send_string_to_device_080036c6(CHECKSUM_ERROR_0_MSG);\\n        break;\\n      case 1:\\n        send_string_to_device_080036c6(CHECKSUM_ERROR_1_MSG);\\n        break;\\n      case 2:\\n        send_string_to_device_080036c6(CHECKSUM_ERROR_2_MSG);\\n        break;\\n      case 3:\\n        send_string_to_device_080036c6(CHECKSUM_ERROR_3_MSG);\\n        break;\\n      case 4:\\n        send_string_to_device_080036c6(CHECKSUM_ERROR_4_MSG);\\n        break;\\n      case 5:\\n        send_string_to_device_080036c6(CHECKSUM_ERROR_5_MSG);\\n        break;\\n      case 6:\\n        send_string_to_device_080036c6(CHECKSUM_ERROR_6_MSG);\\n        break;\\n      case 7:\\n        send_string_to_device_080036c6(CHECKSUM_ERROR_7_MSG);\\n        break;\\n    }\\n    for (byte i = 0; i < 3; i++)\\n    {\\n      if ((PTR_DAT_080046bc[0x28] & 1) == 0)\\n      {\\n        print_float_08003826(checksum_array[i]);\\n      }\\n      else\\n      {\\n        undefined8 double_value = FUNC_08008590(checksum_array[i]);\\n        double_value = FUNC_08008640((int)double_value,(int)((ulonglong)double_value >> 0x20),DAT_08004690,DAT_08004694);\\n        undefined4 float_value = calculateFloat_08008c30((int)double_value,(int)((ulonglong)double_value >> 0x20));\\n        print_float_08003826(float_value);\\n      }\\n      if (i < 2)\\n      {\\n        send_string_to_device_080036c6(MIDDLE_SEPARATOR);\\n      }\\n      else\\n      {\\n        send_string_to_device_080036c6(LAST_SEPARATOR);\\n      }\\n    }\\n    data_counter++;\\n  }\\n  send_error_message_08004030(DATA_VERIFICATION_ERROR);\\n  return;\\n}", 
        "called": [
            "FUN_080036c6", 
            "FUN_08008640", 
            "FUN_08008c30", 
            "FUN_08004d7c", 
            "FUN_08008590", 
            "FUN_08004030", 
            "FUN_08003826"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080044e8", 
        "calling": [
            "FUN_08003b98"
        ], 
        "imported": true, 
        "current_name": "verifyAndPrintData_080044e8"
    }, 
    "FUN_08006c9c": {
        "renaming": {
            "DAT_08006cdc": "data_array", 
            "set_data_value_08006b00": "set_data_value", 
            "bVar1": "is_valid", 
            "param_1": "param", 
            "FUN_08006c9c": "check_param_is_valid_08006c9c"
        }, 
        "code": "bool check_param_is_valid_08006c9c(unsigned int param) {\\n  bool is_valid = param < 0x1000000;\\n  if (is_valid) {\\n    DAT_08006cdc[1] = param - 1;\\n    set_data_value_08006b00(0xffffffff, 0xf);\\n    DAT_08006cdc[2] = 0;\\n    *DAT_08006cdc = 7;\\n  }\\n  return !is_valid;\\n}", 
        "called": [
            "FUN_08006b00"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006c9c", 
        "calling": [
            "FUN_08006d72"
        ], 
        "imported": true, 
        "current_name": "check_param_is_valid_08006c9c"
    }, 
    "FUN_0800a5a0": {
        "renaming": {
            "FUN_0800a5a0": "FUNC_0800a5a0"
        }, 
        "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint FUNC_0800a5a0(int param_1,undefined8 *param_2,int param_3,int param_4,int param_5,int param_6)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint *puVar5;\n  undefined4 uVar6;\n  uint **ppuVar7;\n  undefined4 uVar8;\n  int iVar9;\n  undefined4 *puVar10;\n  undefined4 uVar11;\n  uint uVar12;\n  uint *puVar13;\n  int iVar14;\n  int iVar15;\n  undefined8 *puVar16;\n  int iVar17;\n  undefined4 *puVar18;\n  undefined8 *puVar19;\n  undefined4 uVar20;\n  int iVar21;\n  undefined8 *puVar22;\n  undefined4 *puVar23;\n  bool bVar24;\n  undefined8 uVar25;\n  undefined8 uVar26;\n  undefined8 uVar27;\n  undefined8 uVar28;\n  ulonglong uVar29;\n  undefined8 *local_284;\n  int local_280;\n  int local_270;\n  int local_26c;\n  uint *local_260 [2];\n  uint local_258 [20];\n  undefined8 uStack_208;\n  undefined8 local_168;\n  int local_160 [38];\n  undefined8 uStack_c8;\n  \n  uVar28 = CONCAT44(param_5,param_5);\n  iVar15 = *(int *)(PTR_DAT_0800a894 + param_5 * 4);\n  iVar9 = param_4 + -1;\n  local_260[1] = (uint *)param_2;\n  if (param_3 + 0x14 < 0 == SCARRY4(param_3,0x14)) {\n    local_26c = (int)((longlong)DAT_0800a898 * (longlong)(param_3 + -3) >> 0x22) -\n                (param_3 + -3 >> 0x1f);\n    local_270 = (local_26c + 1) * -0x18;\n  }\n  else {\n    local_270 = -0x18;\n    local_26c = 0;\n  }\n  local_270 = param_3 + local_270;\n  iVar17 = local_26c - iVar9;\n  if (-1 < iVar15 + iVar9) {\n    iVar21 = iVar15 + iVar9 + 1 + iVar17;\n    puVar16 = &uStack_208;\n    do {\n      while (iVar17 < 0) {\n        iVar17 = iVar17 + 1;\n        *(undefined4 *)puVar16 = 0;\n        *(undefined4 *)((int)puVar16 + 4) = 0;\n        puVar16 = puVar16 + 1;\n        if (iVar17 == iVar21) goto LAB_0800a626;\n      }\n      uVar26 = FUNC_0800856c(*(undefined4 *)(param_6 + iVar17 * 4));\n      iVar17 = iVar17 + 1;\n      *puVar16 = uVar26;\n      puVar16 = puVar16 + 1;\n    } while (iVar17 != iVar21);\n  }\nLAB_0800a626:\n  puVar10 = (undefined4 *)(param_1 + -8);\n  if (-1 < iVar15) {\n    puVar22 = &uStack_208 + param_4;\n    iVar17 = iVar9;\n    puVar16 = &uStack_c8;\n    do {\n      if (iVar9 < 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar26 = 0;\n        puVar23 = puVar10;\n        puVar19 = puVar22;\n        do {\n          puVar18 = puVar23 + 2;\n          uVar25 = FUNC_08008640(*puVar18,puVar23[3],*(undefined4 *)(puVar19 + -1),\n                                *(undefined4 *)((int)puVar19 + -4));\n          uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                (int)((ulonglong)uVar25 >> 0x20));\n          puVar23 = puVar18;\n          puVar19 = puVar19 + -1;\n        } while (puVar18 != puVar10 + param_4 * 2);\n      }\n      iVar17 = iVar17 + 1;\n      *puVar16 = uVar26;\n      puVar22 = puVar22 + 1;\n      puVar16 = puVar16 + 1;\n    } while (iVar17 != iVar15 + param_4);\n  }\n  local_260[0] = local_258 + iVar15 + -1;\n  iVar17 = iVar15;\n  do {\n    uVar26 = CONCAT44(*(undefined4 *)((int)&uStack_c8 + iVar17 * 8 + 4),\n                      *(undefined4 *)(&uStack_c8 + iVar17));\n    if (0 < iVar17) {\n      puVar16 = &uStack_c8 + iVar17;\n      puVar5 = local_258;\n      do {\n        uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n        FUNC_08008640((int)uVar26,uVar6,0,DAT_0800a89c);\n        calculateValue_08008ba0();\n        uVar25 = FUNC_0800856c();\n        uVar8 = (undefined4)((ulonglong)uVar25 >> 0x20);\n        uVar27 = FUNC_08008640((int)uVar25,uVar8,0,DAT_0800a8a0);\n        FUNC_080082d0((int)uVar26,uVar6,(int)uVar27,(int)((ulonglong)uVar27 >> 0x20));\n        uVar2 = calculateValue_08008ba0();\n        puVar22 = puVar16 + -1;\n        uVar6 = *(undefined4 *)puVar22;\n        uVar11 = *(undefined4 *)((int)puVar16 + -4);\n        *puVar5 = uVar2;\n        uVar26 = FUNC_080082d4((int)uVar25,uVar8,uVar6,uVar11);\n        puVar16 = puVar22;\n        puVar5 = puVar5 + 1;\n      } while (puVar22 != &uStack_c8);\n    }\n    uVar26 = calculate_0800b2e8((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),local_270);\n    uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    FUNC_08008640((int)uVar26,uVar8,0,0x3fc00000);\n    uVar25 = decode_080094c0();\n    uVar25 = FUNC_08008640((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),0,DAT_0800a8a4);\n    uVar26 = FUNC_080082d0((int)uVar26,uVar8,(int)uVar25,(int)((ulonglong)uVar25 >> 0x20));\n    uVar2 = calculateValue_08008ba0();\n    uVar25 = FUNC_0800856c();\n    uVar26 = FUNC_080082d0((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                          (int)((ulonglong)uVar25 >> 0x20));\n    uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    uVar8 = (undefined4)uVar26;\n    if (local_270 < 1) {\n      if (local_270 == 0) {\n        iVar21 = (int)local_258[iVar17 + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      iVar21 = check_for_zero_or_carry_flag_08008b4c(uVar8,uVar6,0,DAT_0800ac3c);\n      if (iVar21 != 0) {\n        uVar2 = uVar2 + 1;\n        if (iVar17 < 1) {\n          uVar26 = FUNC_080082d0(0,DAT_0800ac38,uVar8,uVar6);\n          iVar21 = 2;\n          goto LAB_0800a7a4;\n        }\n        iVar21 = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      iVar4 = (int)local_258[iVar17 + -1] >> (0x18U - local_270 & 0xff);\n      uVar12 = local_258[iVar17 + -1] - (iVar4 << (0x18U - local_270 & 0xff));\n      iVar21 = (int)uVar12 >> (0x17U - local_270 & 0xff);\n      local_258[iVar17 + -1] = uVar12;\n      uVar2 = uVar2 + iVar4;\njoined_r0x0800a8b8:\n      if (0 < iVar21) {\n        uVar2 = uVar2 + 1;\n        if (iVar17 < 1) {\n          uVar12 = 0;\n        }\n        else {\nLAB_0800a8c8:\n          uVar12 = local_258[0];\n          if (local_258[0] == 0) {\n            if (iVar17 != 1) {\n              puVar5 = local_258;\n              iVar4 = 1;\n              do {\n                puVar5 = puVar5 + 1;\n                uVar12 = *puVar5;\n                if (uVar12 != 0) {\n                  iVar14 = iVar4 + 1;\n                  goto LAB_0800a8e2;\n                }\n                iVar4 = iVar4 + 1;\n              } while (iVar4 != iVar17);\n            }\n          }\n          else {\n            iVar14 = 1;\n            iVar4 = 0;\nLAB_0800a8e2:\n            local_258[iVar4] = 0x1000000 - uVar12;\n            if (iVar14 < iVar17) {\n              uVar12 = local_258[iVar14];\n              puVar5 = local_258 + iVar14;\n              while( true ) {\n                puVar13 = puVar5 + 1;\n                *puVar5 = 0xffffff - uVar12;\n                if (puVar13 == local_258 + iVar17) break;\n                uVar12 = *puVar13;\n                puVar5 = puVar13;\n              }\n            }\n            uVar12 = 1;\n          }\n        }\n        if (0 < local_270) {\n          if (local_270 == 1) {\n            local_258[iVar17 + -1] = local_258[iVar17 + -1] & 0x7fffff;\n          }\n          else if (local_270 == 2) {\n            local_258[iVar17 + -1] = local_258[iVar17 + -1] & 0x3fffff;\n          }\n        }\n        if (iVar21 == 2) {\n          uVar26 = FUNC_080082d0(0,DAT_0800ac38,uVar8,uVar6);\n          if (uVar12 != 0) {\n            uVar25 = calculate_0800b2e8(0,DAT_0800ac38,local_270);\n            uVar26 = FUNC_080082d0((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                  (int)((ulonglong)uVar25 >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    iVar4 = check_input_is_not_null_char_08008b10((int)uVar26,uVar8,0,0);\n    if (iVar4 == 0) {\n      uVar26 = calculate_0800b2e8((int)uVar26,uVar8,-local_270);\n      uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n      uVar8 = (undefined4)uVar26;\n      iVar9 = check_for_zero_or_carry_flag_08008b4c(uVar8,uVar6,0,DAT_0800ade4);\n      if (iVar9 == 0) {\n        uVar12 = calculateValue_08008ba0(uVar8,uVar6);\n        local_258[iVar17] = uVar12;\n        iVar4 = iVar17;\n      }\n      else {\n        FUNC_08008640(uVar8,uVar6,0,DAT_0800ade8);\n        uVar12 = calculateValue_08008ba0();\n        uVar26 = FUNC_0800856c();\n        uVar26 = FUNC_08008640((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),0,DAT_0800ade4);\n        FUNC_080082d0(uVar8,uVar6,(int)uVar26,(int)((ulonglong)uVar26 >> 0x20));\n        uVar3 = calculateValue_08008ba0();\n        local_270 = local_270 + 0x18;\n        local_258[iVar17] = uVar3;\n        local_258[iVar17 + 1] = uVar12;\n        iVar4 = iVar17 + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    iVar4 = iVar17 + -1;\n    if (iVar15 <= iVar4) {\n      uVar12 = 0;\n      puVar5 = local_258 + iVar17 + 0x3fffffff;\n      do {\n        puVar13 = puVar5 + -1;\n        uVar12 = uVar12 | *puVar5;\n        puVar5 = puVar13;\n      } while (puVar13 != local_260[0]);\n      if (uVar12 != 0) break;\n    }\n    if (local_258[iVar15 + -1] == 0) {\n      local_280 = 1;\n      ppuVar7 = local_260 + iVar15;\n      do {\n        puVar5 = *ppuVar7;\n        local_280 = local_280 + 1;\n        ppuVar7 = ppuVar7 + -1;\n      } while (puVar5 == (uint *)0x0);\n      local_280 = iVar17 + local_280;\n    }\n    else {\n      local_280 = iVar17 + 1;\n    }\n    iVar21 = iVar17 + 1;\n    puVar23 = (undefined4 *)(param_6 + (iVar21 + local_26c + 0x3fffffff) * 4);\n    puVar16 = &uStack_208 + iVar17 + param_4;\n    local_284 = &uStack_c8 + iVar21;\n    do {\n      puVar23 = puVar23 + 1;\n      uVar26 = FUNC_0800856c(*puVar23);\n      *puVar16 = uVar26;\n      puVar22 = puVar16 + 1;\n      if (iVar9 < 0) {\n        uVar25 = 0;\n      }\n      else {\n        uVar25 = 0;\n        puVar18 = puVar10;\n        while( true ) {\n          puVar16 = puVar16 + -1;\n          puVar1 = puVar18 + 2;\n          uVar26 = FUNC_08008640((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),*puVar1,puVar18[3]);\n          uVar25 = FUNC_080082d4((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),(int)uVar26,\n                                (int)((ulonglong)uVar26 >> 0x20));\n          if (puVar1 == puVar10 + param_4 * 2) break;\n          uVar26 = *puVar16;\n          puVar18 = puVar1;\n        }\n      }\n      *local_284 = uVar25;\n      iVar21 = iVar21 + 1;\n      iVar17 = local_280;\n      puVar16 = puVar22;\n      local_284 = local_284 + 1;\n    } while (iVar21 <= local_280);\n  } while( true );\n  local_270 = local_270 + -0x18;\n  if (local_258[iVar4] == 0) {\n    puVar5 = local_258 + iVar17 + 0x3ffffffe;\n    do {\n      uVar12 = *puVar5;\n      iVar4 = iVar4 + -1;\n      local_270 = local_270 + -0x18;\n      puVar5 = puVar5 + -1;\n    } while (uVar12 == 0);\n  }\nLAB_0800a9f6:\n  uVar26 = calculate_0800b2e8(0,DAT_0800ac38,local_270);\n  if (iVar4 < 0) {\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        uVar28 = 0;\nLAB_0800abe4:\n        if (iVar21 == 0) {\n          *local_260[1] = (undefined4)local_168;\n          *(int *)((int)local_260[1] + 4) = local_168._4_4_;\n          *(undefined8 *)((int)local_260[1] + 0x10) = uVar28;\n          *(int *)((int)local_260[1] + 8) = local_160[0];\n          *(int *)((int)local_260[1] + 0xc) = local_160[1];\n          return uVar2 & 7;\n        }\n        *(int *)((int)local_260[1] + 0x10) = (int)uVar28;\n        *(int *)((int)local_260[1] + 8) = local_160[0];\n        *(int *)((int)local_260[1] + 0x14) = (int)((ulonglong)uVar28 >> 0x20) + -0x80000000;\n        *(int *)((int)local_260[1] + 4) = local_168._4_4_ + -0x80000000;\n        *(int *)((int)local_260[1] + 0xc) = local_160[1] + -0x80000000;\n        *local_260[1] = (undefined4)local_168;\n        return uVar2 & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\nLAB_0800aafc:\n      iVar9 = (int)((ulonglong)uVar28 >> 0x20);\n      if (iVar21 != 0) {\n        iVar9 = iVar9 + -0x80000000;\n      }\n      *local_260[1] = (int)uVar28;\n      *(int *)((int)local_260[1] + 4) = iVar9;\nLAB_0800ab0e:\n      return uVar2 & 7;\n    }\n    uVar28 = 0;\n  }\n  else {\n    puVar22 = &uStack_c8 + iVar4;\n    puVar5 = local_258 + iVar4 + 1;\n    puVar16 = &uStack_c8 + iVar4 + 1;\n    do {\n      uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n      puVar5 = puVar5 + -1;\n      uVar25 = FUNC_0800856c(*puVar5);\n      uVar25 = FUNC_08008640((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),(int)uVar26,uVar8);\n      puVar16 = puVar16 + -1;\n      *puVar16 = uVar25;\n      uVar26 = FUNC_08008640((int)uVar26,uVar8,0,DAT_0800ac40);\n    } while (puVar5 != local_258);\n    iVar9 = 0;\n    uVar8 = DAT_0800ac30;\n    uVar6 = DAT_0800ac34;\n    do {\n      DAT_0800ac30 = uVar8;\n      DAT_0800ac34 = uVar6;\n      if (iVar15 < 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar26 = 0;\n        iVar17 = 0;\n        puVar16 = puVar22;\n        puVar10 = (undefined4 *)PTR_DAT_0800ac44;\n        while( true ) {\n          uVar25 = FUNC_08008640(*(undefined4 *)puVar16,*(undefined4 *)((int)puVar16 + 4),uVar8,uVar6\n                               );\n          uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                (int)((ulonglong)uVar25 >> 0x20));\n          iVar17 = iVar17 + 1;\n          if ((iVar15 < iVar17) || (iVar9 < iVar17)) break;\n          uVar8 = *puVar10;\n          uVar6 = puVar10[1];\n          puVar16 = puVar16 + 1;\n          puVar10 = puVar10 + 2;\n        }\n      }\n      bVar24 = iVar9 != iVar4;\n      *(int *)(&local_168 + iVar9) = (int)uVar26;\n      *(int *)((int)&local_168 + (iVar9 * 2 + 1) * 4) = (int)((ulonglong)uVar26 >> 0x20);\n      puVar22 = puVar22 + -1;\n      iVar9 = iVar9 + 1;\n      uVar8 = DAT_0800ac30;\n      uVar6 = DAT_0800ac34;\n    } while (bVar24);\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        if (iVar4 != 0) {\n          puVar16 = &local_168 + iVar4;\n          uVar28 = CONCAT44(*(undefined4 *)((int)&local_168 + (iVar4 * 2 + 1) * 4),\n                            *(undefined4 *)puVar16);\n          do {\n            uVar6 = (undefined4)((ulonglong)uVar28 >> 0x20);\n            uVar8 = (undefined4)uVar28;\n            uVar11 = *(undefined4 *)(puVar16 + -1);\n            uVar20 = *(undefined4 *)((int)puVar16 + -4);\n            uVar28 = FUNC_080082d4(uVar8,uVar6,uVar11,uVar20);\n            uVar26 = FUNC_080082d0(uVar11,uVar20,(int)uVar28,(int)((ulonglong)uVar28 >> 0x20));\n            uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),uVar8,uVar6);\n            *puVar16 = uVar26;\n            puVar16 = puVar16 + -1;\n            *puVar16 = uVar28;\n          } while (&local_168 != puVar16);\n          if (1 < iVar4) {\n            puVar16 = &local_168 + iVar4;\n            uVar28 = CONCAT44(*(undefined4 *)((int)&local_168 + (iVar4 * 2 + 1) * 4),\n                              *(undefined4 *)puVar16);\n            do {\n              uVar6 = (undefined4)((ulonglong)uVar28 >> 0x20);\n              uVar8 = (undefined4)uVar28;\n              uVar11 = *(undefined4 *)(puVar16 + -1);\n              uVar20 = *(undefined4 *)((int)puVar16 + -4);\n              uVar28 = FUNC_080082d4(uVar8,uVar6,uVar11,uVar20);\n              uVar26 = FUNC_080082d0(uVar11,uVar20,(int)uVar28,(int)((ulonglong)uVar28 >> 0x20));\n              uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),uVar8,uVar6);\n              *puVar16 = uVar26;\n              puVar16 = puVar16 + -1;\n              *puVar16 = uVar28;\n            } while (&local_168 + 1 != puVar16);\n            uVar28 = 0;\n            puVar16 = &local_168 + iVar4 + 1;\n            do {\n              puVar22 = puVar16 + -1;\n              uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),\n                                    *(undefined4 *)puVar22,*(undefined4 *)((int)puVar16 + -4));\n              puVar16 = puVar22;\n            } while (&local_168 + 2 != puVar22);\n            goto LAB_0800abe4;\n          }\n        }\n        uVar28 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\n      puVar16 = &local_168 + iVar4 + 1;\n      do {\n        puVar22 = puVar16 + -1;\n        uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),*(undefined4 *)puVar22,\n                              *(undefined4 *)((int)puVar16 + -4));\n        puVar16 = puVar22;\n      } while (&local_168 != puVar22);\n      goto LAB_0800aafc;\n    }\n    uVar28 = 0;\n    puVar16 = &local_168 + iVar4 + 1;\n    do {\n      puVar22 = puVar16 + -1;\n      uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),*(undefined4 *)puVar22,\n                            *(undefined4 *)((int)puVar16 + -4));\n      puVar16 = puVar22;\n    } while (&local_168 != puVar22);\n  }\n  iVar9 = (int)((ulonglong)uVar28 >> 0x20);\n  uVar8 = (undefined4)uVar28;\n  if (iVar21 == 0) {\n    *(undefined8 *)local_260[1] = uVar28;\n    uVar29 = FUNC_080082d0((undefined4)local_168,local_168._4_4_,uVar8,iVar9);\n    if (iVar4 < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    iVar9 = 1;\n    puVar16 = &local_168;\n    do {\n      uVar29 = FUNC_080082d4((int)uVar29,(int)(uVar29 >> 0x20),*(undefined4 *)(puVar16 + 1),\n                            *(undefined4 *)((int)puVar16 + 0xc));\n      iVar9 = iVar9 + 1;\n      puVar16 = puVar16 + 1;\n    } while (iVar9 <= iVar4);\n    if (iVar21 == 0) goto LAB_0800ad26;\n  }\n  else {\n    *local_260[1] = uVar8;\n    *(int *)((int)local_260[1] + 4) = iVar9 + -0x80000000;\n    uVar29 = FUNC_080082d0((undefined4)local_168,local_168._4_4_,uVar8,iVar9);\n    if (0 < iVar4) goto LAB_0800ad04;\n  }\n  uVar29 = uVar29 & 0xffffffff | (ulonglong)((int)(uVar29 >> 0x20) + 0x80000000) << 0x20;\nLAB_0800ad26:\n  *(ulonglong *)((int)local_260[1] + 8) = uVar29;\n  return uVar2 & 7;\n}\n\n", 
        "called": [
            "FUN_0800b2e8", 
            "FUN_08008b4c", 
            "FUN_08008b10", 
            "FUN_08008640", 
            "FUN_08008ba0", 
            "FUN_0800856c", 
            "FUN_080082d0", 
            "FUN_080094c0", 
            "FUN_080082d4"
        ], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x0800a5a0", 
        "calling": [
            "FUN_08009d78"
        ], 
        "current_name": "FUNC_0800a5a0"
    }, 
    "FUN_0800195c": {
        "renaming": {
            "enable_task_execution_if_not_already_enabled_080025e8": "enable_task_execution", 
            "PTR_DAT_08001990": "task_data", 
            "PTR_DAT_08001990[1]": "task_status", 
            "FUN_0800195c": "enable_task_if_not_enabled_0800195c", 
            "PTR_DAT_08001990[2]": "task_flags"
        }, 
        "code": "void enable_task_if_not_enabled_0800195c(void)\\n{\\n  if ((PTR_DAT_08001990[1] != 6) && ((PTR_DAT_08001990[2] & 0x20) == 0)) {\\n    enable_task_execution();\\n    PTR_DAT_08001990[2] |= 0x40;\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_080025e8"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800195c", 
        "calling": [
            "FUN_080074c8"
        ], 
        "imported": true, 
        "current_name": "enable_task_if_not_enabled_0800195c"
    }, 
    "FUN_08009214": {
        "renaming": {
            "FUN_08009214": "checkResultIsNotEmpty_08009214", 
            "in_ZR": "inputChar"
        }, 
        "code": "bool checkResultIsNotEmpty_08009214() {\\n  char inputChar;\\n  calculateResultAndReturnConcatenation_08009204_08009204();\\n  return inputChar != '\\0';\\n}", 
        "called": [
            "FUN_08009204"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08009214", 
        "calling": [
            "FUN_080029d8", 
            "FUN_08002afc", 
            "FUN_08002638", 
            "FUN_080005b4", 
            "FUN_08004e30", 
            "FUN_08001f00"
        ], 
        "imported": true, 
        "current_name": "checkResultIsNotEmpty_08009214"
    }, 
    "FUN_08004dd2": {
        "renaming": {
            "bVar1": "memory_value", 
            "iVar2": "checksum", 
            "FUN_08004dd2": "validate_data_08004dd2", 
            "check_sum_080003ec": "calculate_checksum", 
            "initializeData_08004c48": "initialize_data", 
            "PTR_DAT_08004e2c": "PTR_DATA"
        }, 
        "code": "int validate_data_08004dd2(){\\n  byte memory_value = get_memory_value(0);\\n  if (memory_value == 5) {\\n    int checksum = calculate_checksum(PTR_DAT_08004e2c, 1, 0x40);\\n    if (checksum == 0) {\\n      return 0;\\n    }\\n  }\\n  else {\\n    if (memory_value > 4) {\\n      return 0;\\n    }\\n    int checksum = calculate_checksum(PTR_DAT_08004e2c, 1, 0x28);\\n    if (checksum == 0) {\\n      return 0;\\n    }\\n    initialize_data(0);\\n  }\\n  return 1;\\n}", 
        "called": [
            "FUN_080003ec", 
            "FUN_08004c48", 
            "FUN_08000310"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08004dd2", 
        "calling": [
            "FUN_080051b4"
        ], 
        "imported": true, 
        "current_name": "validate_data_08004dd2"
    }, 
    "FUN_08008244": {
        "renaming": {
            "FUN_08008244": "doNothing_08008244"
        }, 
        "code": "void doNothing_08008244()\\n{\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08008244", 
        "calling": [
            "FUN_08001ddc"
        ], 
        "imported": true, 
        "current_name": "doNothing_08008244"
    }, 
    "FUN_08005778": {
        "renaming": {
            "FUN_08005778": "update_parameter_value_08005778", 
            "PTR_DAT_0800578c": "parameter_data_ptr", 
            "update_param_080052ac": "update_param_value"
        }, 
        "code": "void update_parameter_value_08005778(void)\\n{\\n  int* ptr_to_data = *(int**)PTR_DAT_0800578c;\\n  update_param_value(ptr_to_data);\\n  return;\\n}", 
        "called": [
            "FUN_080052ac"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005778", 
        "calling": [
            "FUN_08007c7c"
        ], 
        "imported": true, 
        "current_name": "update_parameter_value_08005778"
    }, 
    "FUN_080028bc": {
        "renaming": {
            "FUNC_08009054": "finalize_result", 
            "uVar1": "result1", 
            "param_1": "num1", 
            "FUN_080028bc": "calculate_result_080028bc", 
            "param_2": "num2", 
            "FUNC_08008cdc": "do_operation", 
            "param_3": "num3", 
            "FUNC_08008eec": "do_operation", 
            "uVar2": "result2", 
            "FUNC_08008cd8": "combine_results"
        }, 
        "code": "undefined4 calculate_result_080028bc(undefined4 num1, undefined4 num2, undefined4 num3)\\n{\\n  undefined4 result1;\\n  undefined4 result2;\\n  result1 = FUNC_08008eec(num2, num2);\\n  result2 = FUNC_08008cdc(num1, num1);\\n  result1 = FUNC_08008cd8(result1, result2);\\n  result2 = do_operation(num3, num3);\\n  result1 = FUNC_08009054(result1, result2);\\n  return result1;\\n}", 
        "called": [
            "FUN_08008cdc", 
            "FUN_08009054", 
            "FUN_08008cd8", 
            "FUN_08008eec"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080028bc", 
        "calling": [
            "FUN_08002c18"
        ], 
        "imported": true, 
        "current_name": "calculate_result_080028bc"
    }, 
    "FUN_08006628": {
        "renaming": {
            "uVar1": "data", 
            "FUN_08006628": "calculate_data_and_shift_right_08006628", 
            "PTR_DAT_0800667c": "result_pointer", 
            "DAT_08006674": "data_offset", 
            "uVar2": "leading_zeroes", 
            "PTR_DAT_08006678": "data_pointer"
        }, 
        "code": "uint calculate_data_and_shift_right_08006628() {\\n  uint data = calculate_data();\\n  uint leading_zeroes = count_leading_zeroes(0xf000000);\\n  uint shift_amount = (*(uint *)(PTR_DAT_08006678 + 8) & 0xf0) >> (leading_zeroes & 0xff);\\n  *(uint *)PTR_DAT_0800667c = data >> shift_amount;\\n  return *(uint *)PTR_DAT_0800667c;\\n}", 
        "called": [
            "FUN_080064ec"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006628", 
        "calling": [
            "FUN_08006680", 
            "FUN_0800618c", 
            "FUN_080066cc"
        ], 
        "imported": true, 
        "current_name": "calculate_data_and_shift_right_08006628"
    }, 
    "FUN_0800738e": {
        "renaming": {
            "do_nothing_080073c0": "do_nothing", 
            "param_1": "data", 
            "PTR_": "pointer_", 
            "FUN_0800738e": "update_data_if_valid_0800738e", 
            "DAT_080073bc": "data_address", 
            "DAT_": "data_"
        }, 
        "code": "void update_data_if_valid_0800738e(ushort data){\\n  uint* DAT_pointer = (uint*)(DAT_080073bc + 0x14);\\n  uint mask = *DAT_pointer;\\n  if((uint)data & mask){\\n    *DAT_pointer = (uint)data;\\n    do_nothing_080073c0(data);\\n  }\\n}", 
        "called": [
            "FUN_080073c0"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800738e", 
        "calling": [], 
        "imported": true, 
        "current_name": "update_data_if_valid_0800738e"
    }, 
    "FUN_08002828": {
        "renaming": {
            "FUN_08002828": "doNothing_08002828"
        }, 
        "code": "void doNothing_08002828()\\n{\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002828", 
        "calling": [
            "FUN_08001994"
        ], 
        "imported": true, 
        "current_name": "doNothing_08002828"
    }, 
    "FUN_080053a0": {
        "renaming": {
            "FUN_080053a0": "FUNC_080053a0"
        }, 
        "code": "\nvoid FUNC_080053a0(void)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  \n  updateData_080052dc(*(undefined2 *)PTR_DAT_080055f0);\n  *(undefined2 *)PTR_DAT_080055f8 = *(undefined2 *)PTR_DAT_080055f4;\n  if (*(int *)PTR_DAT_080055fc == 0) {\n    uVar1 = getPointer_08002f74();\n    *(undefined4 *)PTR_DAT_080055fc = uVar1;\n    if (*(int *)PTR_DAT_080055fc == 0) {\n      clear_globals_and_check_status_080057e4();\n      PTR_DAT_08005600[2] = PTR_DAT_08005600[2] | 4;\n    }\n    else {\n      if (PTR_DAT_08005600[1] == '\\x03') {\n        *(undefined4 *)(PTR_DAT_08005604 + 0x1c) = *(undefined4 *)(*(int *)PTR_DAT_080055fc + 0x28);\n        calculateAndUpdateValue_08005324(*(undefined4 *)(PTR_DAT_08005604 + 0x1c));\n        *(undefined4 *)(PTR_DAT_08005604 + 0x18) = DAT_08005608;\n      }\n      *(int *)(PTR_DAT_08005604 + 0x20) =\n           (*(int *)(*(int *)PTR_DAT_080055fc + 0x30) >> 1) +\n           *(int *)(*(int *)PTR_DAT_080055fc + 0x30);\n      *(int *)PTR_DAT_08005604 = -(*(int *)(*(int *)PTR_DAT_080055fc + 0x10) >> 1);\n      *(undefined4 *)(PTR_DAT_08005604 + 4) = *(undefined4 *)PTR_DAT_08005604;\n      *(undefined4 *)(PTR_DAT_08005604 + 8) = *(undefined4 *)PTR_DAT_08005604;\n      *(undefined4 *)(PTR_DAT_08005604 + 0xc) = *(undefined4 *)(*(int *)PTR_DAT_080055fc + 0x10);\n      *(undefined4 *)(PTR_DAT_08005604 + 0x10) = 0;\n    }\n  }\n  if (*(int *)PTR_DAT_080055fc != 0) {\n    *(undefined2 *)PTR_DAT_080055f0 = **(undefined2 **)PTR_DAT_080055fc;\n    *(undefined2 *)PTR_DAT_080055f4 = 0;\n    *(int *)PTR_DAT_08005604 = *(int *)(*(int *)PTR_DAT_080055fc + 4) + *(int *)PTR_DAT_08005604;\n    if (0 < *(int *)PTR_DAT_08005604) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x10;\n      *(int *)PTR_DAT_08005604 = *(int *)PTR_DAT_08005604 - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x20) == 0) {\n        *(int *)(PTR_DAT_08005600 + 4) = *(int *)(PTR_DAT_08005600 + 4) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 4) = *(int *)(PTR_DAT_08005600 + 4) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 4) =\n         *(int *)(*(int *)PTR_DAT_080055fc + 8) + *(int *)(PTR_DAT_08005604 + 4);\n    if (0 < *(int *)(PTR_DAT_08005604 + 4)) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x440;\n      *(int *)(PTR_DAT_08005604 + 4) =\n           *(int *)(PTR_DAT_08005604 + 4) - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x80) == 0) {\n        *(int *)(PTR_DAT_08005600 + 8) = *(int *)(PTR_DAT_08005600 + 8) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 8) = *(int *)(PTR_DAT_08005600 + 8) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 8) =\n         *(int *)(*(int *)PTR_DAT_080055fc + 0xc) + *(int *)(PTR_DAT_08005604 + 8);\n    if (0 < *(int *)(PTR_DAT_08005604 + 8)) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x100;\n      *(int *)(PTR_DAT_08005604 + 8) =\n           *(int *)(PTR_DAT_08005604 + 8) - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x200) == 0) {\n        *(int *)(PTR_DAT_08005600 + 0xc) = *(int *)(PTR_DAT_08005600 + 0xc) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 0xc) = *(int *)(PTR_DAT_08005600 + 0xc) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 0x10) = *(int *)(PTR_DAT_08005604 + 0x10) + 1;\n    if (*(uint *)(PTR_DAT_08005604 + 0x10) < *(uint *)(*(int *)PTR_DAT_080055fc + 0x10)) {\n      if (PTR_DAT_08005600[1] == '\\x04') {\n        iVar2 = isMemorySizeLessThanThreshold_08005360();\n        if (iVar2 != 0) {\n          if (*(uint *)(*(int *)PTR_DAT_080055fc + 0x30) < *(uint *)(PTR_DAT_08005604 + 0x1c)) {\n            *(int *)(PTR_DAT_08005604 + 0x1c) =\n                 *(int *)(PTR_DAT_08005604 + 0x1c) - *(int *)(*(int *)PTR_DAT_080055fc + 0x30);\n            calculateAndUpdateValue_08005324(*(undefined4 *)(PTR_DAT_08005604 + 0x1c));\n          }\n          else {\n            clear_globals_and_check_status_080057e4();\n            PTR_DAT_08005600[2] = PTR_DAT_08005600[2] | 4;\n          }\n        }\n      }\n      else if (*(uint *)(PTR_DAT_08005748 + 0x10) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x34)) {\n        iVar2 = isMemorySizeLessThanThreshold_08005360();\n        if (iVar2 != 0) {\n          *(int *)(PTR_DAT_08005748 + 0x1c) =\n               *(int *)(PTR_DAT_08005748 + 0x1c) + *(int *)(*(int *)PTR_DAT_0800574c + 0x30);\n          if (*(uint *)(*(int *)PTR_DAT_0800574c + 0x3c) <= *(uint *)(PTR_DAT_08005748 + 0x1c)) {\n            *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n                 *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x3c);\n          }\n          calculateAndUpdateValue_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n      else if (*(uint *)(PTR_DAT_08005748 + 0x10) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x38)) {\n        if (*(int *)(PTR_DAT_08005748 + 0x1c) != *(int *)(*(int *)PTR_DAT_0800574c + 0x3c)) {\n          *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n               *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x3c);\n          calculateAndUpdateValue_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n      else if (*(int *)(PTR_DAT_08005748 + 0x10) == *(int *)(*(int *)PTR_DAT_0800574c + 0x38)) {\n        if (*(int *)(PTR_DAT_08005748 + 0x1c) == *(int *)(*(int *)PTR_DAT_0800574c + 0x3c)) {\n          *(undefined4 *)(PTR_DAT_08005748 + 0x18) = DAT_08005750;\n        }\n        else {\n          *(int *)(PTR_DAT_08005748 + 0x18) = 420000 - *(int *)(PTR_DAT_08005748 + 0x18);\n        }\n      }\n      else {\n        iVar2 = isMemorySizeLessThanThreshold_08005360();\n        if (iVar2 != 0) {\n          if (*(uint *)(PTR_DAT_08005748 + 0x20) < *(uint *)(PTR_DAT_08005748 + 0x1c)) {\n            *(int *)(PTR_DAT_08005748 + 0x1c) =\n                 *(int *)(PTR_DAT_08005748 + 0x1c) - *(int *)(*(int *)PTR_DAT_0800574c + 0x30);\n          }\n          else {\n            *(uint *)(PTR_DAT_08005748 + 0x1c) = *(uint *)(PTR_DAT_08005748 + 0x1c) >> 1;\n          }\n          if (*(uint *)(PTR_DAT_08005748 + 0x1c) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x2c)) {\n            *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n                 *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x2c);\n          }\n          calculateAndUpdateValue_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n    }\n    else {\n      *(undefined2 *)PTR_DAT_08005754 = 0;\n      *(undefined4 *)PTR_DAT_0800574c = 0;\n      updateCharIfDifferent_08002f40();\n    }\n  }\n  *(ushort *)PTR_DAT_08005754 = *(ushort *)PTR_DAT_08005754 ^ *(ushort *)(PTR_DAT_08005758 + 0x18);\n  *(ushort *)PTR_DAT_0800575c = *(ushort *)PTR_DAT_0800575c ^ *(ushort *)(PTR_DAT_08005758 + 0x1a);\n  return;\n}\n\n", 
        "called": [
            "FUN_080057e4", 
            "FUN_08002f74", 
            "FUN_08002f40", 
            "FUN_08005360", 
            "FUN_08005324", 
            "FUN_080052dc"
        ], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x080053a0", 
        "calling": [
            "FUN_08007c7c"
        ], 
        "current_name": "FUNC_080053a0"
    }, 
    "FUN_080092c4": {
        "renaming": {
            "iVar1": "data_index", 
            "puVar2": "data_ptr", 
            "UNRECOVERED_JUMPTABLE": "jumptable_ptr", 
            "FUN_080092c4": "initialize_and_execute_game_080092c4"
        }, 
        "code": "void initialize_and_execute_game_080092c4() {\\n  int data_index;\\n  undefined4 *data_ptr;\\n  code *jumptable_ptr;\\n  for (data_index = 0; PTR_DAT_08009304 + data_index < PTR_DAT_08009308; data_index += 4) {\\n    *(undefined4 *)(PTR_DAT_08009304 + data_index) = *(undefined4 *)(DAT_08009300 + data_index);\\n  }\\n  for (data_ptr = (undefined4 *)PTR_DAT_0800930c; data_ptr < PTR_DAT_08009310; data_ptr++) {\\n    *data_ptr = 0;\\n  }\\n  initialize_data();\\n  execute_functions();\\n  jumptable_ptr = (code *)0x80092fa;\\n  initialize_and_run_game();\\n  (*jumptable_ptr)();\\n  return;\\n}", 
        "called": [
            "FUN_08007540", 
            "FUN_0800756c", 
            "FUN_0800b3e8"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080092c4", 
        "calling": [], 
        "imported": true, 
        "current_name": "initialize_and_execute_game_080092c4"
    }, 
    "FUN_08008250": {
        "renaming": {
            "param_1": "data", 
            "FUN_08008250": "send_byte_to_device_08008250"
        }, 
        "code": "void send_byte_to_device_08008250(void *data){\\n  send_byte_to_device_08008250_08007e1c(data);\\n  return;\\n}", 
        "called": [
            "FUN_08007e1c"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08008250", 
        "calling": [
            "FUN_080036f0", 
            "FUN_080036c6", 
            "FUN_0800369c", 
            "FUN_08003778", 
            "FUN_08003826", 
            "FUN_080037fc"
        ], 
        "imported": true, 
        "current_name": "send_byte_to_device_08008250"
    }, 
    "FUN_0800184c": {
        "renaming": {
            "iVar1": "integer_value", 
            "param_1": "output", 
            "param_2": "max_output_size", 
            "param_3": "input_length", 
            "param_4": "input", 
            "uVar2": "return_value", 
            "FUN_0800184c": "parse_and_validate_input_0800184c"
        }, 
        "code": "int parse_and_validate_input_0800184c(byte *output, int max_output_size, int input_length, byte *input) {\\n  int current_index = (int)*input;\\n  if (*(char *)(input_length + current_index) == '\\0') {\\n    return 0;\\n  }\\n  else {\\n    *output = *(byte *)(input_length + current_index);\\n    if ((*output < 0x41) || (0x5a < *output)) {\\n      *PTR_DAT_080018c8 = 2;\\n      return 0;\\n    }\\n    else {\\n      *input = *input + 1;\\n      int integer_value = parse_integer_from_string_08002638(input_length, input, max_output_size);\\n      if (integer_value == 0) {\\n        *PTR_DAT_080018c8 = 1;\\n        return 0;\\n      }\\n      else {\\n        return 1;\\n      }\\n    }\\n  }\\n}", 
        "called": [
            "FUN_08002638"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800184c", 
        "calling": [
            "FUN_080005b4"
        ], 
        "imported": true, 
        "current_name": "parse_and_validate_input_0800184c"
    }, 
    "FUN_08001f00": {
        "renaming": {
            "FUN_08001f00": "FUNC_08001f00"
        }, 
        "code": "\nvoid FUNC_08001f00(int param_1,undefined4 *param_2,int param_3,byte param_4,byte param_5,byte param_6\n                 ,undefined4 param_7,char param_8,undefined4 param_9,char param_10)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  int iVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  uint local_6c [4];\n  undefined4 local_5c;\n  undefined4 local_58;\n  undefined4 local_54;\n  undefined4 local_50;\n  undefined4 local_4c;\n  undefined4 local_48;\n  ushort local_42;\n  undefined4 local_40;\n  undefined4 local_3c;\n  undefined4 local_38;\n  uint local_34;\n  undefined4 local_30;\n  undefined4 local_2c;\n  char local_27;\n  ushort local_26;\n  undefined4 local_24;\n  uint local_20;\n  uint local_1c;\n  \n  local_2c = FUNC_08008cdc(*(undefined4 *)((uint)param_4 * 4 + param_1),\n                          *(undefined4 *)((uint)param_4 * 4 + param_3));\n  local_30 = FUNC_08008cdc(*(undefined4 *)((uint)param_5 * 4 + param_1),\n                          *(undefined4 *)((uint)param_5 * 4 + param_3));\n  local_34 = FUNC_08008cd8(param_2[param_6],*(undefined4 *)((uint)param_6 * 4 + param_1));\n  local_1c = *(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000;\n  local_20 = *(uint *)((uint)param_5 * 4 + param_3) ^ 0x80000000;\n  local_38 = FUNC_08008cd8(param_2[param_4],local_2c);\n  local_3c = FUNC_08008cd8(param_2[param_5],local_30);\n  uVar1 = FUNC_08008eec(local_1c,local_3c);\n  uVar2 = FUNC_08008eec(local_20,local_38);\n  uVar1 = FUNC_08008cd8(uVar1,uVar2);\n  uVar5 = FUNC_08008590(uVar1);\n  uVar1 = FUNC_08008eec(local_1c,local_38);\n  uVar2 = FUNC_08008eec(local_20,local_3c);\n  uVar1 = FUNC_08008cdc(uVar1,uVar2);\n  uVar6 = FUNC_08008590(uVar1);\n  uVar5 = thunk_calculate_08009990((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                             (int)((ulonglong)uVar6 >> 0x20));\n  local_24 = calculateFloat_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  if (param_10 == '\\0') {\n    iVar3 = check_result_and_return_concatenation_0800923c(local_24,0);\n    if (iVar3 != 0) {\n      uVar5 = FUNC_08008590(local_24);\n      uVar5 = FUNC_080082d4((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),DAT_08002240,DAT_08002244);\n      local_24 = calculateFloat_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    }\n  }\n  else {\n    iVar3 = check_results_08009250(local_24,0);\n    if (iVar3 != 0) {\n      uVar5 = FUNC_08008590(local_24);\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),DAT_08002240,DAT_08002244);\n      local_24 = calculateFloat_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    }\n  }\n  uVar1 = FUNC_08008eec(local_24,param_9);\n  uVar5 = FUNC_08008590(uVar1);\n  uVar6 = FUNC_08008590(local_34 & 0x7fffffff);\n  uVar5 = hypot_and_classify_0800981c((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                       (int)((ulonglong)uVar6 >> 0x20));\n  local_40 = calculateFloat_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  iVar3 = checkResultIsNotEmpty_08009214(local_40,0);\n  if (iVar3 == 0) {\n    uVar1 = FUNC_08009054(local_40,*(undefined4 *)(PTR_DAT_08002248 + 0x1c));\n    uVar5 = FUNC_08008590(uVar1);\n    uVar5 = decode_080094c0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_42 = calculate_value_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    if (param_8 != '\\0') {\n      uVar1 = calculateTwosComplement_08008e44(local_42);\n      param_7 = FUNC_08008eec(param_7,uVar1);\n    }\n    uVar1 = calculateTwosComplement_08008e44(local_42);\n    local_48 = FUNC_08009054(local_24,uVar1);\n    uVar1 = calculateTwosComplement_08008e44(local_42);\n    local_4c = FUNC_08009054(local_34,uVar1);\n    uVar5 = FUNC_08008590(local_48);\n    uVar5 = FUNC_08008640((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),0,DAT_0800224c);\n    uVar6 = FUNC_08008590(local_48);\n    uVar5 = FUNC_08008640((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                         (int)((ulonglong)uVar6 >> 0x20));\n    uVar5 = FUNC_080082d0(0,DAT_08002250,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_50 = calculateFloat_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_54 = local_48;\n    local_27 = '\\0';\n    local_6c[param_6] = *(uint *)(param_1 + (uint)param_6 * 4);\n    for (local_26 = 1; local_26 < local_42; local_26 = local_26 + 1) {\n      if ((int)local_27 < (int)(uint)(byte)PTR_DAT_08002248[0x3e]) {\n        uVar1 = FUNC_08008eec(local_1c,local_54);\n        uVar2 = FUNC_08008eec(local_20,local_50);\n        local_6c[3] = FUNC_08008cdc(uVar1,uVar2);\n        uVar1 = FUNC_08008eec(local_1c,local_50);\n        uVar2 = FUNC_08008eec(local_20,local_54);\n        local_1c = FUNC_08008cd8(uVar1,uVar2);\n        local_20 = local_6c[3];\n        local_27 = local_27 + '\\x01';\n      }\n      else {\n        uVar1 = calculateTwosComplement_08008e44(local_26);\n        uVar1 = FUNC_08008eec(uVar1,local_48);\n        uVar5 = FUNC_08008590(uVar1);\n        uVar5 = calculate_result_08009410((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        local_58 = calculateFloat_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        uVar1 = calculateTwosComplement_08008e44(local_26);\n        uVar1 = FUNC_08008eec(uVar1,local_48);\n        uVar5 = FUNC_08008590(uVar1);\n        uVar5 = calculate_result_080096e8((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        local_5c = calculateFloat_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        uVar1 = FUNC_08008eec(*(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000,local_58);\n        uVar2 = FUNC_08008eec(*(undefined4 *)((uint)param_5 * 4 + param_3),local_5c);\n        local_1c = FUNC_08008cdc(uVar1,uVar2);\n        uVar1 = FUNC_08008eec(*(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000,local_5c);\n        uVar2 = FUNC_08008eec(*(undefined4 *)((uint)param_5 * 4 + param_3),local_58);\n        local_20 = FUNC_08008cd8(uVar1,uVar2);\n        local_27 = '\\0';\n      }\n      uVar4 = FUNC_08008cdc(local_2c,local_1c);\n      local_6c[param_4] = uVar4;\n      uVar4 = FUNC_08008cdc(local_30,local_20);\n      local_6c[param_5] = uVar4;\n      uVar4 = FUNC_08008cdc(local_6c[param_6],local_4c);\n      local_6c[param_6] = uVar4;\n      checkDeviceStatusAndUpdateIfNecessary_08001e98(local_6c[0],local_6c[1],local_6c[2],param_7,param_8);\n      if (*PTR_DAT_08002404 != '\\0') {\n        return;\n      }\n    }\n    checkDeviceStatusAndUpdateIfNecessary_08001e98(*param_2,param_2[1],param_2[2],param_7,param_8);\n  }\n  return;\n}\n\n", 
        "called": [
            "FUN_0800923c", 
            "FUN_08008640", 
            "FUN_080082d0", 
            "FUN_080096e8", 
            "FUN_08009410", 
            "FUN_08008bf0", 
            "FUN_08008cd8", 
            "FUN_08009250", 
            "FUN_08008cdc", 
            "FUN_08009214", 
            "FUN_08008e44", 
            "FUN_08008c30", 
            "FUN_08001e98", 
            "FUN_0800981c", 
            "FUN_08009054", 
            "thunk_FUN_08009990", 
            "FUN_080094c0", 
            "FUN_08008590", 
            "FUN_080082d4", 
            "FUN_08008eec"
        ], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x08001f00", 
        "calling": [
            "FUN_080005b4"
        ], 
        "current_name": "FUNC_08001f00"
    }, 
    "FUN_08006ce0": {
        "renaming": {
            "FUN_08006ce0": "set_parameter_value_08006ce0", 
            "param_1": "value"
        }, 
        "code": "void set_parameter_value_08006ce0(undefined4 value)\\n{\\n  setParameter_08006950(value);\\n  return;\\n}", 
        "called": [
            "FUN_08006950"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006ce0", 
        "calling": [
            "FUN_080059b4"
        ], 
        "imported": true, 
        "current_name": "set_parameter_value_08006ce0"
    }, 
    "FUN_08006d4a": {
        "renaming": {
            "FUN_08006d4a": "set_bit_in_array_08006d4a", 
            "param_1": "character", 
            "setBitInArray_080069e4": "set_bit"
        }, 
        "code": "void set_bit_in_array_08006d4a(char character) {\\n  setBitInArray_080069e4((int)character);\\n  return;\\n}", 
        "called": [
            "FUN_080069e4"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006d4a", 
        "calling": [], 
        "imported": true, 
        "current_name": "set_bit_in_array_08006d4a"
    }, 
    "FUN_08008894": {
        "renaming": {
            "FUN_08008894": "FUNC_08008894"
        }, 
        "code": "\nulonglong FUNC_08008894(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = calculateDouble_08008a02();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_080089b2;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_080089b2:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n", 
        "called": [
            "FUN_08008a02"
        ], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x08008894", 
        "calling": [
            "FUN_08001994", 
            "FUN_08003004", 
            "FUN_0800af78", 
            "FUN_0800a1bc", 
            "FUN_080005b4", 
            "FUN_080098d0", 
            "FUN_08009990"
        ], 
        "current_name": "FUNC_08008894"
    }, 
    "FUN_08000374": {
        "renaming": {
            "FUN_08000374": "set_memory_with_checksum_08000374", 
            "param_1": "memory_start", 
            "local_1c": "length_remaining", 
            "local_9": "checksum", 
            "local_18": "current_byte", 
            "param_2": "data", 
            "param_3": "data_length", 
            "local_14": "current_address"
        }, 
        "code": "void set_memory_with_checksum_08000374(int memory_start, char *data, int data_length)\\n{\\n  int length_remaining = data_length;\\n  char *current_byte = data;\\n  int current_address = memory_start;\\n  if (*(int *)PTR_DAT_080003e8 == 0) {\\n    initializeMemory_080002f0();\\n    current_byte = data;\\n    current_address = memory_start;\\n  }\\n  char checksum = '\\0';\\n  for (; length_remaining != 0; length_remaining--) {\\n    checksum = (checksum != '\\0') + *current_byte;\\n    set_memory_value_08000340(current_address,*current_byte);\\n    current_byte++;\\n    current_address++;\\n  }\\n  set_memory_value_08000340(current_address,checksum);\\n  return;\\n}", 
        "called": [
            "FUN_080002f0", 
            "FUN_08000340"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08000374", 
        "calling": [
            "FUN_08004bc0", 
            "FUN_08004bf4", 
            "FUN_08004c2a"
        ], 
        "imported": true, 
        "current_name": "set_memory_with_checksum_08000374"
    }, 
    "FUN_080037fc": {
        "renaming": {
            "local_c": "abs_value", 
            "FUN_080037fc": "print_abs_value_080037fc", 
            "param_1": "value", 
            "send_byte_to_device_08008250": "send_byte_to_device", 
            "print_uint_as_string_08003778": "print_uint_as_string"
        }, 
        "code": "void print_abs_value_080037fc(int value) {\\n  int abs_value = value;\\n  if (value < 0) {\\n    send_byte_to_device(0x2d);\\n    abs_value = -value;\\n  }\\n  print_uint_as_string(abs_value);\\n  return;\\n}", 
        "called": [
            "FUN_08008250", 
            "FUN_08003778"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080037fc", 
        "calling": [
            "FUN_08004250", 
            "FUN_08004900", 
            "FUN_080046d0"
        ], 
        "imported": true, 
        "current_name": "print_abs_value_080037fc"
    }, 
    "FUN_0800a1bc": {
        "renaming": {
            "FUN_0800a1bc": "FUNC_0800a1bc"
        }, 
        "code": "\nuint FUNC_0800a1bc(uint param_1,uint param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  undefined4 uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  undefined8 uVar14;\n  \n  if ((DAT_0800a340 & ~param_2) == 0) {\n    uVar14 = FUNC_08008640(param_1,param_2,param_1,param_2);\n    uVar8 = FUNC_080082d4((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),param_1,param_2);\n    return uVar8;\n  }\n  if ((int)param_2 < 1) {\n    if ((param_2 & 0x7fffffff | param_1) == 0) {\n      return param_1;\n    }\n    if (param_2 != 0) {\n      uVar14 = FUNC_080082d0(param_1,param_2,param_1);\n      uVar5 = (undefined4)((ulonglong)uVar14 >> 0x20);\n      uVar8 = FUNC_08008894((int)uVar14,uVar5,(int)uVar14,uVar5);\n      return uVar8;\n    }\n    do {\n      uVar10 = param_1;\n      uVar8 = uVar10 >> 0xb;\n      param_2 = param_2 - 0x15;\n      param_1 = uVar10 << 0x15;\n    } while (uVar8 == 0);\n    uVar2 = param_2;\n    if (-1 < (int)uVar10) goto LAB_0800a290;\n    uVar11 = 0x20;\n    uVar6 = 0xffffffff;\n    uVar10 = param_1;\n  }\n  else {\n    uVar2 = (int)param_2 >> 0x14;\n    uVar8 = param_2;\n    uVar10 = param_1;\n    if (uVar2 != 0) goto LAB_0800a1da;\nLAB_0800a290:\n    uVar10 = 0;\n    uVar11 = uVar8;\n    do {\n      uVar6 = uVar10;\n      uVar8 = uVar11 << 1;\n      iVar3 = uVar11 << 0xc;\n      uVar10 = uVar6 + 1;\n      uVar11 = uVar8;\n    } while (-1 < iVar3);\n    uVar11 = 0x20 - uVar10;\n    param_2 = uVar2;\n    uVar10 = param_1 << (uVar10 & 0xff);\n  }\n  uVar8 = param_1 >> (uVar11 & 0xff) | uVar8;\n  uVar2 = param_2 - uVar6;\nLAB_0800a1da:\n  uVar8 = uVar8 & 0xfffff | 0x100000;\n  if (-1 < (int)(uVar2 << 0x1f)) {\n    uVar8 = uVar8 * 2 - ((int)uVar10 >> 0x1f);\n    uVar10 = uVar10 << 1;\n  }\n  uVar13 = 0;\n  uVar8 = uVar8 * 2 - ((int)uVar10 >> 0x1f);\n  uVar10 = uVar10 << 1;\n  uVar2 = 0;\n  uVar11 = 0x16;\n  uVar6 = 0x200000;\n  do {\n    iVar3 = uVar2 + uVar6;\n    if (iVar3 <= (int)uVar8) {\n      uVar8 = uVar8 - iVar3;\n      uVar2 = iVar3 + uVar6;\n      uVar13 = uVar13 + uVar6;\n    }\n    uVar11 = uVar11 - 1;\n    uVar8 = uVar8 * 2 - ((int)uVar10 >> 0x1f);\n    uVar6 = uVar6 >> 1;\n    uVar10 = uVar10 << 1;\n  } while (uVar11 != 0);\n  uVar1 = 0x20;\n  uVar7 = 0x80000000;\n  uVar6 = uVar11;\n  do {\n    uVar4 = uVar7 + uVar11;\n    uVar12 = uVar2;\n    if ((int)uVar2 < (int)uVar8) {\n      if ((int)uVar4 < 0) {\nLAB_0800a26a:\n        if (-1 < (int)(uVar4 + uVar7)) {\n          uVar12 = uVar2 + 1;\n        }\n      }\n      uVar9 = uVar8 - uVar2;\n      uVar2 = uVar12;\n      if (uVar10 < uVar4) {\n        uVar9 = uVar9 - 1;\n      }\nLAB_0800a262:\n      uVar11 = uVar4 + uVar7;\n      uVar10 = uVar10 - uVar4;\n      uVar6 = uVar6 + uVar7;\n      uVar8 = uVar9;\n    }\n    else if ((uVar8 == uVar2) && (uVar4 <= uVar10)) {\n      if ((int)uVar4 < 0) goto LAB_0800a26a;\n      uVar9 = 0;\n      uVar2 = uVar8;\n      goto LAB_0800a262;\n    }\n    uVar1 = uVar1 - 1;\n    uVar7 = uVar7 >> 1;\n    uVar8 = uVar8 * 2 - ((int)uVar10 >> 0x1f);\n    uVar10 = uVar10 << 1;\n    if (uVar1 == 0) {\n      if ((uVar8 | uVar10) == 0) {\n        uVar1 = uVar6 >> 1;\n      }\n      else if (uVar6 == 0xffffffff) {\n        uVar13 = uVar13 + 1;\n      }\n      else {\n        uVar1 = uVar6 + 1 >> 1;\n      }\n      if ((uVar13 & 1) != 0) {\n        uVar1 = uVar1 | 0x80000000;\n      }\n      return uVar1;\n    }\n  } while( true );\n}\n\n", 
        "called": [
            "FUN_08008894", 
            "FUN_08008640", 
            "FUN_080082d0", 
            "FUN_080082d4"
        ], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x0800a1bc", 
        "calling": [
            "FUN_08009b24", 
            "FUN_080098d0"
        ], 
        "current_name": "FUNC_0800a1bc"
    }, 
    "FUN_0800525c": {
        "renaming": {
            "doNothing_08005220": "doNothing2", 
            "do_nothing_08005208": "doNothing3", 
            "do_nothing_and_return_08005250": "doNothingAndReturn", 
            "param_1": "newChar", 
            "display_alarm_until_condition_met_08002fd4": "displayAlarmUntilConditionMet", 
            "PTR_DAT_080052a8": "currentCharPtr", 
            "FUN_0800525c": "checkAndUpdateCharacter_0800525c", 
            "doNothing_0800522c": "doNothing1"
        }, 
        "code": "void checkAndUpdateCharacter_0800525c(char newChar) {\\n  int currentChar = (int)newChar;\\n  int *PTR_DAT_080052a8 = PTR_DAT_080052a8;\\n  if (currentChar != (uint)(byte)*PTR_DAT_080052a8) {\\n    displayAlarmUntilConditionMet();\\n    if (newChar == '\\0') {\\n      doNothingAndReturn();\\n    }\\n    else {\\n      if (newChar < '\\x01') {\\n        doNothing_0800522c();\\n      }\\n      else {\\n        doNothing_08005220();\\n      }\\n      doNothing3();\\n    }\\n    *PTR_DAT_080052a8 = newChar;\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08005250", 
            "FUN_08005220", 
            "FUN_0800522c", 
            "FUN_08002fd4", 
            "FUN_08005208"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800525c", 
        "calling": [
            "FUN_080005b4"
        ], 
        "imported": true, 
        "current_name": "checkAndUpdateCharacter_0800525c"
    }, 
    "FUN_080073d4": {
        "renaming": {
            "param_1": "bitIndex", 
            "FUN_080073d4": "setBitInShortArray_080073d4"
        }, 
        "code": "void setBitInShortArray_080073d4(uint bitIndex)\\n{\\n  uint shortIndex = (int)bitIndex >> 4;\\n  uint* shortArray = (uint*)(shortIndex * 0x400 + 0x4002001a);\\n  uint bitMask = 1 << (bitIndex & 0xf);\\n  *(short*)shortArray = (short)bitMask;\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080073d4", 
        "calling": [
            "FUN_08007520"
        ], 
        "imported": true, 
        "current_name": "setBitInShortArray_080073d4"
    }, 
    "FUN_08006dfe": {
        "renaming": {
            "param_1": "character", 
            "FUN_08006dfe": "set_bit_in_array_08006dfe", 
            "set_bit_in_array_08006a8c": "set_bit_in_array_helper"
        }, 
        "code": "void set_bit_in_array_08006dfe(char character) {\\n  set_bit_in_array_08006dfe_helper((int)character);\\n  return;\\n}", 
        "called": [
            "FUN_08006a8c"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006dfe", 
        "calling": [], 
        "imported": true, 
        "current_name": "set_bit_in_array_08006dfe"
    }, 
    "FUN_08006d66": {
        "renaming": {
            "waitForDataSync_08006c70": "waitForDataSync", 
            "FUN_08006d66": "waitForDataSyncAndReturn_08006d66"
        }, 
        "code": "void waitForDataSyncAndReturn_08006d66(void)\\n{\\n    waitForDataSync_08006c70();\\n    return;\\n}", 
        "called": [
            "FUN_08006c70"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006d66", 
        "calling": [], 
        "imported": true, 
        "current_name": "waitForDataSyncAndReturn_08006d66"
    }, 
    "FUN_08006e88": {
        "renaming": {
            "FUN_08006e88": "FUNC_08006e88"
        }, 
        "code": "\nvoid FUNC_08006e88(uint *param_1,uint *param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint local_c;\n  \n  for (local_c = 0; local_c < 0x10; local_c = local_c + 1) {\n    uVar1 = 1 << (local_c & 0xff);\n    uVar2 = *param_2 & uVar1;\n    if (uVar2 == uVar1) {\n      if ((param_2[1] == 2) || (param_2[1] == 0x12)) {\n        uVar1 = param_2[4];\n        param_1[(local_c >> 3) + 8] = param_1[(local_c >> 3) + 8] & ~(0xf << ((local_c & 7) << 2));\n        param_1[(local_c >> 3) + 8] = param_1[(local_c >> 3) + 8] | uVar1 << ((local_c & 7) << 2);\n      }\n      *param_1 = *param_1 & ~(3 << ((local_c & 0x7f) << 1));\n      *param_1 = *param_1 | (param_2[1] & 3) << ((local_c & 0x7f) << 1);\n      if ((((param_2[1] == 1) || (param_2[1] == 2)) || (param_2[1] == 0x11)) || (param_2[1] == 0x12)\n         ) {\n        param_1[2] = param_1[2] & ~(3 << ((local_c & 0x7f) << 1));\n        param_1[2] = param_1[2] | param_2[3] << ((local_c & 0x7f) << 1);\n        param_1[1] = param_1[1] & ~(1 << (local_c & 0xff));\n        param_1[1] = param_1[1] | (param_2[1] >> 4 & 1) << (local_c & 0xff);\n      }\n      param_1[3] = param_1[3] & ~(3 << ((local_c & 0x7f) << 1));\n      param_1[3] = param_1[3] | param_2[2] << ((local_c & 0x7f) << 1);\n      if ((param_2[1] & 0x10000000) != 0) {\n        *(uint *)(DAT_0800719c + 0x44) = *(uint *)(DAT_0800719c + 0x44) | 0x4000;\n        *(uint *)(DAT_080071a0 + ((local_c >> 2) + 2) * 4) =\n             ~(0xf << ((local_c & 3) << 2)) & *(uint *)(DAT_080071a0 + ((local_c >> 2) + 2) * 4);\n        if (param_1 == DAT_080071a4) {\n          iVar3 = 0;\n        }\n        else if (param_1 == DAT_080071a8) {\n          iVar3 = 1;\n        }\n        else if (param_1 == DAT_080071ac) {\n          iVar3 = 2;\n        }\n        else if (param_1 == DAT_080071b0) {\n          iVar3 = 3;\n        }\n        else if (param_1 == DAT_080071b4) {\n          iVar3 = 4;\n        }\n        else if (param_1 == DAT_080071b8) {\n          iVar3 = 5;\n        }\n        else if (param_1 == DAT_080071bc) {\n          iVar3 = 6;\n        }\n        else if (param_1 == DAT_080071c0) {\n          iVar3 = 7;\n        }\n        else if (param_1 == DAT_080071c4) {\n          iVar3 = 8;\n        }\n        else if (param_1 == DAT_080071c8) {\n          iVar3 = 9;\n        }\n        else {\n          iVar3 = 10;\n        }\n        *(uint *)(DAT_080071a0 + ((local_c >> 2) + 2) * 4) =\n             iVar3 << ((local_c & 3) << 2) | *(uint *)(DAT_080071a0 + ((local_c >> 2) + 2) * 4);\n        *DAT_080071cc = ~uVar2 & *DAT_080071cc;\n        DAT_080071cc[1] = ~uVar2 & DAT_080071cc[1];\n        if ((param_2[1] & 0x10000) != 0) {\n          *DAT_080071cc = uVar2 | *DAT_080071cc;\n        }\n        if ((param_2[1] & 0x20000) != 0) {\n          DAT_080071cc[1] = uVar2 | DAT_080071cc[1];\n        }\n        DAT_080071cc[2] = ~uVar2 & DAT_080071cc[2];\n        DAT_080071cc[3] = ~uVar2 & DAT_080071cc[3];\n        if ((param_2[1] & 0x100000) != 0) {\n          DAT_080071cc[2] = uVar2 | DAT_080071cc[2];\n        }\n        if ((param_2[1] & 0x200000) != 0) {\n          DAT_080071cc[3] = uVar2 | DAT_080071cc[3];\n        }\n      }\n    }\n  }\n  return;\n}\n\n", 
        "called": [], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x08006e88", 
        "calling": [
            "FUN_0800640c", 
            "FUN_0800778c"
        ], 
        "current_name": "FUNC_08006e88"
    }, 
    "FUN_080001e0": {
        "renaming": {
            "FUN_080001e0": "doNothing_080001e0"
        }, 
        "code": "void doNothing_080001e0()\\n{\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080001e0", 
        "calling": [
            "FUN_08000220"
        ], 
        "imported": true, 
        "current_name": "doNothing_080001e0"
    }, 
    "FUN_080036f0": {
        "renaming": {
            "local_c": "mask", 
            "uVar1": "bit_value", 
            "param_1": "number", 
            "param_2": "num_bits", 
            "FUN_080036f0": "print_binary_representation_080036f0", 
            "local_10": "bit"
        }, 
        "code": "void print_binary_representation_080036f0(uint number, int num_bits) {\\n  uint mask = 1 << (num_bits - 1);\\n  for (int bit = 0; bit < num_bits; bit++) {\\n    if ((mask & number) == 0) {\\n      send_byte_to_device_08008250('0');\\n    }\\n    else {\\n      send_byte_to_device_08008250('1');\\n    }\\n    mask >>= 1;\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08008250"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080036f0", 
        "calling": [
            "FUN_08003740", 
            "FUN_0800375c"
        ], 
        "imported": true, 
        "current_name": "print_binary_representation_080036f0"
    }, 
    "FUN_08002edc": {
        "renaming": {
            "FUN_08002edc": "process_input_and_calculate_result_08002a94_and_process_inputs_08002ba8_and_process_data_08002e08_08002edc"
        }, 
        "code": "void process_input_and_calculate_result_08002a94_and_process_inputs_08002ba8_and_process_data_08002e08_08002edc(void)\\n{\\n  process_input_and_calculate_result_08002a94();\\n  process_inputs_08002ba8();\\n  process_data_08002e08();\\n  return;\\n}", 
        "called": [
            "FUN_08002ba8", 
            "FUN_08002e08", 
            "FUN_08002a94"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002edc", 
        "calling": [
            "FUN_08003004", 
            "FUN_08003618"
        ], 
        "imported": true, 
        "current_name": "process_input_and_calculate_result_08002a94_and_process_inputs_08002ba8_and_process_data_08002e08_08002edc"
    }, 
    "FUN_0800375c": {
        "renaming": {
            "param_1": "number", 
            "FUN_0800375c": "print_binary_representation_0800375c"
        }, 
        "code": "void print_binary_representation_0800375c(uint16_t number, uint8_t length) {\\n    print_binary_representation_0800375c_080036f0(number, length);\\n    return;\\n}", 
        "called": [
            "FUN_080036f0"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800375c", 
        "calling": [
            "FUN_08004250"
        ], 
        "imported": true, 
        "current_name": "print_binary_representation_0800375c"
    }, 
    "FUN_08009990": {
        "renaming": {
            "iVar1": "tempVar1", 
            "param_1": "input1", 
            "param_2": "input2", 
            "param_3": "input3", 
            "param_4": "input4", 
            "uVar3": "tempVar3", 
            "uVar2": "tempVar2", 
            "FUN_08009990": "calculate_08009990", 
            "uVar5": "tempVar5", 
            "uVar4": "tempVar4", 
            "uVar6": "tempVar6"
        }, 
        "code": "uint calculate_08009990(uint input1, uint input2, uint input3, uint input4)\\n{\\n  int tempVar1;\\n  undefined4 tempVar2;\\n  uint tempVar3;\\n  uint tempVar4;\\n  uint tempVar5;\\n  undefined8 tempVar6;\\n  \\n  tempVar6 = CONCAT44(DAT_08009b04,DAT_08009b00);\\n  tempVar4 = input4 & 0x7fffffff;\\n  if ((DAT_08009b18 < (tempVar4 | (-input3 | input3) >> 0x1f)) ||\\n     (tempVar5 = input2 & 0x7fffffff, DAT_08009b18 < (tempVar5 | (-input1 | input1) >> 0x1f))) {\\n    tempVar4 = skippedFunction1(input3,input4,input1,input2);\\n  }\\n  else {\\n    if ((input4 + 0xc0100000 | input3) == 0) {\\n      tempVar4 = skippedFunction2();\\n      return tempVar4;\\n    }\\n    tempVar3 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\\n    if ((tempVar5 | input1) == 0) {\\n      tempVar4 = DAT_08009af0;\\n      if ((tempVar3 != 2) && (tempVar4 = input1, tempVar3 == 3)) {\\n        tempVar4 = DAT_08009af8;\\n      }\\n    }\\n    else {\\n      if ((tempVar4 | input3) != 0) {\\n        if (tempVar4 == DAT_08009b18) {\\n          tempVar3 = tempVar3 - 1;\\n          if (tempVar5 == tempVar4) {\\n            if (2 < tempVar3) {\\n              return DAT_08009b10;\\n            }\\n            return *(uint *)(PTR_DAT_08009b20 + tempVar3 * 8);\\n          }\\n          if (tempVar3 < 3) {\\n            return *(uint *)(PTR_DAT_08009b1c + tempVar3 * 8);\\n          }\\n          return 0;\\n        }\\n        if (tempVar5 != DAT_08009b18) {\\n          tempVar1 = (int)(tempVar5 - tempVar4) >> 0x14;\\n          if ((int)(tempVar5 - tempVar4) < 0x3d00000) {\\n            if (((int)input4 < 0) && (tempVar1 + 0x3c < 0 != SCARRY4(tempVar1,0x3c))) {\\n              tempVar6 = 0;\\n            }\\n            else {\\n              skippedFunction3(input1,input2,input3,input4,input4);\\n              doNothing_0800b2cc();\\n              tempVar6 = skippedFunction2();\\n            }\\n          }\\n          tempVar2 = (undefined4)((ulonglong)tempVar6 >> 0x20);\\n          tempVar4 = (uint)tempVar6;\\n          if (tempVar3 == 1) {\\n            return tempVar4;\\n          }\\n          if (tempVar3 == 2) {\\n            tempVar6 = skippedFunction1(tempVar4,tempVar2,DAT_08009ae8,DAT_08009aec);\\n            tempVar4 = skippedFunction1(DAT_08009af0,DAT_08009af4,(int)tempVar6,\\n                                 (int)((ulonglong)tempVar6 >> 0x20));\\n            return tempVar4;\\n          }\\n          if (tempVar3 == 0) {\\n            return tempVar4;\\n          }\\n          tempVar6 = skippedFunction1(tempVar4,tempVar2,DAT_08009ae8,DAT_08009aec);\\n          tempVar4 = skippedFunction1((int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20),DAT_08009af0,DAT_08009af4)\\n          ;\\n          return tempVar4;\\n        }\\n      }\\n      tempVar4 = DAT_08009b08;\\n      if (-1 < (int)input2) {\\n        tempVar4 = DAT_08009b00;\\n      }\\n    }\\n  }\\n  return tempVar4;\\n}", 
        "called": [
            "FUN_0800af78", 
            "FUN_08008894", 
            "FUN_0800b2cc", 
            "FUN_080082d0", 
            "FUN_080082d4"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08009990", 
        "calling": [
            "thunk_FUN_08009990"
        ], 
        "imported": true, 
        "current_name": "calculate_08009990"
    }, 
    "FUN_08007e58": {
        "renaming": {
            "DAT_08007e80": "data", 
            "FUN_08007e58": "isBitSet_08007e58"
        }, 
        "code": "bool isBitSet_08007e58()\\n{\\n  uint* DAT_08007e80 = DAT_08007e80;\\n  bool isSet = (*DAT_08007e80 & 0x20) != 0;\\n  return isSet;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007e58", 
        "calling": [
            "FUN_08008286"
        ], 
        "imported": true, 
        "current_name": "isBitSet_08007e58"
    }, 
    "FUN_080059f8": {
        "renaming": {
            "*(undefined4 *)(DAT_08005a4c + 0x14)": "dat_pointer[5]", 
            "*(undefined4 *)(DAT_08005a4c + 0x18)": "dat_pointer[6]", 
            "DAT_08005a4c": "dat_pointer", 
            "*(undefined4 *)(DAT_08005a4c + 0x20)": "dat_pointer[8]", 
            "FUN_080059f8": "initialize_values_080059f8", 
            "*(undefined4 *)(DAT_08005a4c + 0x24)": "dat_pointer[9]", 
            "doNothing_08005a5c": "do_nothing", 
            "*(undefined4 *)(DAT_08005a4c + 0x10)": "dat_pointer[4]"
        }, 
        "code": "void initialize_values_080059f8(void)\\n{\\n    int* ptr_dat_08005a4c = (int*)DAT_08005a4c;\\n    ptr_dat_08005a4c[8] = -1;\\n    ptr_dat_08005a4c[8] = 0;\\n    ptr_dat_08005a4c[9] = -1;\\n    ptr_dat_08005a4c[9] = 0;\\n    ptr_dat_08005a4c[4] = -1;\\n    ptr_dat_08005a4c[4] = 0;\\n    ptr_dat_08005a4c[5] = -1;\\n    ptr_dat_08005a4c[5] = 0;\\n    ptr_dat_08005a4c[6] = -1;\\n    ptr_dat_08005a4c[6] = 0;\\n    doNothing_08005a5c();\\n}", 
        "called": [
            "FUN_08005a5c"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080059f8", 
        "calling": [], 
        "imported": true, 
        "current_name": "initialize_values_080059f8"
    }, 
    "FUN_08003f34": {
        "renaming": {
            "bVar2": "current_byte", 
            "bVar1": "index", 
            "PTR_DAT_08004024": "data_array", 
            "display_alarm_if_needed_08003a74": "display_alarm_if_needed", 
            "FUNC_08003b98": "FUNC", 
            "resetData_08003980": "reset_data", 
            "*PTR_DAT_0800401c": "is_alarm_displayed", 
            "send_error_message_08004030": "send_error_message", 
            "*PTR_DAT_08004020": "last_index", 
            "uVar3": "error_code", 
            "process_next_byte_08008286": "process_next_byte", 
            "*PTR_DAT_08004028": "is_inside_parenthesis", 
            "FUN_08003f34": "process_input_and_send_error_message_08003f34"
        }, 
        "code": "void process_input_and_send_error_message_08003f34() {\\n  byte current_byte;\\n  byte *PTR_DAT_08004028 = 0;\\n  undefined4 error_code;\\n  while(true) {\\n    while(true) {\\n      current_byte = process_next_byte();\\n      if(current_byte == 0xff) {\\n        return;\\n      }\\n      if((current_byte == 10) || (current_byte == 0xd)) {\\n        break;\\n      }\\n      if(*PTR_DAT_08004028 == '\\0') {\\n        if((current_byte > 0x20) && (current_byte != 0x2f)) {\\n          if(current_byte == 0x28) {\\n            *PTR_DAT_08004028 = 1;\\n          }\\n          else if(*PTR_DAT_08004020 == -1) {\\n            send_error_message(0xd);\\n            resetData_08003980();\\n          }\\n          else if((current_byte < 0x61) || (current_byte > 0x7a)) {\\n            byte index = *PTR_DAT_08004020;\\n            *PTR_DAT_08004020 = index + 1;\\n            PTR_DAT_08004024[index] = current_byte;\\n          }\\n          else {\\n            byte index = *PTR_DAT_08004020;\\n            *PTR_DAT_08004020 = index + 1;\\n            PTR_DAT_08004024[index] = current_byte - 0x20;\\n          }\\n        }\\n      }\\n      else if(current_byte == 0x29) {\\n        *PTR_DAT_08004028 = 0;\\n      }\\n    }\\n    display_alarm_if_needed();\\n    if(*PTR_DAT_0800401c != '\\0') {\\n      break;\\n    }\\n    if(*PTR_DAT_08004020 == '\\0') {\\n      send_error_message(0);\\n    }\\n    else {\\n      byte *PTR_DAT_08004020 = *PTR_DAT_08004020;\\n      PTR_DAT_08004024[*PTR_DAT_08004020] = 0;\\n      error_code = FUNC(PTR_DAT_08004024);\\n      send_error_message(error_code);\\n    }\\n    resetData_08003980();\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08008286", 
            "FUN_08003a74", 
            "FUN_08003980", 
            "FUN_08003b98", 
            "FUN_08004030"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08003f34", 
        "calling": [
            "FUN_08001ddc"
        ], 
        "imported": true, 
        "current_name": "process_input_and_send_error_message_08003f34"
    }, 
    "FUN_080095b8": {
        "renaming": {
            "uVar1": "carry", 
            "iVar4": "sign", 
            "param_1": "param1", 
            "param_2": "param2", 
            "uVar3": "mantissa", 
            "uVar2": "shift_amount", 
            "uVar5": "exponent", 
            "uVar4": "result", 
            "FUN_080095b8": "calculateValue_080095b8"
        }, 
        "code": "int calculateValue_080095b8(uint param1, uint param2) {\\n  uint shift_amount = (param2 << 1) >> 0x15;\\n  uint exponent = shift_amount - 0x3ff;\\n  int sign = (int)param2 < 0 ? -1 : 1;\\n  uint mantissa = param2 & 0xfffff | 0x100000;\\n  if ((int)exponent < 0x14) {\\n    if ((int)exponent < 0) {\\n      if (exponent != 0xffffffff) {\\n        sign = 0;\\n      }\\n      return sign;\\n    }\\n    mantissa = mantissa + (0x80000 >> (exponent & 0xff)) >> (0x14 - exponent & 0xff);\\n  }\\n  else {\\n    if (0x1e < exponent) {\\n      int result = calculateValue_080095b8_08008ba0();\\n      return result;\\n    }\\n    if ((int)exponent < 0x34) {\\n      uint carry = 0x80000000 >> (shift_amount - 0x413 & 0xff);\\n      if (CARRY4(carry,param1) != false) {\\n        mantissa = mantissa + 1;\\n      }\\n      mantissa = mantissa << (shift_amount - 0x413 & 0xff);\\n      if (exponent != 0x14) {\\n        mantissa = mantissa | carry + param1 >> (0x34 - exponent & 0xff);\\n      }\\n    }\\n    else {\\n      mantissa = mantissa << (shift_amount - 0x413 & 0xff) | param1 << (shift_amount - 0x433 & 0xff);\\n    }\\n  }\\n  return mantissa * sign;\\n}", 
        "called": [
            "FUN_08008ba0"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080095b8", 
        "calling": [
            "FUN_08001994", 
            "FUN_08003004"
        ], 
        "imported": true, 
        "current_name": "calculateValue_080095b8"
    }, 
    "FUN_08006cf6": {
        "renaming": {
            "set_data_value_08006b00": "set_data_value", 
            "FUN_08006cf6": "set_data_value_at_index_08006cf6", 
            "get_data_value_08006998": "get_data_value", 
            "uVar1": "value", 
            "param_1": "index", 
            "param_2": "data_value", 
            "param_3": "bit_count", 
            "calculate_bits_08006ba0": "calculate_bits"
        }, 
        "code": "void set_data_value_at_index_08006cf6(char index, int data_value, int bit_count)\\n{\\n  int value = get_data_value_08006998();\\n  value = calculate_bits_08006ba0(value, data_value, bit_count);\\n  set_data_value_08006b00(value, (int)index);\\n  return;\\n}", 
        "called": [
            "FUN_08006998", 
            "FUN_08006ba0", 
            "FUN_08006b00"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006cf6", 
        "calling": [
            "FUN_08007a70"
        ], 
        "imported": true, 
        "current_name": "set_data_value_at_index_08006cf6"
    }, 
    "FUN_08002ef0": {
        "renaming": {
            "uVar1": "incrementedChar", 
            "FUN_08002ef0": "copyAndIncrementChar_08002ef0", 
            "*PTR_DAT_08002f1c": "*destChar", 
            "*PTR_DAT_08002f20": "*(PTR_DAT_08002f20)", 
            "incrementChar_08002870": "incrementChar", 
            "*PTR_DAT_08002f18": "*sourceChar"
        }, 
        "code": "void copyAndIncrementChar_08002ef0(void)\\n{\\n  char* sourceChar = PTR_DAT_08002f18;\\n  char* destChar = PTR_DAT_08002f1c;\\n  char incrementedChar = incrementChar_08002870(*PTR_DAT_08002f18);\\n  *PTR_DAT_08002f1c = *PTR_DAT_08002f18;\\n  *PTR_DAT_08002f20 = incrementedChar;\\n}", 
        "called": [
            "FUN_08002870"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002ef0", 
        "calling": [
            "FUN_08002f24"
        ], 
        "imported": true, 
        "current_name": "copyAndIncrementChar_08002ef0"
    }, 
    "FUN_08001d4c": {
        "renaming": {
            "clear_globals_and_check_status_080057e4": "clear_globals_and_check_status", 
            "FUN_08001d4c": "update_device_flags_and_check_status_08001d4c", 
            "local_9": "flag", 
            "PTR_DAT_08001dd8": "PTR_DAT", 
            "doNothing_08002814": "do_nothing", 
            "FUNC_08001994": "skip_instruction", 
            "cVar1": "counter", 
            "updateDeviceFlags_08005790": "update_device_flags"
        }, 
        "code": "void update_device_flags_and_check_status_08001d4c(void)\\n{\\n  char counter;\\n  char flag;\\n  \\n  update_device_flags();\\n  skip_instruction(4,1,0,*(undefined4 *)(PTR_DAT_08001dd8_08001dd8 + 0x30));\\n  skip_instruction(3,1,0,*(undefined4 *)(PTR_DAT_08001dd8_08001dd8 + 0x30));\\n  doNothing_08002814(*(undefined2 *)(PTR_DAT_08001dd8_08001dd8 + 0x34));\\n  flag = '\\x02';\\n  while( flag != '\\0' ) {\\n    counter = flag - 1;\\n    skip_instruction(7,0,1,*(undefined4 *)(PTR_DAT_08001dd8_08001dd8 + 0x2c));\\n    doNothing_08002814(*(undefined2 *)(PTR_DAT_08001dd8_08001dd8 + 0x34));\\n    flag = counter;\\n    if (counter > '\\0') {\\n      skip_instruction(7,1,0,*(undefined4 *)(PTR_DAT_08001dd8_08001dd8 + 0x2c));\\n      doNothing_08002814(*(undefined2 *)(PTR_DAT_08001dd8_08001dd8 + 0x34));\\n    }\\n  }\\n  clear_globals_and_check_status();\\n  return;\\n}", 
        "called": [
            "FUN_08005790", 
            "FUN_08001994", 
            "FUN_080057e4", 
            "FUN_08002814"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08001d4c", 
        "calling": [
            "FUN_080024c4"
        ], 
        "imported": true, 
        "current_name": "update_device_flags_and_check_status_08001d4c"
    }, 
    "FUN_08000268": {
        "renaming": {
            "(uint)((ulonglong)DAT_0800029c * (ulonglong)(*(uint *)(DAT_08000298 + 8) >> 3) >> 0x21)": "result", 
            "iVar1": "baseValue", 
            "DAT_0800029c": "data1", 
            "DAT_08000298": "data2", 
            "*(uint *)(DAT_08000298 + 8) >> 3": "factor", 
            "FUN_08000268": "calculateValueToAddToBaseValue_08000268", 
            "getValueFromPointer_08005a84": "getValueFromPointer", 
            "valueToAdd": "valueToAdd"
        }, 
        "code": "int calculateValueToAddToBaseValue_08000268(void)\\n{\\n  int baseValue = getValueFromPointer_08005a84();\\n  int valueToAdd = (baseValue + 1) * 1000;\\n  int *(uint *)(DAT_08000298 + 8) >> 3 = *(uint *)(DAT_08000298 + 8) >> 3;\\n  int (uint)((ulonglong)DAT_0800029c * (ulonglong)(*(uint *)(DAT_08000298 + 8) >> 3) >> 0x21) = (uint)((ulonglong)DAT_0800029c * (ulonglong)*(uint *)(DAT_08000298 + 8) >> 3 >> 0x21);\\n  return valueToAdd - (uint)((ulonglong)DAT_0800029c * (ulonglong)(*(uint *)(DAT_08000298 + 8) >> 3) >> 0x21);\\n}", 
        "called": [
            "FUN_08005a84"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08000268", 
        "calling": [
            "FUN_080002b6"
        ], 
        "imported": true, 
        "current_name": "calculateValueToAddToBaseValue_08000268"
    }, 
    "FUN_08003778": {
        "renaming": {
            "param_1": "number", 
            "local_1c": "quotient", 
            "local_9": "digit_count", 
            "FUN_08003778": "print_uint_as_string_08003778", 
            "acStack_15": "digit_array", 
            "DAT_080037f8": "magic_number"
        }, 
        "code": "void print_uint_as_string_08003778(uint number)\\n{\\n  uint quotient;\\n  uint remainder;\\n  char digit_array[12];\\n  byte digit_count = 0;\\n  remainder = number;\\n  if (number == 0) {\\n    send_byte_to_device_08008250(0x30);\\n  }\\n  else {\\n    while (remainder != 0) {\\n      quotient = remainder / 10;\\n      remainder = remainder % 10;\\n      digit_array[digit_count] = remainder + '0';\\n      digit_count++;\\n      remainder = quotient;\\n    }\\n    while (digit_count != 0) {\\n      digit_count--;\\n      send_byte_to_device_08008250(digit_array[digit_count]);\\n    }\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08008250"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08003778", 
        "calling": [
            "FUN_080037fc"
        ], 
        "imported": true, 
        "current_name": "print_uint_as_string_08003778"
    }, 
    "FUN_0800b3dc": {
        "renaming": {
            "FUN_0800b3dc": "getValueFromPtrPtr_0800b3dc", 
            "PTR_PTR_DAT_0800b3e4": "ptrPtr"
        }, 
        "code": "undefined4 getValueFromPtrPtr_0800b3dc()\\n{\\n  uint** PTR_PTR_DAT_0800b3e4 = PTR_PTR_DAT_0800b3e4;\\n  undefined4 value = **PTR_PTR_DAT_0800b3e4;\\n  return value;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800b3dc", 
        "calling": [
            "FUN_0800981c", 
            "FUN_080098d0"
        ], 
        "imported": true, 
        "current_name": "getValueFromPtrPtr_0800b3dc"
    }, 
    "FUN_080046d0": {
        "renaming": {
            "PTR_DAT_080048d8": "device_status_string_3", 
            "PTR_DAT_080048b8": "device_info_string_5", 
            "PTR_DAT_08004890": "device_info_ptr", 
            "DAT_0800488c": "float_value_2", 
            "PTR_DAT_080048d0": "device_status_string_1", 
            "PTR_DAT_080048b0": "device_info_string_3", 
            "PTR_DAT_080048f4": "device_info_string_11", 
            "PTR_DAT_080048d4": "device_status_string_2", 
            "PTR_DAT_080048b4": "device_info_string_4", 
            "PTR_DAT_080048f8": "device_info_string_12", 
            "PTR_DAT_080048f0": "device_byte_string_3", 
            "PTR_DAT_080048fc": "device_info_string_13", 
            "PTR_DAT_080048dc": "device_char_string_1", 
            "PTR_DAT_080048bc": "device_info_string_6", 
            "PTR_DAT_080048e8": "device_byte_string_1", 
            "PTR_DAT_080048c8": "device_info_string_9", 
            "PTR_DAT_080048a8": "device_info_string_1", 
            "PTR_DAT_080048e0": "device_char_string_2", 
            "PTR_DAT_080048c0": "device_info_string_7", 
            "PTR_DAT_080048e4": "device_char_string_3", 
            "PTR_DAT_080048c4": "device_info_string_8", 
            "DAT_08004888": "float_value_1", 
            "FUN_080046d0": "print_device_info_080046d0", 
            "PTR_DAT_080048ec": "device_byte_string_2", 
            "PTR_DAT_080048cc": "device_info_string_10", 
            "PTR_DAT_080048ac": "device_info_string_2"
        }, 
        "code": "void print_device_info_080046d0(void)\\n{\\n  byte device_info_byte = PTR_DAT_08004890[1];\\n  if (device_info_byte > 4)\\n  {\\n    send_string_to_device_080036c6(PTR_DAT_080048a8);\\n    print_abs_value_080037fc(PTR_DAT_08004890[0x1c] + 0x36);\\n    if (PTR_DAT_08004890[0x19] == '\\0')\\n    {\\n      if (PTR_DAT_08004890[0x1a] == '\\x01')\\n      {\\n        send_string_to_device_080036c6(PTR_DAT_080048ac);\\n      }\\n      else\\n      {\\n        send_string_to_device_080036c6(PTR_DAT_080048b0);\\n      }\\n    }\\n    else\\n    {\\n      send_string_to_device_080036c6(PTR_DAT_080048b4);\\n    }\\n    if (PTR_DAT_08004890[3] == '\\0')\\n    {\\n      send_string_to_device_080036c6(PTR_DAT_080048bc);\\n    }\\n    else\\n    {\\n      send_string_to_device_080036c6(PTR_DAT_080048b8);\\n    }\\n    if (PTR_DAT_08004890[4] == '\\0')\\n    {\\n      send_string_to_device_080036c6(PTR_DAT_080048c4);\\n    }\\n    else\\n    {\\n      send_string_to_device_080036c6(PTR_DAT_080048c0);\\n    }\\n    if (PTR_DAT_08004890[2] == '\\0')\\n    {\\n      send_string_to_device_080036c6(PTR_DAT_080048cc);\\n    }\\n    else\\n    {\\n      send_string_to_device_080036c6(PTR_DAT_080048c8);\\n    }\\n    byte device_status_byte = PTR_DAT_08004890[5];\\n    if (device_status_byte == 2)\\n    {\\n      send_string_to_device_080036c6(PTR_DAT_080048d8);\\n    }\\n    else if (device_status_byte < 3)\\n    {\\n      if (device_status_byte == 0)\\n      {\\n        send_string_to_device_080036c6(PTR_DAT_080048d0);\\n      }\\n      else if (device_status_byte == 1)\\n      {\\n        send_string_to_device_080036c6(PTR_DAT_080048d4);\\n      }\\n    }\\n    char device_char = PTR_DAT_08004890[6];\\n    if (device_char == '\\x01')\\n    {\\n      send_string_to_device_080036c6(PTR_DAT_080048dc);\\n    }\\n    else if (device_char < '\\x02')\\n    {\\n      if (device_char == -1)\\n      {\\n        send_string_to_device_080036c6(PTR_DAT_080048e0);\\n      }\\n      else if (device_char == '\\0')\\n      {\\n        send_string_to_device_080036c6(PTR_DAT_080048e4);\\n      }\\n    }\\n    byte device_byte = PTR_DAT_08004890[7];\\n    if (device_byte == 2)\\n    {\\n      send_string_to_device_080036c6(PTR_DAT_080048f0);\\n    }\\n    else if (device_byte < 3)\\n    {\\n      if (device_byte == 0)\\n      {\\n        send_string_to_device_080036c6(PTR_DAT_080048e8);\\n      }\\n      else if (device_byte == 1)\\n      {\\n        send_string_to_device_080036c6(PTR_DAT_080048ec);\\n      }\\n    }\\n    send_string_to_device_080036c6(PTR_DAT_080048f4);\\n    print_abs_value_080037fc(PTR_DAT_08004890[0x18]);\\n    send_string_to_device_080036c6(PTR_DAT_080048f8);\\n    if (PTR_DAT_08004890[3] == '\\0')\\n    {\\n      print_float_08003826(*(undefined4 *)(PTR_DAT_08004890 + 8));\\n    }\\n    else\\n    {\\n      undefined8 uVar1 = FUNC_08008590(*(undefined4 *)(PTR_DAT_08004890 + 8));\\n      uVar1 = FUNC_08008640((int)uVar1,(int)((ulonglong)uVar1 >> 0x20),DAT_08004888,DAT_0800488c);\\n      undefined4 calculated_float = calculateFloat_08008c30((int)uVar1,(int)((ulonglong)uVar1 >> 0x20));\\n      print_float_08003826(calculated_float);\\n    }\\n    send_string_to_device_080036c6(PTR_DAT_080048fc);\\n    return;\\n  }\\n  else\\n  {\\n    (*(code *)(&switchD_080046de::switchdataD_080046e4)[device_info_byte])();\\n    return;\\n  }\\n}", 
        "called": [
            "FUN_080036c6", 
            "FUN_08008640", 
            "FUN_08008c30", 
            "FUN_08008590", 
            "FUN_080037fc", 
            "FUN_08003826"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080046d0", 
        "calling": [
            "FUN_08003b98"
        ], 
        "imported": true, 
        "current_name": "print_device_info_080046d0"
    }, 
    "FUN_08006d72": {
        "renaming": {
            "uVar1": "result", 
            "check_param_is_valid_08006c9c": "check_if_valid", 
            "param_1": "parameter", 
            "FUN_08006d72": "validate_parameter_08006d72"
        }, 
        "code": "undefined4 validate_parameter_08006d72(undefined4 parameter)\\n{\\n  undefined4 result;\\n  result = check_if_valid(parameter);\\n  return result;\\n}", 
        "called": [
            "FUN_08006c9c"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006d72", 
        "calling": [
            "FUN_080059b4"
        ], 
        "imported": true, 
        "current_name": "validate_parameter_08006d72"
    }, 
    "FUN_0800756c": {
        "renaming": {
            "DAT_080075c0": "value1", 
            "DAT_080075c4": "value2", 
            "DAT_080075bc": "data", 
            "FUN_0800756c": "initializeData_0800756c"
        }, 
        "code": "void initializeData_0800756c()\\n{\\n  uint* DAT_080075bc = DAT_080075bc;\\n  *DAT_080075bc = *DAT_080075bc | 1;\\n  DAT_080075bc[2] = 0;\\n  *DAT_080075bc = *DAT_080075bc & 0xfef6ffff;\\n  DAT_080075bc[1] = DAT_080075c0;\\n  *DAT_080075bc = *DAT_080075bc & 0xfffbffff;\\n  DAT_080075bc[3] = 0;\\n  uint* ptr = (uint*)(DAT_080075c4 + 8);\\n  *ptr = 0x8000000;\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800756c", 
        "calling": [
            "FUN_080092c4"
        ], 
        "imported": true, 
        "current_name": "initializeData_0800756c"
    }, 
    "FUN_080001f8": {
        "renaming": {
            "PTR_DAT_0800020c": "data_pointer", 
            "perform_tasks_08000210": "perform_tasks", 
            "FUN_080001f8": "reset_data_080001f8"
        }, 
        "code": "void reset_data_080001f8(void)\\n{\\n  *PTR_DAT_0800020c = 0;\\n  perform_tasks();\\n  return;\\n}", 
        "called": [
            "FUN_08000210"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080001f8", 
        "calling": [
            "FUN_08001ddc"
        ], 
        "imported": true, 
        "current_name": "reset_data_080001f8"
    }, 
    "FUN_08002f74": {
        "renaming": {
            "PTR_DAT_08002fa4": "ptr2", 
            "PTR_DAT_08002fa8": "ptr3", 
            "FUN_08002f74": "getPointer_08002f74", 
            "PTR_DAT_08002fa0": "ptr1"
        }, 
        "code": "undefined* getPointer_08002f74()\\n{\\n  uint* PTR_DAT_08002fa0 = PTR_DAT_08002fa0;\\n  uint* PTR_DAT_08002fa4 = PTR_DAT_08002fa4;\\n  undefined* result = (undefined*)0x0;\\n  if (*PTR_DAT_08002fa0 == *PTR_DAT_08002fa4) {\\n    result = (undefined*)0x0;\\n  }\\n  else {\\n    uint* PTR_DAT_08002fa8 = PTR_DAT_08002fa8;\\n    byte index = (byte)*PTR_DAT_08002fa4;\\n    result = (undefined*)(PTR_DAT_08002fa8 + (uint)index * 0x40);\\n  }\\n  return result;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002f74", 
        "calling": [
            "FUN_080053a0", 
            "FUN_08002fd4"
        ], 
        "imported": true, 
        "current_name": "getPointer_08002f74"
    }, 
    "FUN_0800b3e8": {
        "renaming": {
            "iVar1": "i", 
            "iVar3": "num_functions", 
            "do_nothing_0800b5b0": "do_nothing", 
            "PTR_DAT_0800b42c": "PTR_CALLBACK_START", 
            "PTR_DAT_0800b428": "PTR_CALLBACK_END", 
            "PTR_DAT_0800b424": "PTR_FUNCTION_START", 
            "ppcVar2": "function_pointer", 
            "FUN_0800b3e8": "execute_functions_0800b3e8", 
            "PTR_DAT_0800b420": "PTR_FUNCTION_END"
        }, 
        "code": "void execute_functions_0800b3e8(void)\\n{\\n  int num_functions = (int)PTR_DAT_0800b420 - (int)PTR_DAT_0800b424 >> 2;\\n  if (num_functions != 0) {\\n    int i = 0;\\n    code **function_pointer = (code **)PTR_DAT_0800b424;\\n    do {\\n      i++;\\n      (**function_pointer)();\\n      function_pointer++;\\n    } while (num_functions != i);\\n  }\\n  function_pointer = (code **)PTR_DAT_0800b42c;\\n  int num_callbacks = (int)PTR_DAT_0800b428 - (int)PTR_DAT_0800b42c;\\n  do_nothing();\\n  num_callbacks = num_callbacks >> 2;\\n  if (num_callbacks != 0) {\\n    int i = 0;\\n    do {\\n      i++;\\n      (**function_pointer)();\\n      function_pointer++;\\n    } while (num_callbacks != i);\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_0800b4d0", 
            "FUN_080001ac", 
            "FUN_0800b5b0"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800b3e8", 
        "calling": [
            "FUN_080092c4"
        ], 
        "imported": true, 
        "current_name": "execute_functions_0800b3e8"
    }, 
    "FUN_080096e8": {
        "renaming": {
            "uVar1": "result", 
            "uStack_24": "uStack_24", 
            "param_1": "input1", 
            "local_28": "local_var1", 
            "FUNC_080082d0": "skipped_function1", 
            "FUNC_0800a348": "skipped_function3", 
            "param_2": "input2", 
            "DAT_08009794": "DAT_08009794", 
            "FUNC_08009d78": "skipped_function2", 
            "uStack_1c": "uStack_1c", 
            "uVar2": "function2_result", 
            "local_20": "local_var2", 
            "DAT_08009790": "DAT_08009790", 
            "FUN_080096e8": "calculate_result_080096e8"
        }, 
        "code": "int calculate_result_080096e8(int input1, unsigned int input2)\\n{\\n  int result;\\n  unsigned int input2_abs = input2 & 0x7fffffff;\\n  if (DAT_08009790 < input2_abs)\\n  {\\n    if (DAT_08009794 < input2_abs)\\n    {\\n      result = FUNC_080082d0(input1, input2, input1, input2);\\n    }\\n    else\\n    {\\n      int function2_result = skipped_function2(input1, input2, &local_var1);\\n      switch (function2_result & 3)\\n      {\\n        case 1:\\n          result = skipped_function3(local_var1, uStack_24, local_var2, uStack_1c);\\n          break;\\n        case 2:\\n        case 0:\\n          result = calculate_result_080096e8(local_var1, uStack_24, local_var2, uStack_1c, 1);\\n          break;\\n        default:\\n          result = skipped_function3(local_var1, uStack_24, local_var2, uStack_1c);\\n      }\\n    }\\n  }\\n  else\\n  {\\n    result = calculate_result_080096e8(input1, input2, 0, 0, 0);\\n  }\\n  return result;\\n}", 
        "called": [
            "FUN_0800adf0", 
            "FUN_080082d0", 
            "FUN_0800a348", 
            "FUN_08009d78"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080096e8", 
        "calling": [
            "FUN_08001f00"
        ], 
        "imported": true, 
        "current_name": "calculate_result_080096e8"
    }, 
    "FUN_08006a18": {
        "renaming": {
            "DAT_08006a54": "data", 
            "param_1": "index", 
            "FUN_08006a18": "isBitSet_08006a18"
        }, 
        "code": "bool isBitSet_08006a18(byte index)\\n{\\n  uint* DAT_08006a54 = DAT_08006a54;\\n  uint arrayIndex = ((uint)(int)(char)index >> 5) + 0x40;\\n  uint* arrayEntry = DAT_08006a54 + arrayIndex * 4;\\n  uint bitMask = 1 << (index & 0x1f);\\n  bool isSet = (*arrayEntry & bitMask) != 0;\\n  return isSet;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006a18", 
        "calling": [
            "FUN_08006de0"
        ], 
        "imported": true, 
        "current_name": "isBitSet_08006a18"
    }, 
    "FUN_08002c18": {
        "renaming": {
            "FUN_08002c18": "calculateValues_08002c18", 
            "iVar2": "value4", 
            "uVar1": "twosComplement1", 
            "param_1": "value1", 
            "local_1c": "value14", 
            "param_2": "value2", 
            "param_3": "value3", 
            "uVar3": "twosComplement2", 
            "local_20": "value11", 
            "uVar5": "value5", 
            "uVar4": "result3", 
            "uVar7": "value7", 
            "uVar6": "value6"
        }, 
        "code": "void calculateValues_08002c18(int value1, int value2, int value3){\\n  int twosComplement1 = calculateTwosComplement(value3);\\n  int result1 = skip1(twosComplement1, value1);\\n  long long result2 = skip2(result1);\\n  int value4 = calculateValue(result2);\\n  int twosComplement2 = calculateTwosComplement(value3);\\n  int result3 = skip1(twosComplement2, value2);\\n  long long result4 = skip2(result3);\\n  int value5 = calculateValue(result4);\\n  long long value6 = skip3(*(int *)(value3 + 0x30) * 0x32);\\n  long long value7 = skip4(value6, 0, 0x08002e04);\\n  int value8 = calculateValue(value7);\\n  int twosComplement3 = calculateTwosComplement(*(int *)(value3 + 0x28));\\n  int twosComplement4 = calculateTwosComplement(value3);\\n  int twosComplement5 = calculateTwosComplement(calculateTwosComplement(value8));\\n  int result5 = calculateResult(twosComplement3, twosComplement4, twosComplement5);\\n  long long result6 = skip2(result5);\\n  int value9 = calculateValue(result6);\\n  int twosComplement6 = calculateTwosComplement(value3);\\n  int twosComplement7 = calculateTwosComplement(*(int *)(value3 + 0x2c));\\n  int twosComplement8 = calculateTwosComplement(-value8);\\n  int result7 = calculateResult(twosComplement6, twosComplement7, twosComplement8);\\n  long long result8 = skip2(result7);\\n  long long value10 = skip5(result8);\\n  int value11 = calculateValue(value10);\\n  int value12 = *(int *)(value3 + 0x10) - value9 - value11;\\n  if (value12 < 0) {\\n    int twosComplement9 = calculateTwosComplement(*(int *)(value3 + 0x28));\\n    int twosComplement10 = calculateTwosComplement(*(int *)(value3 + 0x3c));\\n    int twosComplement11 = calculateTwosComplement(value8);\\n    int twosComplement12 = calculateTwosComplement(*(int *)(value3 + 0x10));\\n    int result9 = calculateResult(twosComplement9, twosComplement10, twosComplement11, twosComplement12);\\n    long long result10 = skip2(result9);\\n    int value13 = calculateValue(result10);\\n    value13 = value13 & ~((int)value13 >> 0x1f);\\n    int value14 = *(int *)(value3 + 0x10);\\n    if ((int)value13 <= (int)*(uint *)(value3 + 0x10)) {\\n      value14 = value13;\\n    }\\n    value12 = 0;\\n  }\\n  *(uint *)(value3 + 0x34) = value14;\\n  *(uint *)(value3 + 0x38) = value12 + value14;\\n  return;\\n}", 
        "called": [
            "FUN_08008e3c", 
            "FUN_08008e44", 
            "FUN_08008ba0", 
            "FUN_08008640", 
            "FUN_0800856c", 
            "FUN_08009318", 
            "FUN_08002908", 
            "FUN_080028bc", 
            "FUN_080094c0", 
            "FUN_08008bf0", 
            "FUN_08008590", 
            "FUN_08008eec"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002c18", 
        "calling": [
            "FUN_08002e08"
        ], 
        "imported": true, 
        "current_name": "calculateValues_08002c18"
    }, 
    "FUN_08006ac0": {
        "renaming": {
            "FUN_08006ac0": "isBitSet_08006ac0", 
            "DAT_08006afc": "data", 
            "param_1": "index"
        }, 
        "code": "bool isBitSet_08006ac0(byte index)\\n{\\n  uint* DAT_08006afc = DAT_08006afc;\\n  uint arrayIndex = ((uint)(int)(char)index >> 5) + 0x80;\\n  uint* arrayEntry = DAT_08006afc + arrayIndex * 4;\\n  uint bitMask = 1 << (index & 0x1f);\\n  bool isSet = (*arrayEntry & bitMask) != 0;\\n  return isSet;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006ac0", 
        "calling": [
            "FUN_08006e1a"
        ], 
        "imported": true, 
        "current_name": "isBitSet_08006ac0"
    }, 
    "FUN_080001ec": {
        "renaming": {
            "FUN_080001ec": "doNothing_080001ec"
        }, 
        "code": "void doNothing_080001ec()\\n{\\n  // This function does nothing.\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080001ec", 
        "calling": [
            "FUN_08000210"
        ], 
        "imported": true, 
        "current_name": "doNothing_080001ec"
    }, 
    "FUN_08005a50": {
        "renaming": {
            "FUN_08005a50": "doNothing_08005a50"
        }, 
        "code": "void doNothing_08005a50()\\n{\\n  // This function does nothing.\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005a50", 
        "calling": [
            "FUN_080059b4"
        ], 
        "imported": true, 
        "current_name": "doNothing_08005a50"
    }, 
    "FUN_08002ba8": {
        "renaming": {
            "puVar2": "previous_input", 
            "puVar3": "last_input_ptr", 
            "PTR_DAT_08002c10": "input_array_ptr", 
            "FUN_08002ba8": "process_inputs_08002ba8", 
            "PTR_DAT_08002c14": "end_char_ptr", 
            "local_9": "current_char", 
            "puVar1": "next_input_ptr", 
            "local_10": "next_input", 
            "local_14": "last_input", 
            "PTR_DAT_08002c0c": "current_char_ptr"
        }, 
        "code": "void process_inputs_08002ba8() {\\n  undefined *current_input;\\n  undefined *previous_input;\\n  undefined *next_input;\\n  undefined *last_input = (undefined *)0x0;\\n  byte current_char = *PTR_DAT_08002c0c;\\n  next_input = (undefined *)0x0;\\n  while (current_char != *PTR_DAT_08002c14) {\\n    previous_input = last_input;\\n    current_input = next_input;\\n    next_input = PTR_DAT_08002c10 + (uint)current_char * 0x40;\\n    process_input(current_input, next_input, previous_input);\\n    current_char = incrementChar(current_char);\\n    last_input = current_input;\\n  }\\n  process_input(last_input, next_input, 0, last_input, previous_input);\\n  return;\\n}", 
        "called": [
            "FUN_08002afc", 
            "FUN_08002870"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002ba8", 
        "calling": [
            "FUN_08002edc"
        ], 
        "imported": true, 
        "current_name": "process_inputs_08002ba8"
    }, 
    "FUN_0800919c": {
        "renaming": {
            "bVar1": "isNegative", 
            "param_1": "num1", 
            "FUN_0800919c": "calculateResult_0800919c", 
            "param_2": "num2", 
            "uVar3": "doubleNum2", 
            "uVar2": "doubleNum1", 
            "uVar4": "combinedNum", 
            "bVar5": "isCombinedZero"
        }, 
        "code": "uint calculateResult_0800919c(uint num1, uint num2)\\n{\\n  bool isOverflow = false;\\n  uint doubleNum1 = num1 * 2;\\n  uint doubleNum2 = num2 * 2;\\n  if (((int)doubleNum1 >> 0x18 == -1 || (int)doubleNum2 >> 0x18 == -1) && ((((int)doubleNum1 >> 0x18 == -1 && ((num1 & 0x7fffff) != 0)) || (((int)doubleNum2 >> 0x18 == -1 && ((num2 & 0x7fffff) != 0)))))) {\\n    return 1;\\n  }\\n  uint combinedNum = doubleNum1 | num2 & 0x7fffffff;\\n  bool isCombinedZero = combinedNum == 0;\\n  if (!isCombinedZero) {\\n    uint xorResult = num1 ^ num2;\\n    isCombinedZero = xorResult == 0;\\n  }\\n  bool isNegative = -1 < (int)(num1 ^ num2);\\n  if (isNegative) {\\n    num1 = doubleNum1 + num2 * -2;\\n    isCombinedZero = num1 == 0;\\n  }\\n  if (isNegative && doubleNum2 <= doubleNum1 && !isCombinedZero) {\\n    num1 = (int)num2 >> 0x1f;\\n  }\\n  if (!isNegative || doubleNum2 > doubleNum1) {\\n    num1 = ~((int)num2 >> 0x1f);\\n  }\\n  if (!isCombinedZero) {\\n    num1 = num1 | 1;\\n  }\\n  return num1;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800919c", 
        "calling": [
            "FUN_08009204"
        ], 
        "imported": true, 
        "current_name": "calculateResult_0800919c"
    }, 
    "FUN_0800b2cc": {
        "renaming": {
            "FUN_0800b2cc": "doNothing_0800b2cc"
        }, 
        "code": "void doNothing_0800b2cc()\\n{\\n  // This function does nothing.\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800b2cc", 
        "calling": [
            "FUN_0800af78", 
            "FUN_08009990", 
            "FUN_08009d78"
        ], 
        "imported": true, 
        "current_name": "doNothing_0800b2cc"
    }, 
    "FUN_0800854c": {
        "renaming": {
            "uVar1": "highBits", 
            "param_1": "num", 
            "FUN_0800854c": "calculateResult_0800854c", 
            "uVar3": "lowBits", 
            "uVar2": "shiftAmount", 
            "uVar4": "in_r12", 
            "bVar6": "isZero", 
            "bVar5": "isNegative", 
            "bVar7": "isOverflow"
        }, 
        "code": "ulonglong calculateResult_0800854c(uint num)\\n{\\n  if (num == 0) {\\n    return 0;\\n  }\\n  uint shiftAmount = count_leading_zeroes(num) + 0x15;\\n  uint highBits = 0;\\n  uint lowBits = 0;\\n  if ((int)shiftAmount < 0x20) {\\n    shiftAmount = shiftAmount - 0xb;\\n    if ((int)shiftAmount >= 0) {\\n      highBits = num << (shiftAmount & 0xff);\\n      lowBits = num >> (0xcU - shiftAmount & 0xff);\\n    }\\n  }\\n  else {\\n    uint shiftAmount2 = 0x20 - shiftAmount;\\n    highBits = num << (shiftAmount & 0xff) | 0U >> (shiftAmount2 & 0xff);\\n    if (shiftAmount2 > 0x1e) {\\n      return (ulonglong)(num >> (shiftAmount2 - 0x1f & 0xff));\\n    }\\n    int shiftAmount3 = shiftAmount2 - 0x13;\\n    if (shiftAmount3 == 0 || shiftAmount3 < 0 != SCARRY4(shiftAmount2 - 0x1f, 0xc)) {\\n      shiftAmount2 = shiftAmount2 + 1;\\n      lowBits = num >> (shiftAmount2 & 0xff) | highBits << (0x20 - shiftAmount2 & 0xff);\\n      highBits = highBits >> (shiftAmount2 & 0xff);\\n    }\\n    else {\\n      lowBits = highBits >> (0x20 - (0xcU - shiftAmount3) & 0xff) | num << (0xcU - shiftAmount3 & 0xff);\\n      highBits = num >> (0x20 - shiftAmount3 & 0xff);\\n    }\\n  }\\n  return CONCAT44(highBits + (0x432 - shiftAmount) * 0x100000, lowBits);\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800854c", 
        "calling": [
            "FUN_08001994"
        ], 
        "imported": true, 
        "current_name": "calculateResult_0800854c"
    }, 
    "FUN_08008e44": {
        "renaming": {
            "iVar1": "leadingZeros", 
            "iVar4": "carry", 
            "param_1": "num", 
            "highBits": "highBits", 
            "lowBits": "lowBits", 
            "FUN_08008e44": "calculateTwosComplement_08008e44", 
            "uVar3": "signBit", 
            "uVar2": "shiftAmount", 
            "uVar5": "result", 
            "uVar4": "constant"
        }, 
        "code": "uint calculateTwosComplement_08008e44(uint num)\\n{\\n  uint signBit = num & 0x80000000;\\n  if ((int)signBit < 0) {\\n    num = -num;\\n  }\\n  if (num == 0) {\\n    return 0;\\n  }\\n  int leadingZeros = count_leading_zeroes(num);\\n  uint shiftAmount = leadingZeros - 8;\\n  int constant = ((signBit | 0x4b000000) - 0x800000) + shiftAmount * -0x800000;\\n  if (leadingZeros > 7) {\\n    uint highBits = 0 << (shiftAmount & 0xff);\\n    uint lowBits = param_1 << (shiftAmount & 0xff);\\n    uint carry = 0U >> (0x20 - shiftAmount & 0xff);\\n    uint result = constant + highBits + lowBits + (uint)(0x7fffffff < carry);\\n    if (highBits == 0x80000000) {\\n      result = result & 0xfffffffe;\\n    }\\n    return result;\\n  }\\n  uint highBits = num << (leadingZeros + 0x18U & 0xff);\\n  uint lowBits = (num >> (0x20 - (leadingZeros + 0x18U) & 0xff)) - ((int)highBits >> 0x1f);\\n  if ((highBits & 0x7fffffff) == 0) {\\n    lowBits = lowBits & ~(highBits >> 0x1f);\\n  }\\n  return constant + lowBits;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08008e44", 
        "calling": [
            "FUN_08003004", 
            "FUN_08002408", 
            "FUN_08004940", 
            "FUN_080024c4", 
            "FUN_08003618", 
            "FUN_08002c18", 
            "FUN_080004fc", 
            "FUN_08001f00"
        ], 
        "imported": true, 
        "current_name": "calculateTwosComplement_08008e44"
    }, 
    "FUN_0800733e": {
        "renaming": {
            "param_1": "paramIndex", 
            "FUN_0800733e": "setParameter_0800733e", 
            "param_2": "value", 
            "param_3": "isSecondParam"
        }, 
        "code": "void setParameter_0800733e(int paramIndex, undefined2 value, char isSecondParam)\\n{\\n  if (isSecondParam == '\\0') {\\n    *(undefined2 *)(paramIndex + 0x1a) = value;\\n  }\\n  else {\\n    *(undefined2 *)(paramIndex + 0x18) = value;\\n  }\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800733e", 
        "calling": [
            "FUN_0800778c"
        ], 
        "imported": true, 
        "current_name": "setParameter_0800733e"
    }, 
    "FUN_0800583c": {
        "renaming": {
            "clear_globals_and_check_status_080057e4": "clear_global_variables_and_check_status", 
            "FUN_0800583c": "update_device_and_clear_globals_0800583c", 
            "update_param_080052ac": "update_device_params", 
            "updateDeviceFlags_08005790": "update_device_flags", 
            "PTR_DAT_08005858": "device_params_pointer"
        }, 
        "code": "void update_device_and_clear_globals_0800583c(void)\\n{\\n  uint16_t device_flags = *(uint16_t *)(PTR_DAT_08005858 + 0x18);\\n  update_device_params(device_flags);\\n  update_device_flags();\\n  clear_global_variables_and_check_status();\\n  return;\\n}", 
        "called": [
            "FUN_08005790", 
            "FUN_080057e4", 
            "FUN_080052ac"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800583c", 
        "calling": [
            "FUN_08001ddc"
        ], 
        "imported": true, 
        "current_name": "update_device_and_clear_globals_0800583c"
    }, 
    "FUN_08001e98": {
        "renaming": {
            "arePointersEqual": "arePointersEqual", 
            "param_1": "param_1", 
            "deviceStatus": "deviceStatus", 
            "param_2": "param_2", 
            "param_3": "param_3", 
            "param_4": "param_4", 
            "param_5": "param_5", 
            "FUN_08001e98": "checkDeviceStatusAndUpdateIfNecessary_08001e98"
        }, 
        "code": "void checkDeviceStatusAndUpdateIfNecessary_08001e98(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,undefined param_5)\\n{\\n  int arePointersEqual;\\n  if (deviceStatus[1] != '\\a') {\\n    do {\\n      displayAlarmIfDeviceIsNotOkay();\\n      if (*deviceStatus != '\\0') {\\n        return;\\n      }\\n      arePointersEqual = arePointersEqual_08002fac();\\n    } while (arePointersEqual != 0);\\n    FUNC_08003004(param_1,param_2,param_3,param_4,param_5);\\n    if (deviceStatus[1] == '\\0') {\\n      deviceStatus[1] = 2;\\n    }\\n    if (deviceStatus[0x10] != '\\0') {\\n      updateDeviceFlagsIfFlagTwoIsSet_0800585c();\\n    }\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08003004", 
            "FUN_08002fac", 
            "FUN_08003a74", 
            "FUN_0800585c"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08001e98", 
        "calling": [
            "FUN_080005b4", 
            "FUN_080024c4", 
            "FUN_08001f00"
        ], 
        "imported": true, 
        "current_name": "checkDeviceStatusAndUpdateIfNecessary_08001e98"
    }, 
    "FUN_080069e4": {
        "renaming": {
            "param_1": "bitIndex", 
            "FUN_080069e4": "setBitInArray_080069e4"
        }, 
        "code": "void setBitInArray_080069e4(byte bitIndex)\\n{\\n  int* targetAddress = DAT_08006a14 + (((uint)(int)(char)bitIndex >> 5) + 0x20) * 4;\\n  int bitMask = 1 << (bitIndex & 0x1f);\\n  *targetAddress = bitMask;\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080069e4", 
        "calling": [
            "FUN_08006d4a"
        ], 
        "imported": true, 
        "current_name": "setBitInArray_080069e4"
    }, 
    "FUN_0800b2d4": {
        "renaming": {
            "param_1": "num", 
            "param_2": "unused", 
            "FUN_0800b2d4": "getSignBit_0800b2d4"
        }, 
        "code": "uint getSignBit_0800b2d4(uint num)\\n{\\n  uint signBit = num | 0x80000000;\\n  uint shifted = signBit + 0x100000;\\n  uint result = shifted >> 0x1f;\\n  return result;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800b2d4", 
        "calling": [
            "FUN_0800981c"
        ], 
        "imported": true, 
        "current_name": "getSignBit_0800b2d4"
    }, 
    "FUN_08008e3c": {
        "renaming": {
            "FUN_08008e3c": "calculateTwosComplement_08008e3c", 
            "iVar1": "leadingZeros", 
            "iVar3": "constant", 
            "param_1": "num", 
            "uVar2": "shiftAmount", 
            "uVar4": "result"
        }, 
        "code": "uint calculateTwosComplement_08008e3c(uint num)\\n{\\n  if (num == 0) {\\n    return 0;\\n  }\\n  int leadingZeros = count_leading_zeroes(num);\\n  uint shiftAmount = leadingZeros - 8;\\n  int constant = shiftAmount * -0x800000 + 0x4a800000;\\n  if (leadingZeros > 7) {\\n    uint highBits = 0 << (shiftAmount & 0xff);\\n    uint lowBits = num << (shiftAmount & 0xff);\\n    uint carry = 0U >> (0x20 - shiftAmount & 0xff);\\n    uint result = constant + highBits + lowBits + (uint)(0x7fffffff < carry);\\n    if (highBits == 0x80000000) {\\n      result = result & 0xfffffffe;\\n    }\\n    return result;\\n  }\\n  uint highBits = num << (leadingZeros + 0x18U & 0xff);\\n  uint lowBits = (num >> (0x20 - (leadingZeros + 0x18U) & 0xff)) - ((int)highBits >> 0x1f);\\n  if ((highBits & 0x7fffffff) == 0) {\\n    lowBits = lowBits & ~(highBits >> 0x1f);\\n  }\\n  return constant + lowBits;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08008e3c", 
        "calling": [
            "FUN_08002638", 
            "FUN_08002c18"
        ], 
        "imported": true, 
        "current_name": "calculateTwosComplement_08008e3c"
    }, 
    "FUN_08009654": {
        "renaming": {
            "DAT_080096e4": "exponent_mask", 
            "FUN_08009654": "decode_float_08009654", 
            "lVar3": "result", 
            "uVar1": "exponent_diff", 
            "param_1": "float_bits", 
            "param_2": "exponent_bits", 
            "uVar2": "exponent_shifted"
        }, 
        "code": "longlong decode_float_08009654(uint float_bits, uint exponent_bits)\\n{\\n  uint exponent_shifted = (exponent_bits << 1) >> 0x15;\\n  uint exponent_diff = exponent_shifted - 0x3ff;\\n  longlong result = CONCAT44(exponent_bits, float_bits);\\n\\n  if ((int)exponent_diff < 0x14) {\\n    if ((int)exponent_diff < 0) {\\n      float_bits = float_bits & 0x80000000;\\n      if (exponent_diff == 0xffffffff) {\\n        float_bits = float_bits | 0x3ff00000;\\n      }\\n      result = (ulonglong)float_bits << 0x20;\\n    }\\n    else {\\n      uint DAT_080096e4 = DAT_080096e4 >> (exponent_diff & 0xff);\\n      result = CONCAT44(exponent_bits, float_bits);\\n      if ((float_bits & DAT_080096e4 | float_bits) != 0) {\\n        float_bits = float_bits + (0x80000 >> (exponent_diff & 0xff)) & ~DAT_080096e4;\\n        result = (ulonglong)float_bits << 0x20;\\n      }\\n    }\\n  }\\n  else if ((int)exponent_diff < 0x34) {\\n    uint DAT_080096e4 = 0xffffffff >> (exponent_shifted - 0x413 & 0xff);\\n    if ((float_bits & DAT_080096e4) != 0) {\\n      uint bit_to_add = 1 << (0x33 - exponent_diff & 0xff);\\n      if (CARRY4(float_bits, bit_to_add) != false) {\\n        exponent_bits = exponent_bits + 1;\\n      }\\n      result = CONCAT44(exponent_bits, float_bits + bit_to_add & ~DAT_080096e4);\\n    }\\n  }\\n  else {\\n    result = CONCAT44(exponent_bits, float_bits);\\n    if (exponent_diff == 0x400) {\\n      result = FUNC_080082d4();\\n    }\\n  }\\n  return result;\\n}", 
        "called": [
            "FUN_080082d4"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08009654", 
        "calling": [
            "FUN_08004e30"
        ], 
        "imported": true, 
        "current_name": "decode_float_08009654"
    }, 
    "FUN_08007bc2": {
        "renaming": {
            "FUN_08007bc2": "clearBitsInGlobals_08007bc2"
        }, 
        "code": "void clearBitsInGlobals_08007bc2()\\n{\\n  _DAT_40000000 &= 0xfffffffe;\\n  _DAT_4000000c &= 0xfffffff8;\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007bc2", 
        "calling": [
            "FUN_080057e4"
        ], 
        "imported": true, 
        "current_name": "clearBitsInGlobals_08007bc2"
    }, 
    "FUN_08009410": {
        "renaming": {
            "DAT_080094b4": "threshold_1", 
            "uVar1": "result", 
            "FUN_08009410": "calculate_result_08009410", 
            "uStack_24": "local_variable_2", 
            "param_1": "input_1", 
            "local_28": "local_variable_1", 
            "param_2": "input_2", 
            "uStack_1c": "local_variable_4", 
            "uVar2": "function_result", 
            "local_20": "local_variable_3", 
            "DAT_080094b8": "threshold_2"
        }, 
        "code": "int calculate_result_08009410(int input_1, unsigned int input_2)\\n{\\n  int result;\\n  unsigned int masked_input_2 = input_2 & 0x7fffffff;\\n  int DAT_080094b4 = DAT_080094b4;\\n  int DAT_080094b8 = DAT_080094b8;\\n  if (DAT_080094b4 >= (int)masked_input_2)\\n  {\\n    result = FUNC_0800a348(input_1, masked_input_2, 0, 0);\\n  }\\n  else if (DAT_080094b8 >= (int)masked_input_2)\\n  {\\n    unsigned int local_28;\\n    int uStack_24;\\n    int local_20;\\n    int uStack_1c;\\n    int function_result = FUNC_08009d78(input_1, masked_input_2, &local_28);\\n    int function_result_masked = function_result & 3;\\n    if (function_result_masked == 1)\\n    {\\n      result = calculateResult_0800adf0(local_28, uStack_24, local_20, uStack_1c, 1);\\n    }\\n    else if (function_result_masked == 2 || function_result_masked == 0)\\n    {\\n      result = FUNC_0800a348(local_28, uStack_24, local_20, uStack_1c);\\n    }\\n    else\\n    {\\n      result = calculateResult_0800adf0(local_28, uStack_24, local_20, uStack_1c, 1);\\n    }\\n  }\\n  else\\n  {\\n    result = FUNC_080082d0(input_1, masked_input_2, input_1, masked_input_2);\\n  }\\n  return result;\\n}", 
        "called": [
            "FUN_0800adf0", 
            "FUN_080082d0", 
            "FUN_0800a348", 
            "FUN_08009d78"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08009410", 
        "calling": [
            "FUN_08001f00"
        ], 
        "imported": true, 
        "current_name": "calculate_result_08009410"
    }, 
    "FUN_080035ec": {
        "renaming": {
            "FUN_080035ec": "setValuesInGlobalArray_080035ec", 
            "param_1": "value1", 
            "param_2": "value2", 
            "param_3": "value3"
        }, 
        "code": "void setValuesInGlobalArray_080035ec(undefined4 value1, undefined4 value2, undefined4 value3)\\n{\\n  *(undefined4 *)PTR_DAT_08003614 = value1;\\n  *(undefined4 *)(PTR_DAT_08003614 + 4) = value2;\\n  *(undefined4 *)(PTR_DAT_08003614 + 8) = value3;\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080035ec", 
        "calling": [
            "FUN_0800283a"
        ], 
        "imported": true, 
        "current_name": "setValuesInGlobalArray_080035ec"
    }, 
    "FUN_08006c70": {
        "renaming": {
            "DAT_08006c98": "newBits", 
            "DAT_08006c94": "targetAddress", 
            "FUN_08006c70": "waitForDataSync_08006c70", 
            "currentBits": "currentValue", 
            "newBits": "updatedValue"
        }, 
        "code": "void waitForDataSync_08006c70()\\n{\\n  DataSynchronizationBarrier(0xf);\\n  uint* DAT_08006c94 = DAT_08006c94 + 0xc;\\n  uint currentBits = *(uint *)(DAT_08006c94 + 0xc);\\n  uint DAT_08006c98 = DAT_08006c98 | (currentBits & 0x700);\\n  *DAT_08006c94 = DAT_08006c98;\\n  DataSynchronizationBarrier(0xf);\\n  while(true) {\\n    // Do nothing, wait for interrupt\\n  }\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006c70", 
        "calling": [
            "FUN_08006d66"
        ], 
        "imported": true, 
        "current_name": "waitForDataSync_08006c70"
    }, 
    "FUN_08006d98": {
        "renaming": {
            "uVar1": "nibble", 
            "param_1": "input_char", 
            "extractBitsFromUint_08006c04": "extract_bits_from_uint", 
            "FUN_08006d98": "extract_nibble_and_bits_08006d98", 
            "extractNibble_08006b54": "extract_nibble", 
            "param_2": "bit_position_1", 
            "param_3": "bit_position_2", 
            "param_4": "bit_position_3"
        }, 
        "code": "void extract_nibble_and_bits_08006d98(char input_char, undefined4 bit_position_1, undefined4 bit_position_2, undefined4 bit_position_3)\\n{\\n  undefined4 nibble = extractNibble_08006b54(input_char);\\n  extractBitsFromUint_08006c04(nibble, bit_position_1, bit_position_2, bit_position_3);\\n  return;\\n}", 
        "called": [
            "FUN_08006c04", 
            "FUN_08006b54"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006d98", 
        "calling": [], 
        "imported": true, 
        "current_name": "extract_nibble_and_bits_08006d98"
    }, 
    "FUN_08005a68": {
        "renaming": {
            "FUN_08005a68": "incrementValueInGlobalInt_08005a68", 
            "PTR_DAT_08005a80": "targetAddress", 
            "currentValue": "currentValue", 
            "updatedValue": "updatedValue"
        }, 
        "code": "void incrementValueInGlobalInt_08005a68()\\n{\\n  int* PTR_DAT_08005a80 = PTR_DAT_08005a80;\\n  int currentValue = *PTR_DAT_08005a80;\\n  int updatedValue = currentValue + 1;\\n  *PTR_DAT_08005a80 = updatedValue;\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005a68", 
        "calling": [
            "FUN_08007756"
        ], 
        "imported": true, 
        "current_name": "incrementValueInGlobalInt_08005a68"
    }, 
    "FUN_080079c0": {
        "renaming": {
            "PTR_DAT_080079d8": "PTR_DATA_MEMORY_LOCATION", 
            "FUN_080079c0": "initializeMemory_080079c0", 
            "PTR_DAT_080079dc": "PTR_FLAG_LOCATION"
        }, 
        "code": "void initializeMemory_080079c0(void)\\n{\\n  // Fills the memory with 0x00 (null) starting at PTR_DAT_080079d8 for 0x18 (24) bytes\\n  fillMemoryWithByte(PTR_DAT_080079d8, 0x00, 0x18);\\n  // Sets the value of the integer at PTR_DAT_080079dc to 1\\n  *(int *)PTR_DAT_080079dc = 1;\\n  return;\\n}", 
        "called": [
            "FUN_0800b430"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080079c0", 
        "calling": [
            "FUN_08007540"
        ], 
        "imported": true, 
        "current_name": "initializeMemory_080079c0"
    }, 
    "FUN_0800b2e0": {
        "renaming": {
            "FUN_0800b2e0": "returnZero_0800b2e0"
        }, 
        "code": "undefined4 returnZero_0800b2e0()\\n{\\n  return 0;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800b2e0", 
        "calling": [
            "FUN_0800981c", 
            "FUN_080098d0"
        ], 
        "imported": true, 
        "current_name": "returnZero_0800b2e0"
    }, 
    "FUN_08002908": {
        "renaming": {
            "FUNC_08009054": "function_d", 
            "uVar1": "result_1", 
            "param_1": "input_1", 
            "param_2": "input_2", 
            "FUNC_08008cdc": "function_a", 
            "FUN_08002908": "calculate_result_08002908", 
            "param_3": "input_3", 
            "param_4": "input_4", 
            "FUNC_08008eec": "function_b", 
            "uVar2": "result_2", 
            "FUNC_08008cd8": "function_c"
        }, 
        "code": "undefined4 calculate_result_08002908(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\\n{\\n  undefined4 result_1 = FUNC_08008cdc(input_3, input_3);\\n  result_1 = FUNC_08008eec(result_1, input_4);\\n  undefined4 result_2 = FUNC_08008eec(input_1, input_1);\\n  result_1 = FUNC_08008cd8(result_1, result_2);\\n  undefined4 result_3 = FUNC_08008eec(input_2, input_2);\\n  result_1 = FUNC_08008cdc(result_1, result_3);\\n  result_3 = FUNC_08008eec(input_3, 0x40800000);\\n  result_1 = FUNC_08009054(result_1, result_3);\\n  return result_1;\\n}", 
        "called": [
            "FUN_08008cdc", 
            "FUN_08009054", 
            "FUN_08008cd8", 
            "FUN_08008eec"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002908", 
        "calling": [
            "FUN_08002c18"
        ], 
        "imported": true, 
        "current_name": "calculate_result_08002908"
    }, 
    "FUN_08007c40": {
        "renaming": {
            "param_1": "value", 
            "FUN_08007c40": "setGlobalValue_08007c40"
        }, 
        "code": "void setGlobalValue_08007c40(undefined4 value)\\n{\\n  _DAT_40000034 = value;\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007c40", 
        "calling": [
            "FUN_08005790"
        ], 
        "imported": true, 
        "current_name": "setGlobalValue_08007c40"
    }, 
    "FUN_080094c0": {
        "renaming": {
            "lVar6": "decoded_value", 
            "bVar4": "carry_occurred", 
            "param_1": "encoded_value", 
            "param_2": "mask", 
            "FUN_080094c0": "decode_080094c0", 
            "param_3": "param_3", 
            "param_4": "param_4", 
            "uVar3": "value_mask", 
            "uVar2": "shift", 
            "uVar5": "decoded_value"
        }, 
        "code": "long long decode_080094c0(uint encoded_value, uint mask, undefined4 param_3, undefined4 param_4) {\\n  int shift = (mask << 1) >> 0x15 - 0x3ff;\\n  uint value_mask;\\n  long long decode_080094c0d_value;\\n  if (shift < 0x14) {\\n    if (shift < 0) {\\n      decode_080094c0d_value = FUNC_080082d4(encoded_value, mask, DAT_080095a8, DAT_080095ac, param_4);\\n      bool end_of_string_reached = is_end_of_string_reached_08008b60((int)decode_080094c0d_value, (int)((ulonglong)decode_080094c0d_value >> 0x20), 0, 0);\\n      decode_080094c0d_value = CONCAT44(mask, encoded_value);\\n      if (end_of_string_reached) {\\n        if ((int)mask < 0) {\\n          if ((encoded_value | mask & 0x7fffffff) != 0) {\\n            mask = DAT_080095b4;\\n          }\\n          decode_080094c0d_value = (ulonglong)mask << 0x20;\\n        }\\n        else {\\n          decode_080094c0d_value = 0;\\n        }\\n      }\\n    }\\n    else {\\n      value_mask = DAT_080095b0 >> (shift & 0xff);\\n      decode_080094c0d_value = CONCAT44(mask, encoded_value);\\n      if ((encoded_value & value_mask | mask) != 0) {\\n        decode_080094c0d_value = FUNC_080082d4(encoded_value, mask, DAT_080095a8, DAT_080095ac, param_4);\\n        bool end_of_string_reached = is_end_of_string_reached_08008b60((int)decode_080094c0d_value, (int)((ulonglong)decode_080094c0d_value >> 0x20), 0, 0);\\n        decode_080094c0d_value = CONCAT44(mask, encoded_value);\\n        if (end_of_string_reached) {\\n          if ((int)mask < 0) {\\n            mask = mask + (0x100000 >> (shift & 0xff));\\n          }\\n          decode_080094c0d_value = (ulonglong)(mask & ~value_mask) << 0x20;\\n        }\\n      }\\n    }\\n  }\\n  else if (shift < 0x34) {\\n    value_mask = 0xffffffff >> (shift - 0x413 & 0xff);\\n    decode_080094c0d_value = CONCAT44(mask, encoded_value);\\n    if ((value_mask & encoded_value) != 0) {\\n      decode_080094c0d_value = FUNC_080082d4(encoded_value, mask, DAT_080095a8, DAT_080095ac, param_4);\\n      bool end_of_string_reached = is_end_of_string_reached_08008b60((int)decode_080094c0d_value, (int)((ulonglong)decode_080094c0d_value >> 0x20), 0, 0);\\n      decode_080094c0d_value = CONCAT44(mask, encoded_value);\\n      if (end_of_string_reached) {\\n        if ((int)mask < 0) {\\n          if (shift == 0x14) {\\n            mask = mask + 1;\\n          }\\n          else {\\n            uint carry = 1 << (0x34 - shift & 0xff);\\n            bool carry_occurred = CARRY4(carry, encoded_value);\\n            encoded_value = carry + encoded_value;\\n            if (carry_occurred) {\\n              mask = mask + 1;\\n            }\\n          }\\n        }\\n        decode_080094c0d_value = CONCAT44(mask, encoded_value & ~value_mask);\\n      }\\n    }\\n  }\\n  else {\\n    decode_080094c0d_value = CONCAT44(mask, encoded_value);\\n    if (shift == 0x400) {\\n      decode_080094c0d_value = FUNC_080082d4();\\n    }\\n  }\\n  return decode_080094c0d_value;\\n}", 
        "called": [
            "FUN_080082d4", 
            "FUN_08008b60"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080094c0", 
        "calling": [
            "FUN_08002408", 
            "FUN_0800a5a0", 
            "FUN_08002c18", 
            "FUN_08001f00"
        ], 
        "imported": true, 
        "current_name": "decode_080094c0"
    }, 
    "FUN_08008eec": {
        "renaming": {
            "FUN_08008eec": "FUNC_08008eec"
        }, 
        "code": "\nuint FUNC_08008eec(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_0800903c;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_0800903c:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n", 
        "called": [], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x08008eec", 
        "calling": [
            "FUN_08003004", 
            "FUN_080024c4", 
            "FUN_08003826", 
            "FUN_08001994", 
            "FUN_08002408", 
            "FUN_08002638", 
            "FUN_08002978", 
            "FUN_080005b4", 
            "FUN_08002908", 
            "FUN_080028bc", 
            "FUN_08003618", 
            "FUN_08002c18", 
            "FUN_08004e30", 
            "FUN_08001f00"
        ], 
        "current_name": "FUNC_08008eec"
    }, 
    "FUN_08006b54": {
        "renaming": {
            "bVar1": "outputByte", 
            "param_1": "inputByte", 
            "FUN_08006b54": "extractNibble_08006b54"
        }, 
        "code": "byte extractNibble_08006b54(byte inputByte)\\n{\\n  byte outputByte;\\n  if ((char)inputByte < '\\0') {\\n    outputByte = *(byte *)((inputByte & 0xf) + DAT_08006b98 + 0x14);\\n  }\\n  else {\\n    outputByte = *(byte *)((char)inputByte + DAT_08006b9c + 0x300);\\n  }\\n  return outputByte >> 4;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006b54", 
        "calling": [
            "FUN_08006d98"
        ], 
        "imported": true, 
        "current_name": "extractNibble_08006b54"
    }, 
    "FUN_08007e84": {
        "renaming": {
            "FUN_08007e84": "getByteFromGlobal_08007e84"
        }, 
        "code": "uint getByteFromGlobal_08007e84()\\n{\\n  uint* targetAddress = DAT_08007ea0 + 4;\\n  uint value = *targetAddress;\\n  return value & 0xff;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007e84", 
        "calling": [
            "FUN_08008286"
        ], 
        "imported": true, 
        "current_name": "getByteFromGlobal_08007e84"
    }, 
    "FUN_080057e4": {
        "renaming": {
            "PTR_DAT_0800580c": "status_array", 
            "doNothing_0800530c": "do_nothing", 
            "FUN_080057e4": "clear_globals_and_check_status_080057e4", 
            "PTR_DAT_08005810": "status_array", 
            "clearBitsInGlobals_08007bc2": "clear_bits_in_globals"
        }, 
        "code": "void clear_globals_and_check_status_080057e4(void)\\n{\\n  clearBitsInGlobals_08007bc2();\\n  if ((PTR_DAT_0800580c[0x3c] != -1) || ((PTR_DAT_0800580c[2] & 0x20) != 0)) {\\n    do_nothing();\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08007bc2", 
            "FUN_0800530c"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080057e4", 
        "calling": [
            "FUN_080025e8", 
            "FUN_080053a0", 
            "FUN_0800583c", 
            "FUN_08001d4c"
        ], 
        "imported": true, 
        "current_name": "clear_globals_and_check_status_080057e4"
    }, 
    "FUN_08006d8a": {
        "renaming": {
            "get_data_value_08006998": "retrieve_data", 
            "uVar1": "data_value", 
            "FUN_08006d8a": "get_data_value_08006d8a"
        }, 
        "code": "int get_data_value_08006d8a(void)\\n{\\n  int data_value;\\n  data_value = get_data_value_08006d8a_08006998();\\n  return data_value;\\n}", 
        "called": [
            "FUN_08006998"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006d8a", 
        "calling": [], 
        "imported": true, 
        "current_name": "get_data_value_08006d8a"
    }, 
    "FUN_0800b2e8": {
        "renaming": {
            "iVar2": "sum", 
            "firstBit": "firstBit", 
            "uVar1": "result", 
            "param_1": "num1", 
            "param_2": "num2", 
            "param_3": "count", 
            "param_4": "param_4", 
            "uVar3": "upper32Bits", 
            "uVar4": "concatenatedNums", 
            "FUN_0800b2e8": "calculate_0800b2e8"
        }, 
        "code": "uint calculate_0800b2e8(uint num1, uint num2, int count, undefined4 param_4)\\n{\\n  uint uVar1;\\n  int iVar2;\\n  uint uVar3;\\n  ulonglong uVar4;\\n  uVar4 = CONCAT44(num2, num1);\\n  uint firstBit = (num2 << 1) >> 0x15;\\n  if (firstBit == 0) {\\n    if ((num1 | num2 & 0x7fffffff) == 0) {\\n      return num1;\\n    }\\n    uVar4 = FUNC_08008640(num1, num2, 0, DAT_0800b3c8);\\n    if (count < DAT_0800b3cc) goto LAB_0800b34a;\\n    firstBit = ((uint)((int)(uVar4 >> 0x20) << 1) >> 0x15) - 0x36;\\n  }\\n  else if (firstBit == 0x7ff) {\\n    uVar1 = FUNC_080082d4(num1, num2, num1, num2, param_4);\\n    return uVar1;\\n  }\\n  uVar3 = (uint)(uVar4 >> 0x20);\\n  iVar2 = firstBit + count;\\n  if (iVar2 < 0x7ff) {\\n    if (0 < iVar2) {\\n      return (uint)uVar4;\\n    }\\n    if (iVar2 + 0x35 < 0 == SCARRY4(iVar2,0x35)) {\\n      uVar1 = FUNC_08008640((uint)uVar4,uVar3 & 0x800fffff | (iVar2 + 0x36) * 0x100000,0,DAT_0800b3d8);\\n      return uVar1;\\n    }\\n    if (count < 0xc351) {\\n      uVar4 = uVar4 & 0x8000000000000000 | (ulonglong)DAT_0800b3d0 | 0x1a56e1f00000000;\\nLAB_0800b34a:\\n      uVar1 = FUNC_08008640((int)uVar4,(int)(uVar4 >> 0x20),DAT_0800b3b8,DAT_0800b3bc);\\n      return uVar1;\\n    }\\n  }\\n  uVar1 = FUNC_08008640(DAT_0800b3d4,uVar3 & 0x80000000 | 0x7e37e43c,DAT_0800b3c0,DAT_0800b3c4);\\n  return uVar1;\\n}", 
        "called": [
            "FUN_08008640", 
            "FUN_080082d4"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800b2e8", 
        "calling": [
            "FUN_0800a5a0"
        ], 
        "imported": true, 
        "current_name": "calculate_0800b2e8"
    }, 
    "FUN_08005220": {
        "renaming": {
            "FUN_08005220": "doNothing_08005220"
        }, 
        "code": "void doNothing_08005220()\\n{\\n  // This function does nothing\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005220", 
        "calling": [
            "FUN_0800525c"
        ], 
        "imported": true, 
        "current_name": "doNothing_08005220"
    }, 
    "FUN_08007520": {
        "renaming": {
            "FUN_08007520": "set_bit_in_short_array_if_odd_08007520", 
            "param_1": "input", 
            "setBitInShortArray_080073d4": "setBitInShortArray"
        }, 
        "code": "void set_bit_in_short_array_if_odd_08007520(uint input) {\\n  if ((input & 1) != 0) {\\n    setBitInShortArray_080073d4(0x3e);\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_080073d4"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007520", 
        "calling": [
            "FUN_08007930"
        ], 
        "imported": true, 
        "current_name": "set_bit_in_short_array_if_odd_08007520"
    }, 
    "FUN_08007884": {
        "renaming": {
            "FUN_08007884": "get_bits_08007884", 
            "iVar1": "bit_1", 
            "iVar2": "bit_2", 
            "iVar3": "bit_3", 
            "iVar4": "bit_4", 
            "iVar5": "bit_5", 
            "uVar6": "result"
        }, 
        "code": "uint get_bits_08007884(void)\\n{\\n  int bit_0 = get_bit_at_index(0);\\n  int bit_1 = get_bit_at_index(0x36);\\n  int bit_2 = get_bit_at_index(0x37);\\n  int bit_3 = get_bit_at_index(0x38);\\n  int bit_4 = get_bit_at_index(0x39);\\n  int bit_5 = get_bit_at_index(0xf);\\n  uint result = bit_0 | bit_1 << 4 | bit_2 << 3 | bit_3 << 2 | bit_4 << 1 | bit_5 << 7;\\n  return result;\\n}", 
        "called": [
            "FUN_08007854"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007884", 
        "calling": [
            "FUN_08007930"
        ], 
        "imported": true, 
        "current_name": "get_bits_08007884"
    }, 
    "FUN_08004250": {
        "renaming": {
            "FUN_08004250": "FUNC_08004250"
        }, 
        "code": "\nvoid FUNC_08004250(void)\n\n{\n  undefined4 uVar1;\n  \n  send_string_to_device_080036c6(PTR_DAT_08004470);\n  print_float_08003826(*(undefined4 *)PTR_DAT_08004474);\n  send_string_to_device_080036c6(PTR_s___x__step_mm___1__08004478);\n  print_float_08003826(*(undefined4 *)(PTR_DAT_08004474 + 4));\n  send_string_to_device_080036c6(PTR_s___y__step_mm___2__0800447c);\n  print_float_08003826(*(undefined4 *)(PTR_DAT_08004474 + 8));\n  send_string_to_device_080036c6(PTR_s___z__step_mm___3__08004480);\n  print_abs_value_080037fc(PTR_DAT_08004474[0xd]);\n  send_string_to_device_080036c6(PTR_s___step_pulse__usec___4__08004484);\n  print_float_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x10));\n  send_string_to_device_080036c6(PTR_s___default_feed__mm_min___5__08004488);\n  print_float_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x14));\n  send_string_to_device_080036c6(PTR_s___default_seek__mm_min___6__0800448c);\n  print_abs_value_080037fc(*(undefined2 *)(PTR_DAT_08004474 + 0x18));\n  send_string_to_device_080036c6(PTR_s___step_port_invert_mask__int__08004490);\n  print_binary_representation_0800375c(*(undefined2 *)(PTR_DAT_08004474 + 0x18));\n  send_string_to_device_080036c6(PTR_s____7__08004494);\n  print_abs_value_080037fc(PTR_DAT_08004474[0x3c]);\n  send_string_to_device_080036c6(PTR_s___step_idle_delay__msec___8__08004498);\n  uVar1 = FUNC_08009054(*(undefined4 *)(PTR_DAT_08004474 + 0x20),DAT_0800449c);\n  print_float_08003826(uVar1);\n  send_string_to_device_080036c6(PTR_s___acceleration__mm_sec_2___9__080044a0);\n  print_float_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x24));\n  send_string_to_device_080036c6(PTR_s___junction_deviation__mm___10__080044a4);\n  print_float_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x1c));\n  send_string_to_device_080036c6(PTR_s___arc__mm_segment___11__080044a8);\n  print_abs_value_080037fc(PTR_DAT_08004474[0x3e]);\n  send_string_to_device_080036c6(PTR_s___n_arc_correction__int___12__080044ac);\n  print_abs_value_080037fc(PTR_DAT_08004474[0x3d]);\n  send_string_to_device_080036c6(PTR_s___n_decimals__int___13__080044b0);\n  print_abs_value_080037fc((PTR_DAT_08004474[0x28] & 1) != 0);\n  send_string_to_device_080036c6(PTR_s___report_inches__bool___14__080044b4);\n  print_abs_value_080037fc((PTR_DAT_08004474[0x28] & 2) != 0);\n  send_string_to_device_080036c6(PTR_s___auto_start__bool___15__080044b8);\n  print_abs_value_080037fc((PTR_DAT_08004474[0x28] & 4) != 0);\n  send_string_to_device_080036c6(PTR_s___invert_step_enable__bool___16__080044bc);\n  print_abs_value_080037fc((PTR_DAT_08004474[0x28] & 8) != 0);\n  send_string_to_device_080036c6(PTR_s___hard_limits__bool___17__080044c0);\n  print_abs_value_080037fc((PTR_DAT_08004474[0x28] & 0x10) != 0);\n  send_string_to_device_080036c6(PTR_s___homing_cycle__bool___18__080044c4);\n  print_abs_value_080037fc(*(undefined2 *)(PTR_DAT_08004474 + 0x2a));\n  send_string_to_device_080036c6(PTR_s___homing_dir_invert_mask__int__080044c8);\n  print_binary_representation_0800375c(*(undefined2 *)(PTR_DAT_08004474 + 0x2a));\n  send_string_to_device_080036c6(PTR_s____19__080044cc);\n  print_float_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x2c));\n  send_string_to_device_080036c6(PTR_s___homing_feed__mm_min___20__080044d0);\n  print_float_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x30));\n  send_string_to_device_080036c6(PTR_s___homing_seek__mm_min___21__080044d4);\n  print_abs_value_080037fc(*(undefined2 *)(PTR_DAT_08004474 + 0x34));\n  send_string_to_device_080036c6(PTR_s___homing_debounce__msec___22__080044d8);\n  print_float_08003826(*(undefined4 *)(PTR_DAT_08004474 + 0x38));\n  send_string_to_device_080036c6(PTR_s___homing_pull_off__mm___23__080044dc);\n  print_abs_value_080037fc(*(undefined2 *)(PTR_DAT_08004474 + 0x1a));\n  send_string_to_device_080036c6(PTR_s___dir_port_invert_mask__int__080044e0);\n  print_binary_representation_0800375c(*(undefined2 *)(PTR_DAT_08004474 + 0x1a));\n  send_string_to_device_080036c6(PTR_DAT_080044e4);\n  return;\n}\n\n", 
        "called": [
            "FUN_080036c6", 
            "FUN_0800375c", 
            "FUN_08009054", 
            "FUN_08003826", 
            "FUN_080037fc"
        ], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x08004250", 
        "calling": [
            "FUN_080051b4", 
            "FUN_08003b98"
        ], 
        "current_name": "FUNC_08004250"
    }, 
    "FUN_08006dc4": {
        "renaming": {
            "FUN_08006dc4": "set_bit_in_extended_array_08006dc4", 
            "param_1": "character", 
            "setBitInExtendedArray_08006a58": "set_bit"
        }, 
        "code": "void set_bit_in_extended_array_08006dc4(char character) {\\n  setBitInExtendedArray_08006a58((int)character);\\n  return;\\n}", 
        "called": [
            "FUN_08006a58"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006dc4", 
        "calling": [], 
        "imported": true, 
        "current_name": "set_bit_in_extended_array_08006dc4"
    }, 
    "FUN_08007402": {
        "renaming": {
            "FUN_08007402": "setBitInMemory_08007402", 
            "targetAddress": "targetAddress", 
            "param_1": "bitIndex", 
            "byteIndex": "byteIndex", 
            "bitMask": "bitMask", 
            "targetShortAddress": "targetShortAddress"
        }, 
        "code": "void setBitInMemory_08007402(uint bitIndex)\\n{\\n  uint byteIndex = (int)bitIndex >> 4;\\n  uint* targetAddress = byteIndex * 0x400 + 0x40020018;\\n  uint bitMask = 1 << (bitIndex & 0xf);\\n  short* targetShortAddress = (short*)(targetAddress);\\n  *targetShortAddress = (short)bitMask;\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007402", 
        "calling": [
            "FUN_080074c8"
        ], 
        "imported": true, 
        "current_name": "setBitInMemory_08007402"
    }, 
    "FUN_08002870": {
        "renaming": {
            "FUN_08002870": "incrementChar_08002870", 
            "param_1": "inputChar", 
            "local_9": "outputChar"
        }, 
        "code": "char incrementChar_08002870(char inputChar)\\n{\\n  char outputChar = inputChar + 1;\\n  if (outputChar == '\\x12') {\\n    outputChar = '\\0';\\n  }\\n  return outputChar;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002870", 
        "calling": [
            "FUN_08003004", 
            "FUN_08002ba8", 
            "FUN_08002f40", 
            "FUN_08002ef0", 
            "FUN_08002e08"
        ], 
        "imported": true, 
        "current_name": "incrementChar_08002870"
    }, 
    "FUN_08000210": {
        "renaming": {
            "FUN_08000210": "perform_tasks_08000210", 
            "do_nothing_080001d4": "do_nothing_second_task", 
            "doNothing_080001ec": "do_nothing_first_task"
        }, 
        "code": "void perform_tasks_08000210(void)\\n{\\n  doNothing_080001ec();\\n  do_nothing_080001d4();\\n  return;\\n}", 
        "called": [
            "FUN_080001d4", 
            "FUN_080001ec"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08000210", 
        "calling": [
            "FUN_080025e8", 
            "FUN_08000220", 
            "FUN_080001f8"
        ], 
        "imported": true, 
        "current_name": "perform_tasks_08000210"
    }, 
    "FUN_08005900": {
        "renaming": {
            "param_1": "input_byte", 
            "FUN_08005900": "process_byte_08005900", 
            "PTR_DAT_08005978": "data_pointer"
        }, 
        "code": "int process_byte_08005900(byte input_byte) {\\n  if (input_byte == 0x7e) {\\n    PTR_DAT_08005978[2] |= 2;\\n    return 1;\\n  }\\n  if (input_byte < 0x7f) {\\n    if (input_byte == 0x3f) {\\n      PTR_DAT_08005978[2] |= 1;\\n      return 1;\\n    }\\n    if (input_byte < 0x40) {\\n      if (input_byte == 0x18) {\\n        enable_task_execution_if_not_already_enabled();\\n        return 1;\\n      }\\n      if (input_byte == 0x21) {\\n        PTR_DAT_08005978[2] |= 8;\\n        return 1;\\n      }\\n    }\\n  }\\n  return 0;\\n}", 
        "called": [
            "FUN_080025e8"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005900", 
        "calling": [
            "FUN_08008286"
        ], 
        "imported": true, 
        "current_name": "process_byte_08005900"
    }, 
    "FUN_08002638": {
        "renaming": {
            "FUNC_08008640": "skipped_function_2", 
            "iVar4": "is_valid", 
            "param_1": "string_start", 
            "DAT_08002810": "constant_5", 
            "calculateTwosComplement_08008e3c": "calculate_twos_complement", 
            "FUN_08002638": "parse_integer_from_string_08002638", 
            "checkResultIsNotEmpty_08009214": "check_result_is_not_empty", 
            "uVar7": "return_value", 
            "uVar8": "temp_result", 
            "bVar2": "is_negative", 
            "bVar1": "digit", 
            "bVar3": "has_exponent", 
            "DAT_08002804": "constant_2", 
            "local_c": "end_ptr", 
            "DAT_08002808": "constant_3", 
            "local_1c": "temp_value", 
            "FUNC_08008590": "skipped_function_1", 
            "DAT_08002800": "constant_1", 
            "DAT_0800280c": "constant_4", 
            "local_16": "digit_count", 
            "local_15": "exponent_value", 
            "param_2": "string_ptr", 
            "param_3": "result_ptr", 
            "calculateFloat_08008c30": "calculate_float", 
            "FUNC_08008eec": "skipped_function_3", 
            "pcVar6": "integer_ptr", 
            "pcVar5": "next_ptr", 
            "local_d": "current_char", 
            "local_14": "integer_value"
        }, 
        "code": "uint32_t parse_integer_from_string_08002638(int32_t string_start, uint8_t *string_ptr, uint32_t *result_ptr)\\n{\\n  uint8_t current_char;\\n  bool is_negative = false;\\n  int32_t integer_start = string_start + (uint32_t)*string_ptr;\\n  char *integer_ptr = (char *)integer_start + 1;\\n  char *next_ptr = integer_ptr;\\n  char *end_ptr = NULL;\\n  uint32_t integer_value = 0;\\n  uint32_t digit_count = 0;\\n  int32_t exponent_value = 0;\\n  bool has_exponent = false;\\n  bool has_decimal = false;\\n  bool is_valid = true;\\n  current_char = *integer_ptr;\\n  if (current_char == '-') {\\n    is_negative = true;\\n    current_char = *++next_ptr;\\n  }\\n  else if (current_char == '+') {\\n    current_char = *++next_ptr;\\n  }\\n  while (current_char != '\\0' && is_valid) {\\n    if (isdigit(current_char)) {\\n      digit_count++;\\n      if (digit_count < 9) {\\n        integer_value = (uint32_t)(current_char - '0') + integer_value * 10;\\n      }\\n      else if (has_decimal || has_exponent) {\\n        end_ptr = next_ptr;\\n      }\\n      else {\\n        exponent_value++;\\n      }\\n    }\\n    else if (current_char == '.') {\\n      if (has_decimal || has_exponent) {\\n        is_valid = false;\\n      }\\n      else {\\n        has_decimal = true;\\n      }\\n    }\\n    else if (current_char == 'e' || current_char == 'E') {\\n      if (has_exponent || digit_count == 0) {\\n        is_valid = false;\\n      }\\n      else {\\n        has_exponent = true;\\n        exponent_value = 0;\\n      }\\n    }\\n    else if (current_char == '-' || current_char == '+') {\\n      if (*(next_ptr - 1) != 'e' && *(next_ptr - 1) != 'E') {\\n        is_valid = false;\\n      }\\n    }\\n    else {\\n      is_valid = false;\\n    }\\n    current_char = *++next_ptr;\\n  }\\n  if (end_ptr == NULL) {\\n    end_ptr = next_ptr;\\n  }\\n  if (is_valid && digit_count > 0) {\\n    integer_value = integer_value * pow(10, exponent_value);\\n    if (is_negative) {\\n      *result_ptr = (uint32_t)(-((int32_t)integer_value));\\n    }\\n    else {\\n      *result_ptr = integer_value;\\n    }\\n    *string_ptr = (uint8_t)(end_ptr - (char *)string_start - 1);\\n    return 1;\\n  }\\n  else {\\n    return 0;\\n  }\\n}", 
        "called": [
            "FUN_08008e3c", 
            "FUN_08009214", 
            "FUN_08008640", 
            "FUN_08008c30", 
            "FUN_08008590", 
            "FUN_08008eec"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002638", 
        "calling": [
            "FUN_0800184c", 
            "FUN_08003b98"
        ], 
        "imported": true, 
        "current_name": "parse_integer_from_string_08002638"
    }, 
    "FUN_080051b4": {
        "renaming": {
            "verify_checksum_08004d7c": "verify_checksum", 
            "auStack_18": "dataBuffer", 
            "initializeData_08004c48": "initialize_data", 
            "FUNC_08004250": "skip_processing", 
            "local_9": "dataCounter", 
            "send_error_message_08004030": "send_error_message", 
            "validate_data_08004dd2": "validate_data", 
            "FUN_080051b4": "validate_and_verify_data_080051b4"
        }, 
        "code": "void validate_and_verify_data_080051b4() {\\n  int validationResult;\\n  undefined dataBuffer[15];\\n  byte dataCounter;\\n\\n  validationResult = validate_data();\\n  if (validationResult == 0) {\\n    send_error_message(10);\\n    initialize_data(1);\\n    skip_processing();\\n  }\\n  for (dataCounter = 0; dataCounter < 8; dataCounter++) {\\n    validationResult = verify_checksum(dataCounter, dataBuffer);\\n    if (validationResult == 0) {\\n      send_error_message(10);\\n    }\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08004250", 
            "FUN_08004c48", 
            "FUN_08004d7c", 
            "FUN_08004dd2", 
            "FUN_08004030"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080051b4", 
        "calling": [
            "FUN_08001ddc"
        ], 
        "imported": true, 
        "current_name": "validate_and_verify_data_080051b4"
    }, 
    "FUN_080098d0": {
        "renaming": {
            "local_50": "one", 
            "iVar3": "input_validity_check", 
            "local_4c": "data_ptr", 
            "piVar5": "input_length_ptr", 
            "puVar4": "result_ptr", 
            "uStack_44": "input_2_copy", 
            "param_1": "input_1", 
            "local_48": "input_1_copy", 
            "param_2": "input_2", 
            "FUN_080098d0": "process_input_and_return_result_080098d0", 
            "cVar1": "input_char", 
            "uVar2": "result", 
            "uStack_3c": "input_2_copy_2", 
            "local_40": "input_1_copy_2"
        }, 
        "code": "undefined4 process_input_and_return_result_080098d0(undefined4 input_1, undefined4 input_2)\\n{\\n  char input_char;\\n  undefined4 result;\\n  int input_validity_check;\\n  undefined4 *result_ptr;\\n  int *input_length_ptr;\\n  undefined4 one = 1;\\n  undefined *data_ptr = PTR_DAT_0800998c;\\n  undefined4 input_1_copy = input_1;\\n  undefined4 input_2_copy = input_2;\\n  undefined4 input_1_copy_2 = input_1;\\n  undefined4 input_2_copy_2 = input_2;\\n  result = FUNC_0800a1bc();\\n  input_char = *PTR_DAT_08009988;\\n  if (((input_char == -1) || (input_validity_check = is_valid_input_08008b74(input_1, input_2, input_1, input_2), input_validity_check != 0)) || (input_validity_check = is_end_of_input_08008b24(input_1, input_2, 0, 0), input_validity_check == 0)) {\\n    return result;\\n  }\\n  if (input_char == '\\0') {\\n    undefined8 zero = 0;\\n    do {\\n      result = zero;\\n      if (returnZero_0800b2e0(&one) != 0) {\\n        goto joined_r0x0800997a;\\n      }\\n    } while( true );\\n  }\\n  else {\\n    undefined8 skipped_result = FUNC_08008894(0,0,0,0);\\n    result = skipped_result;\\n    if (input_char != '\\x02') {\\n      goto LAB_0800996c;\\n    }\\n  }\\n  result_ptr = (undefined4 *)getValueFromPtrPtr_0800b3dc();\\n  *result_ptr = 0x21;\\nLAB_0800996c:\\n  if (input_validity_check != 0) {\\n    input_length_ptr = (int *)getValueFromPtrPtr_0800b3dc();\\n    *input_length_ptr = input_validity_check;\\n  }\\n  return (undefined4)result;\\n}\\n", 
        "called": [
            "FUN_08008b24", 
            "FUN_08008894", 
            "FUN_0800a1bc", 
            "FUN_0800b2e0", 
            "FUN_08008b74", 
            "FUN_0800b3dc"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080098d0", 
        "calling": [
            "FUN_08001994", 
            "FUN_08003004", 
            "FUN_08002978", 
            "FUN_080005b4"
        ], 
        "imported": true, 
        "current_name": "process_input_and_return_result_080098d0"
    }, 
    "FUN_08005c30": {
        "renaming": {
            "bVar1": "is_within_range", 
            "param_1": "param", 
            "FUN_08005c30": "check_param_within_range_08005c30"
        }, 
        "code": "bool check_param_within_range_08005c30(int param)\n{\n  bool is_within_range;\n  is_within_range = param < 0x1000000;\n  if (is_within_range) {\n    DAT_08005c70[1] = param - 1;\n    set_data_value_at_index_08005bdc(0xffffffff,0xf);\n    DAT_08005c70[2] = 0;\n    *DAT_08005c70 = 7;\n  }\n  return !is_within_range;\n}", 
        "called": [
            "FUN_08005bdc"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005c30", 
        "calling": [
            "FUN_0800618c"
        ], 
        "imported": true, 
        "current_name": "check_param_within_range_08005c30"
    }, 
    "FUN_0800b51c": {
        "renaming": {
            "FUN_0800b51c": "doNothing_0800b51c"
        }, 
        "code": "void doNothing_0800b51c()\\n{\\n  // This function does nothing\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800b51c", 
        "calling": [
            "FUN_0800b524"
        ], 
        "imported": true, 
        "current_name": "doNothing_0800b51c"
    }, 
    "FUN_0800056c": {
        "renaming": {
            "uVar1": "result", 
            "param_1": "input_value", 
            "FUNC_08008590": "skip_value", 
            "DAT_080005ac": "data_ac", 
            "DAT_080005a8": "data_a8", 
            "calculateFloat_08008c30": "process_value", 
            "FUN_0800056c": "calculate_result_0800056c"
        }, 
        "code": "float calculate_result_0800056c(float input_value)\\n{\\n  float result = input_value;\\n  if (PTR_DAT_080005b0[3] != '\\0') {\\n    float skipped_value = FUNC_08008590(input_value);\\n    float processed_value = FUNC_08008640((int)skipped_value,(int)((ulonglong)skipped_value >> 0x20),DAT_080005a8,DAT_080005ac);\\n    result = calculateFloat_08008c30((int)processed_value,(int)((ulonglong)processed_value >> 0x20));\\n  }\\n  return result;\\n}", 
        "called": [
            "FUN_08008640", 
            "FUN_08008c30", 
            "FUN_08008590"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800056c", 
        "calling": [
            "FUN_080005b4"
        ], 
        "imported": true, 
        "current_name": "calculate_result_0800056c"
    }, 
    "FUN_08002f24": {
        "renaming": {
            "fillMemoryWithByte_0800b430": "fillMemoryWithByte", 
            "FUN_08002f24": "copyAndIncrementCharThenFillMemoryWithByte_08002f24", 
            "PTR_DAT_08002f3c": "PTR_data", 
            "copyAndIncrementChar_08002ef0": "copyAndIncrementChar"
        }, 
        "code": "void copyAndIncrementCharThenFillMemoryWithByte_08002f24(void)\\n{\\n  copyAndIncrementChar();\\n  fillMemoryWithByte_0800b430(PTR_DAT_08002f3c, 0, 0x1c);\\n  return;\\n}", 
        "called": [
            "FUN_08002ef0", 
            "FUN_0800b430"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002f24", 
        "calling": [
            "FUN_08001ddc"
        ], 
        "imported": true, 
        "current_name": "copyAndIncrementCharThenFillMemoryWithByte_08002f24"
    }, 
    "FUN_0800981c": {
        "renaming": {
            "local_50": "hypot_classification", 
            "puVar2": "bits_pointer", 
            "piVar5": "local_30_pointer", 
            "puVar4": "return_value_pointer", 
            "uStack_44": "b_copy", 
            "param_1": "a", 
            "uStack_34": "non_negative_classification", 
            "puStack_4c": "classifications_array", 
            "local_38": "negative_zero_classification", 
            "local_48": "a_copy", 
            "param_2": "b", 
            "param_3": "c", 
            "param_4": "d", 
            "uStack_3c": "d_copy", 
            "local_30": "sign_bit", 
            "local_40": "c_copy", 
            "FUN_0800981c": "hypot_and_classify_0800981c", 
            "uVar6": "result"
        }, 
        "code": "typedef unsigned long long u64;\\n\\ntypedef struct {\\n    u64 sign;\\n    u64 exp;\\n    u64 mant;\\n} double_bits;\\n\\nu64 unsigned char hypot_and_classify_0800981c(double_bits *bits) {\\n    return bits->sign;\\n}\\n\\nint is_valid(double_bits *bits) {\\n    u64 exp = bits->exp;\\n    return (exp != 0x7ff) && (exp != 0);\\n}\\n\\nint is_positive(double_bits *bits) {\\n    return bits->sign == 0;\\n}\\n\\nint is_nan(double_bits *bits) {\\n    u64 exp = bits->exp;\\n    u64 mant = bits->mant;\\n    return (exp == 0x7ff) && (mant != 0);\\n}\\n\\nu64 make_double_bits(double d) {\\n    double_bits bits;\\n    memcpy(&bits, &d, sizeof(double));\\n    return *((u64*) &bits);\\n}\\n\\nunsigned char hypot_and_classify_0800981c(unsigned int a, unsigned int b, unsigned int c, unsigned int d) {\\n    double d1 = *(double*) &a;\\n    double d2 = *(double*) &c;\\n    double result = hypot(d1, d2);\\n    double_bits bits;\\n    u64 bits_value = make_double_bits(result);\\n    memcpy(&bits, &bits_value, sizeof(double_bits));\\n    if (is_nan(&bits)) {\\n        return 0x22;\\n    }\\n    if (!is_valid(&bits)) {\\n        return *(unsigned char*) PTR_s_hypot_080098c0;\\n    }\\n    if (!is_positive(&bits)) {\\n        return *(unsigned char*) PTR_s_hypot_080098c4;\\n    }\\n    return *(unsigned char*) PTR_s_hypot_080098c8;\\n}", 
        "called": [
            "FUN_08009b24", 
            "FUN_0800b2e0", 
            "FUN_0800b2d4", 
            "FUN_0800b3dc"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800981c", 
        "calling": [
            "FUN_080005b4", 
            "FUN_08001f00"
        ], 
        "imported": true, 
        "current_name": "hypot_and_classify_0800981c"
    }, 
    "FUN_080059b4": {
        "renaming": {
            "doNothing_08005a50": "do_nothing", 
            "validate_parameter_08006d72": "validate_device_speed", 
            "set_parameter_value_08006ce0": "set_device_mode", 
            "DAT_080059f4": "status_register", 
            "FUN_080059b4": "initialize_device_080059b4"
        }, 
        "code": "void initialize_device_080059b4(void)\\n{\\n  unsigned int* DAT_080059f4 = DAT_080059f4;\\n  *DAT_080059f4 |= 0x200;\\n  *DAT_080059f4 |= 0x400;\\n  *DAT_080059f4 |= 0x100;\\n  validate_device_speed(16000);\\n  set_device_mode(3);\\n  doNothing_08005a50();\\n  return;\\n}", 
        "called": [
            "FUN_08005a50", 
            "FUN_08006ce0", 
            "FUN_08006d72"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080059b4", 
        "calling": [
            "FUN_08007540"
        ], 
        "imported": true, 
        "current_name": "initialize_device_080059b4"
    }, 
    "FUN_08006c04": {
        "renaming": {
            "uVar1": "endIndex", 
            "bitsToExtract": "bitsToExtract", 
            "param_1": "inputUint", 
            "param_2": "bitStartIndex", 
            "param_3": "outputUint1", 
            "param_4": "outputUint2", 
            "FUN_08006c04": "extractBitsFromUint_08006c04"
        }, 
        "code": "void extractBitsFromUint_08006c04(uint inputUint, uint bitStartIndex, uint bitLength, uint* outputUint1, uint* outputUint2)\\n{\\n  uint endIndex = bitStartIndex + bitLength;\\n  uint bitsToExtract = (1 << bitLength) - 1;\\n  *outputUint1 = bitsToExtract & inputUint >> bitStartIndex;\\n  *outputUint2 = bitsToExtract & inputUint << (32 - endIndex);\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006c04", 
        "calling": [
            "FUN_08006d98"
        ], 
        "imported": true, 
        "current_name": "extractBitsFromUint_08006c04"
    }, 
    "FUN_08002e08": {
        "renaming": {
            "FUN_08002e08": "process_data_08002e08", 
            "FUNC_08009054": "get_value", 
            "uVar1": "value1", 
            "puVar3": "current_data", 
            "incrementChar_08002870": "increment_char", 
            "local_18": "previous_data", 
            "uVar2": "value2", 
            "calculateValues_08002c18": "calculate_values", 
            "local_11": "current_char"
        }, 
        "code": "void process_data_08002e08() \\n\\\n{ \\n\\\n  undefined4 value1; \\n\\\n  undefined4 value2; \\n\\\n  undefined *current_data; \\n\\\n  undefined *previous_data; \\n\\\n  byte current_char; \\n\\\n  current_char = *PTR_DAT_08002ed0; \\n\\\n  previous_data = (undefined *)0x0; \\n\\\n  while (current_char != *PTR_DAT_08002ed8) { \\n\\\n    current_data = PTR_DAT_08002ed4 + (uint)current_char * 0x40; \\n\\\n    if ((previous_data != (undefined *)0x0) && ((previous_data[0x24] != '\\0' || (current_data[0x24] != '\\0')))) { \\n\\\n      value1 = FUNC_08009054(*(undefined4 *)(previous_data + 0x18),*(undefined4 *)(previous_data + 0x14)); \\n\\\n      value2 = FUNC_08009054(*(undefined4 *)(current_data + 0x18),*(undefined4 *)(previous_data + 0x14)); \\n\\\n      calculate_values(previous_data,value1,value2); \\n\\\n      previous_data[0x24] = 0; \\n\\\n    } \\n\\\n    current_char = incrementChar_08002870(current_char); \\n\\\n    previous_data = current_data; \\n\\\n  } \\n\\\n  value1 = FUNC_08009054(*(undefined4 *)(previous_data + 0x18),*(undefined4 *)(previous_data + 0x14)); \\n\\\n  value2 = FUNC_08009054(0,*(undefined4 *)(previous_data + 0x14)); \\n\\\n  calculate_values(previous_data,value1,value2); \\n\\\n  previous_data[0x24] = 0; \\n\\\n  return; \\n\\\n}", 
        "called": [
            "FUN_08009054", 
            "FUN_08002870", 
            "FUN_08002c18"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002e08", 
        "calling": [
            "FUN_08002edc"
        ], 
        "imported": true, 
        "current_name": "process_data_08002e08"
    }, 
    "FUN_08006680": {
        "renaming": {
            "FUN_08006680": "calculate_shifted_data_08006680", 
            "uVar1": "shifted_data", 
            "PTR_DAT_080066c8": "data_pointer", 
            "uVar2": "leading_zeroes_count", 
            "DAT_080066c4": "data"
        }, 
        "code": "uint calculate_shifted_data_08006680(void)\\n{\\n  uint shifted_DAT_080066c4 = calculate_DAT_080066c4_and_shift_right();\\n  uint leading_zeroes_count = count_leading_zeroes(0x380000);\\n  uint shifted_amount = (*(uint *)(PTR_DAT_080066c8 + 8) & 0x1c00) >> (leading_zeroes_count & 0xff);\\n  return shifted_DAT_080066c4 >> shifted_amount;\\n}", 
        "called": [
            "FUN_08006628"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006680", 
        "calling": [
            "FUN_08007f54"
        ], 
        "imported": true, 
        "current_name": "calculate_shifted_data_08006680"
    }, 
    "FUN_08000340": {
        "renaming": {
            "FUN_08000340": "set_memory_value_08000340", 
            "PTR_DAT_0800036c": "memory_initialized", 
            "param_1": "index", 
            "PTR_DAT_08000370": "memory_array", 
            "initializeMemory_080002f0": "initialize_memory", 
            "param_2": "value"
        }, 
        "code": "void set_memory_value_08000340(uint index, undefined value)\\n{\\n  if (*PTR_DAT_0800036c == 0) {\\n    initialize_memory();\\n  }\\n  PTR_DAT_08000370[index & 0x3ff] = value;\\n  return;\\n}", 
        "called": [
            "FUN_080002f0"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08000340", 
        "calling": [
            "FUN_08000374", 
            "FUN_08004c2a"
        ], 
        "imported": true, 
        "current_name": "set_memory_value_08000340"
    }, 
    "thunk_FUN_08009990": {
        "renaming": {
            "iVar1": "temp1", 
            "thunk_FUN_08009990": "calculate_thunk_08009990", 
            "param_1": "param1", 
            "result": "result", 
            "thunk_calculate_08009990": "calculate", 
            "param_2": "param2", 
            "param_3": "param3", 
            "param_4": "param4", 
            "uVar3": "temp3", 
            "uVar2": "temp2", 
            "uVar5": "temp5", 
            "uVar4": "temp4", 
            "uVar6": "temp6"
        }, 
        "code": "uint calculate_thunk_08009990(uint param1, uint param2, uint param3, uint param4)\\n{\\n  int temp1;\\n  uint temp2;\\n  uint temp3;\\n  uint temp4;\\n  uint temp5;\\n  uint temp6;\\n  uint result;\\n\\n  temp6 = CONCAT44(DAT_08009b04, DAT_08009b00);\\n  temp4 = param4 & 0x7fffffff;\\n  if ((DAT_08009b18 < (temp4 | (-param3 | param3) >> 0x1f)) || (temp5 = param2 & 0x7fffffff, DAT_08009b18 < (temp5 | (-param1 | param1) >> 0x1f)))\\n  {\\n    result = FUNC_080082d4(param3, param4, param1, param2);\\n  }\\n  else\\n  {\\n    if ((param4 + 0xc0100000 | param3) == 0)\\n    {\\n      result = FUNC_0800af78();\\n      return result;\\n    }\\n    temp3 = (int)param4 >> 0x1e & 2U | param2 >> 0x1f;\\n    if ((temp5 | param1) == 0)\\n    {\\n      temp4 = DAT_08009af0;\\n      if ((temp3 != 2) && (temp4 = param1, temp3 == 3))\\n      {\\n        temp4 = DAT_08009af8;\\n      }\\n    }\\n    else\\n    {\\n      if ((temp4 | param3) != 0)\\n      {\\n        if (temp4 == DAT_08009b18)\\n        {\\n          temp3 = temp3 - 1;\\n          if (temp5 == temp4)\\n          {\\n            if (2 < temp3)\\n            {\\n              return DAT_08009b10;\\n            }\\n            return *(uint *)(PTR_DAT_08009b20 + temp3 * 8);\\n          }\\n          if (temp3 < 3)\\n          {\\n            return *(uint *)(PTR_DAT_08009b1c + temp3 * 8);\\n          }\\n          return 0;\\n        }\\n        if (temp5 != DAT_08009b18)\\n        {\\n          temp1 = (int)(temp5 - temp4) >> 0x14;\\n          if ((int)(temp5 - temp4) < 0x3d00000)\\n          {\\n            if (((int)param4 < 0) && (temp1 + 0x3c < 0 != SCARRY4(temp1, 0x3c)))\\n            {\\n              temp6 = 0;\\n            }\\n            else\\n            {\\n              FUNC_08008894(param1, param2, param3, param4, param4);\\n              doNothing_0800b2cc();\\n              temp6 = FUNC_0800af78();\\n            }\\n          }\\n          temp2 = (uint)temp6;\\n          temp4 = (uint)((ulonglong)temp6 >> 0x20);\\n          if (temp3 == 1)\\n          {\\n            return temp2;\\n          }\\n          if (temp3 == 2)\\n          {\\n            temp6 = FUNC_080082d0(temp2, temp4, DAT_08009ae8, DAT_08009aec);\\n            temp2 = FUNC_080082d0(DAT_08009af0, DAT_08009af4, (int)temp6, (int)((ulonglong)temp6 >> 0x20));\\n            return temp2;\\n          }\\n          if (temp3 == 0)\\n          {\\n            return temp2;\\n          }\\n          temp6 = FUNC_080082d0(temp2, temp4, DAT_08009ae8, DAT_08009aec);\\n          temp2 = FUNC_080082d0((int)temp6, (int)((ulonglong)temp6 >> 0x20), DAT_08009af0, DAT_08009af4);\\n          return temp2;\\n        }\\n      }\\n      temp4 = DAT_08009b08;\\n      if (-1 < (int)param2)\\n      {\\n        temp4 = DAT_08009b00;\\n      }\\n    }\\n  }\\n  return temp4;\\n}", 
        "called": [
            "FUN_08009990"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08009818", 
        "calling": [
            "FUN_08001f00"
        ], 
        "imported": true, 
        "current_name": "calculate_thunk_08009990"
    }, 
    "FUN_08004bf4": {
        "renaming": {
            "FUN_08004bf4": "set_memory_with_checksum_08004bf4", 
            "param_1": "address_offset", 
            "set_memory_with_checksum_08000374": "set_memory_with_checksum_08000374", 
            "param_2": "data"
        }, 
        "code": "void set_memory_with_checksum_08004bf4(ushort address_offset, uint32_t data, size_t data_size) {\\n    ushort address = address_offset + 0x200;\\n    set_memory_with_checksum_08004bf4_08000374(address, data, data_size);\\n    return;\\n}", 
        "called": [
            "FUN_08000374"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08004bf4", 
        "calling": [
            "FUN_080005b4", 
            "FUN_08004d7c"
        ], 
        "imported": true, 
        "current_name": "set_memory_with_checksum_08004bf4"
    }, 
    "FUN_08004d7c": {
        "renaming": {
            "iVar1": "checksum", 
            "FUN_08004d7c": "verify_checksum_08004d7c", 
            "check_sum_080003ec": "calculate_checksum", 
            "param_1": "message_length", 
            "fillMemoryWithByte_0800b430": "fill_with_zeros", 
            "param_2": "message_address", 
            "set_memory_with_checksum_08004bf4": "set_checksum"
        }, 
        "code": "bool verify_checksum_08004d7c(byte message_length, undefined4 message_address)\\n{\\n  int checksum = calculate_checksum(message_address, (ushort)message_length * 0xd + 0x200, 0xc);\\n  if (checksum == 0) {\\n    fillMemoryWithByte_0800b430(message_address, 0xc);\\n    set_checksum(message_length, message_address);\\n  }\\n  return checksum != 0;\\n}", 
        "called": [
            "FUN_08004bf4", 
            "FUN_080003ec", 
            "FUN_0800b430"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08004d7c", 
        "calling": [
            "FUN_080004ac", 
            "FUN_080005b4", 
            "FUN_080051b4", 
            "FUN_080044e8"
        ], 
        "imported": true, 
        "current_name": "verify_checksum_08004d7c"
    }, 
    "FUN_08009278": {
        "renaming": {
            "uVar1": "exponent", 
            "FUN_08009278": "convertFloatToInteger_08009278", 
            "signBit": "signBit", 
            "param_1": "floatBits", 
            "shiftedValue": "shiftedValue", 
            "uVar2": "exponentDifference"
        }, 
        "code": "uint convertFloatToInteger_08009278(uint floatBits)\\n{\\n  uint exponent = (floatBits << 1) >> 0x18;\\n  uint exponentDifference = 0x9e - exponent;\\n  if (exponent < 0x9f && exponentDifference != 0) {\\n    uint shiftedValue = (floatBits << 8 | 0x80000000) >> (exponentDifference & 0xff);\\n    if ((floatBits & 0x80000000) != 0) {\\n      shiftedValue = -shiftedValue;\\n    }\\n    return shiftedValue;\\n  }\\n  else if (exponentDifference == 0xffffff9f && (floatBits & 0x7fffff) != 0) {\\n    return 0;\\n  }\\n  else {\\n    uint signBit = floatBits & 0x80000000;\\n    if (signBit == 0) {\\n      return 0x7fffffff;\\n    }\\n    else {\\n      return signBit;\\n    }\\n  }\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08009278", 
        "calling": [
            "FUN_08003b98", 
            "FUN_08003826"
        ], 
        "imported": true, 
        "current_name": "convertFloatToInteger_08009278"
    }, 
    "FUN_080004fc": {
        "renaming": {
            "uVar1": "twos_comp_num1, twos_comp_num2, twos_comp_num3", 
            "FUN_080004fc": "calculate_and_store_twos_complement_080004fc", 
            "param_1": "num1", 
            "param_2": "num2", 
            "param_3": "num3"
        }, 
        "code": "void calculate_and_store_twos_complement_080004fc(int num1, int num2, int num3) {\\n  int twos_comp_num1 = calculateTwosComplement_08008e44(num1);\\n  int twos_comp_num2 = calculateTwosComplement_08008e44(num2);\\n  int twos_comp_num3 = calculateTwosComplement_08008e44(num3);\\n  *(int *)(PTR_DAT_08000568 + 0xc) = FUNC_08009054(twos_comp_num1,*(int *)PTR_DAT_08000564);\\n  *(int *)(PTR_DAT_08000568 + 0x10) = FUNC_08009054(twos_comp_num2,*(int *)(PTR_DAT_08000564 + 4));\\n  *(int *)(PTR_DAT_08000568 + 0x14) = FUNC_08009054(twos_comp_num3,*(int *)(PTR_DAT_08000564 + 8));\\n  return;\\n}", 
        "called": [
            "FUN_08008e44", 
            "FUN_08009054"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080004fc", 
        "calling": [
            "FUN_0800283a"
        ], 
        "imported": true, 
        "current_name": "calculate_and_store_twos_complement_080004fc"
    }, 
    "FUN_08000220": {
        "renaming": {
            "FUN_08000220": "update_status_08000220", 
            "param_1": "new_status", 
            "display_alarm_until_condition_met_08002fd4": "display_alarm_until_condition_met", 
            "do_nothing_080001c8": "do_nothing", 
            "doNothing_080001e0": "do_nothing_else", 
            "perform_tasks_08000210": "perform_tasks"
        }, 
        "code": "void update_status_08000220(char new_status) {\\n  if (new_status != *PTR_DAT_08000264) {\\n    display_alarm_until_condition_met();\\n    if (new_status == '\\x01') {\\n      do_nothing_080001c8();\\n    }\\n    else if (new_status == '\\x02') {\\n      doNothing_080001e0();\\n    }\\n    else {\\n      perform_tasks();\\n    }\\n    *PTR_DAT_08000264 = new_status;\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08000210", 
            "FUN_080001c8", 
            "FUN_080001e0", 
            "FUN_08002fd4"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08000220", 
        "calling": [
            "FUN_080005b4"
        ], 
        "imported": true, 
        "current_name": "update_status_08000220"
    }, 
    "FUN_08005238": {
        "renaming": {
            "FUN_08005238": "initialize_pointer_to_zero_08005238", 
            "do_nothing_and_return_08005250": "do_nothing_and_return", 
            "PTR_DAT_0800524c": "pointer_to_data"
        }, 
        "code": "void initialize_pointer_to_zero_08005238(void)\\n{\\n  *PTR_DAT_0800524c = 0;\\n  do_nothing_and_return();\\n  return;\\n}", 
        "called": [
            "FUN_08005250"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005238", 
        "calling": [
            "FUN_08001ddc"
        ], 
        "imported": true, 
        "current_name": "initialize_pointer_to_zero_08005238"
    }, 
    "FUN_08007da8": {
        "renaming": {
            "FUN_08007da8": "setFlagsInMemory_08007da8", 
            "puVar1": "targetAddress1"
        }, 
        "code": "void setFlagsInMemory_08007da8()\\n{\\n  uint* targetAddress1 = DAT_08007dd4;\\n  uint* targetAddress2 = DAT_08007dd4;\\n  targetAddress1[8] = targetAddress1[8] | 0x10;\\n  *targetAddress2 = *targetAddress2 | 1;\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007da8", 
        "calling": [
            "FUN_08007e08"
        ], 
        "imported": true, 
        "current_name": "setFlagsInMemory_08007da8"
    }, 
    "FUN_08004148": {
        "renaming": {
            "PTR_s_ALARM__08004190": "ALARM_MESSAGE", 
            "PTR_s___MPos__0800419c": "MACHINE_POSITION", 
            "FUN_08004148": "displayAlarmMessage_08004148", 
            "param_1": "alarmType", 
            "doNothing_08002814": "wait", 
            "PTR_s_Abort_during_cycle_08004198": "ABORT_MESSAGE", 
            "PTR_s_Hard_limit_08004194": "HARD_LIMIT_MESSAGE"
        }, 
        "code": "void displayAlarmMessage_08004148(char alarmType){\\n  sendStringToDevice(PTR_s_ALARM__08004190);\\n  if (alarmType == ABORT_CYCLE) {\\n    sendStringToDevice(PTR_s_Abort_during_cycle_08004198);\\n  }\\n  else if (alarmType == HARD_LIMIT) {\\n    sendStringToDevice(PTR_s_Hard_limit_08004194);\\n  }\\n  sendStringToDevice(PTR_s___MPos__0800419c);\\n  doNothing_08002814(500);\\n  return;\\n}", 
        "called": [
            "FUN_080036c6", 
            "FUN_08002814"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08004148", 
        "calling": [
            "FUN_08003a74"
        ], 
        "imported": true, 
        "current_name": "displayAlarmMessage_08004148"
    }, 
    "FUN_08004940": {
        "renaming": {
            "uVar1": "tempFloat1", 
            "auStack_2c": "currentPos", 
            "FUN_08004940": "printCurrentAndWorkPosition_08004940", 
            "uVar3": "tempFloat2", 
            "uVar2": "tempInt1", 
            "uVar5": "tempDouble2", 
            "uVar4": "tempDouble1", 
            "local_11": "i"
        }, 
        "code": "void printCurrentAndWorkPosition_08004940(void)\\n{\\n  float currentPos[3];\\n  float workPos[3];\\n  uint8_t i;\\n  currentPos[0] = *(float *)(PTR_DAT_08004b88 + 4);\\n  currentPos[1] = *(float *)(PTR_DAT_08004b88 + 8);\\n  currentPos[2] = *(float *)(PTR_DAT_08004b88 + 0xc);\\n  if ((byte)PTR_DAT_08004b88[1] < 8) {\\n    (*(code *)(&switchD_0800495e::switchdataD_08004964)[(byte)PTR_DAT_08004b88[1]])();\\n    return;\\n  }\\n  send_string_to_device_080036c6(PTR_s__MPos__08004ba8);\\n  for (i = 0; i < 3; i++) {\\n    currentPos[i] = calculateTwosComplement(currentPos[i]);\\n    currentPos[i] = FUNC_08009054(currentPos[i],*(float *)(PTR_DAT_08004bac + i * 4));\\n    if ((PTR_DAT_08004bac[0x28] & 1) != 0) {\\n      currentPos[i] = calculateFloat(FUNC_08008640(currentPos[i],DAT_08004b80,DAT_08004b84));\\n    }\\n    print_float_08003826(currentPos[i]);\\n    send_string_to_device_080036c6(PTR_DAT_08004bb0);\\n  }\\n  send_string_to_device_080036c6(PTR_s_WPos__08004bb4);\\n  for (i = 0; i < 3; i++) {\\n    if ((PTR_DAT_08004bac[0x28] & 1) == 0) {\\n      workPos[i] = FUNC_08008cd8(currentPos[i],FUNC_08008cdc(*(float *)(PTR_DAT_08004bb8 + (i + 8) * 4),*(float *)(PTR_DAT_08004bb8 + (i + 10) * 4 + 4)));\\n    }\\n    else {\\n      workPos[i] = FUNC_08008cdc(*(float *)(PTR_DAT_08004bb8 + (i + 8) * 4),*(float *)(PTR_DAT_08004bb8 + (i + 10) * 4 + 4));\\n      workPos[i] = calculateFloat(FUNC_08008640(FUNC_080082d0(currentPos[i],FUNC_08008590(workPos[i]),DAT_08004b80,DAT_08004b84)));\\n    }\\n    print_float_08003826(workPos[i]);\\n    if (i < 2) {\\n      send_string_to_device_080036c6(PTR_DAT_08004bb0);\\n    }\\n  }\\n  send_string_to_device_080036c6(PTR_DAT_08004bbc);\\n  return;\\n}", 
        "called": [
            "FUN_080036c6", 
            "FUN_08008cdc", 
            "FUN_08008640", 
            "FUN_08008e44", 
            "FUN_08008c30", 
            "FUN_080082d0", 
            "FUN_08009054", 
            "FUN_08008590", 
            "FUN_08008cd8", 
            "FUN_08003826"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08004940", 
        "calling": [
            "FUN_08003a74"
        ], 
        "imported": true, 
        "current_name": "printCurrentAndWorkPosition_08004940"
    }, 
    "FUN_08008a74": {
        "renaming": {
            "bVar2": "valuesAreEqual", 
            "bVar3": "valuesAreComparable", 
            "uVar1": "xorValue", 
            "valuesAreInvalid": "valuesAreInvalid", 
            "signBit": "signBit", 
            "FUN_08008a74": "compareUintValues_08008a74", 
            "param_1": "value1", 
            "param_2": "value2", 
            "param_3": "value3", 
            "param_4": "value4"
        }, 
        "code": "uint compareUintValues_08008a74(uint value1, uint value2, uint value3, uint value4)\\n{\\n  bool valuesAreInvalid = ((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) && ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) || (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))));\\n  if (valuesAreInvalid) {\\n    return 1;\\n  }\\n  bool valuesAreEqual = value1 == value3 && value2 == value4;\\n  if (valuesAreEqual) {\\n    return 0;\\n  }\\n  uint xorValue = value2 ^ value4;\\n  bool valuesAreComparable = -1 < (int)xorValue;\\n  if (valuesAreComparable) {\\n    valuesAreComparable = value4 <= value2;\\n  }\\n  if (valuesAreEqual || !valuesAreComparable) {\\n    return 1;\\n  }\\n  uint signBit = (int)value4 >> 0x1f;\\n  if (valuesAreComparable) {\\n    if (value3 <= value1) {\\n      signBit = ~signBit;\\n    }\\n    return signBit | 1;\\n  }\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08008a74", 
        "calling": [
            "FUN_08008b00"
        ], 
        "imported": true, 
        "current_name": "compareUintValues_08008a74"
    }, 
    "FUN_08002fd4": {
        "renaming": {
            "iVar1": "pointer_value", 
            "PTR_DAT_08003000": "PTR_DAT_08003000", 
            "display_alarm_if_needed_08003a74": "display_alarm_if_needed", 
            "FUN_08002fd4": "display_alarm_until_condition_met_08002fd4", 
            "getPointer_08002f74": "get_pointer_value", 
            "*PTR_DAT_08003000": "*PTR_DAT_08003000"
        }, 
        "code": "void display_alarm_until_condition_met_08002fd4() {\\n  int pointer_value;\\n\\n  while ((pointer_value = getPointer_08002f74(), pointer_value != 0 || (PTR_DAT_08003000[1] == '\\x03'))) {\\n    display_alarm_if_needed();\\n    if (*PTR_DAT_08003000 != '\\0') {\\n      return;\\n    }\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08002f74", 
            "FUN_08003a74"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002fd4", 
        "calling": [
            "FUN_08002408", 
            "FUN_080005b4", 
            "FUN_08000220", 
            "FUN_0800525c", 
            "FUN_080024c4"
        ], 
        "imported": true, 
        "current_name": "display_alarm_until_condition_met_08002fd4"
    }, 
    "FUN_08002408": {
        "renaming": {
            "uVar1": "new_calculated_value", 
            "param_1": "param", 
            "FUN_08002408": "display_alarm_until_condition_met_08002fd4_08002408", 
            "uVar3": "twos_complement", 
            "uVar2": "initial_value", 
            "uVar4": "decoded_value", 
            "local_12": "calculated_value"
        }, 
        "code": "void display_alarm_until_condition_met_08002fd4_08002408(int param) {\\n  \\n  undefined4 initial_value = FUNC_08008eec(param,DAT_080024b8);\\n  undefined8 decoded_value = FUNC_08008590(initial_value);\\n  decoded_value = decode_080094c0((int)decoded_value,(int)((ulonglong)decoded_value >> 0x20));\\n  ushort calculated_value = calculate_value_08008bf0((int)decoded_value,(int)((ulonglong)decoded_value >> 0x20));\\n  \\n  display_alarm_until_condition_met_08002fd4_08002408();\\n  \\n  undefined4 twos_complement = calculateTwosComplement_08008e44((uint)calculated_value * 0x32);\\n  undefined4 updated_value = FUNC_08008cd8(initial_value,twos_complement);\\n  decoded_value = FUNC_08008590(updated_value);\\n  decoded_value = decode_080094c0((int)decoded_value,(int)((ulonglong)decoded_value >> 0x20));\\n  ushort new_calculated_value = calculate_value_08008bf0((int)decoded_value,(int)((ulonglong)decoded_value >> 0x20));\\n  \\n  doNothing_08002814(new_calculated_value);\\n  \\n  while ((calculated_value != 0 && (display_alarm_if_needed_08003a74(), *PTR_DAT_080024c0 == '\\0'))) {\\n    wait_for_value_to_be_greater_than_sum_of_value_and_parameter_080002a0(0x32);\\n    calculated_value = calculated_value - 1;\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_080002a0", 
            "FUN_08003a74", 
            "FUN_08008e44", 
            "FUN_08002814", 
            "FUN_08002fd4", 
            "FUN_080094c0", 
            "FUN_08008590", 
            "FUN_08008bf0", 
            "FUN_08008cd8", 
            "FUN_08008eec"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002408", 
        "calling": [
            "FUN_080005b4"
        ], 
        "imported": true, 
        "current_name": "display_alarm_until_condition_met_08002fd4_08002408"
    }, 
    "FUN_08002a94": {
        "renaming": {
            "puVar2": "current_data_ptr", 
            "local_9": "current_char_value", 
            "FUN_08002a94": "process_input_and_calculate_result_08002a94", 
            "local_18": "previous_data_ptr", 
            "puVar1": "previous_char_ptr", 
            "local_14": "current_char_ptr"
        }, 
        "code": "void process_input_and_calculate_result_08002a94() {\\n  undefined *current_char_ptr;\\n  undefined *previous_char_ptr;\\n  undefined *current_data_ptr;\\n  undefined *previous_data_ptr;\\n  byte current_char_value;\\n  \\n  current_char_value = *PTR_DAT_08002af0;\\n  current_data_ptr = (undefined *)0x0;\\n  previous_data_ptr = (undefined *)0x0;\\n  while (current_char_value != *PTR_DAT_08002af8) {\\n    current_char_value = adjust_char_value_08002896(current_char_value);\\n    previous_char_ptr = previous_data_ptr;\\n    current_data_ptr = PTR_DAT_08002af4 + (uint)current_char_value * 0x40;\\n    processInputAndCalculateResult_080029d8(current_data_ptr,previous_data_ptr,previous_char_ptr);\\n    previous_data_ptr = current_data_ptr;\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_080029d8", 
            "FUN_08002896"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002a94", 
        "calling": [
            "FUN_08002edc"
        ], 
        "imported": true, 
        "current_name": "process_input_and_calculate_result_08002a94"
    }, 
    "FUN_08003618": {
        "renaming": {
            "bVar1": "data_index", 
            "PTR_DAT_08003694": "data_index_ptr", 
            "param_1": "input", 
            "FUN_08003618": "update_data_at_index_08003618", 
            "uVar3": "twos_complement", 
            "PTR_DAT_08003698": "data_ptr", 
            "uVar4": "current_input"
        }, 
        "code": "void update_data_at_index_08003618(uint32_t index)\\n{\\n  uint8_t data_index = *PTR_DAT_08003694;\\n  uint32_t current_data = *(uint32_t *)(PTR_DAT_08003698 + (uint)data_index * 0x40 + 0x20);\\n  uint32_t twos_complement = calculate_twos_complement(input);\\n  twos_complement = apply_skipped_operation(current_data, twos_complement);\\n  uint32_t current_input = *(uint32_t *)(PTR_DAT_08003698 + (uint)data_index * 0x40 + 0x10);\\n  twos_complement = apply_skipped_operation(twos_complement, calculate_twos_complement(current_input));\\n  *(uint32_t *)(PTR_DAT_08003698 + (uint)data_index * 0x40 + 0x20) = twos_complement;\\n  *(uint32_t *)(PTR_DAT_08003698 + (uint)data_index * 0x40 + 0x10) = input;\\n  *(uint32_t *)(PTR_DAT_08003698 + (uint)data_index * 0x40 + 0x18) = 0;\\n  *(uint32_t *)(PTR_DAT_08003698 + (uint)data_index * 0x40 + 0x1c) = 0;\\n  PTR_DAT_08003698[(uint)data_index * 0x40 + 0x25] = 0;\\n  PTR_DAT_08003698[(uint)data_index * 0x40 + 0x24] = 1;\\n  process_data();\\n}\\n", 
        "called": [
            "FUN_08008e44", 
            "FUN_08009054", 
            "FUN_08002edc", 
            "FUN_08008eec"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08003618", 
        "calling": [
            "FUN_080058a0"
        ], 
        "imported": true, 
        "current_name": "update_data_at_index_08003618"
    }, 
    "FUN_0800522c": {
        "renaming": {
            "FUN_0800522c": "doNothing_0800522c"
        }, 
        "code": "void doNothing_0800522c()\\n{\\n  // This function does nothing\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800522c", 
        "calling": [
            "FUN_0800525c"
        ], 
        "imported": true, 
        "current_name": "doNothing_0800522c"
    }, 
    "FUN_0800af78": {
        "renaming": {
            "FUN_0800af78": "FUNC_0800af78"
        }, 
        "code": "\nint FUNC_0800af78(int param_1,uint param_2)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined8 uVar9;\n  undefined8 uVar10;\n  undefined4 local_2c;\n  \n  uVar9 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_0800b298 < (int)uVar8) {\n    if ((uVar8 != DAT_0800b29c && (int)DAT_0800b29c <= (int)uVar8) ||\n       ((iVar2 = DAT_0800b2a8, uVar8 == DAT_0800b29c && (param_1 != 0)))) {\n      iVar2 = FUNC_080082d4(param_1,param_2,param_1);\n      return iVar2;\n    }\n  }\n  else {\n    if (DAT_0800b2ac < (int)uVar8) {\n      uVar9 = doNothing_0800b2cc();\n      uVar6 = (undefined4)((ulonglong)uVar9 >> 0x20);\n      uVar3 = (undefined4)uVar9;\n      if (DAT_0800b2bc < (int)uVar8) {\n        if ((int)uVar8 < DAT_0800b2c0) {\n          uVar9 = FUNC_080082d0(uVar3,uVar6,0,DAT_0800b2c4);\n          uVar10 = FUNC_08008640(uVar3,uVar6,0,DAT_0800b2c4);\n          uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_0800b2b8);\n          uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                               (int)((ulonglong)uVar10 >> 0x20));\n          iVar2 = 2;\n        }\n        else {\n          uVar9 = FUNC_08008894(0,DAT_0800b2c8,uVar3,uVar6);\n          iVar2 = 3;\n        }\n      }\n      else if (DAT_0800b2bc + -0xd0000 < (int)uVar8) {\n        uVar9 = FUNC_080082d0(uVar3,uVar6,0,DAT_0800b2b8);\n        uVar10 = FUNC_080082d4(uVar3,uVar6,0,DAT_0800b2b8);\n        uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                             (int)((ulonglong)uVar10 >> 0x20));\n        iVar2 = 1;\n      }\n      else {\n        uVar9 = FUNC_080082d4(uVar3,uVar6,uVar3,uVar6);\n        uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),0,DAT_0800b2b8);\n        uVar10 = FUNC_080082d4(uVar3,uVar6,0,0x40000000);\n        uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                             (int)((ulonglong)uVar10 >> 0x20));\n        iVar2 = 0;\n      }\n    }\n    else {\n      if ((int)uVar8 <= DAT_0800b2ac + -0x1bc0000) {\n        uVar10 = FUNC_080082d4(param_1,param_2,DAT_0800b290,DAT_0800b294);\n        iVar2 = is_end_of_string_reached_08008b60((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_0800b2b8);\n        if (iVar2 != 0) {\n          return param_1;\n        }\n      }\n      iVar2 = -1;\n    }\n    local_2c = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar7 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar7,local_2c,uVar7);\n    uVar4 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar3 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar3,uVar4,uVar3,uVar4);\n    uVar5 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar6 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar6,uVar5,DAT_0800b238,DAT_0800b23c);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b240,DAT_0800b244);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b248,DAT_0800b24c);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b250,DAT_0800b254);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b258,DAT_0800b25c);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b260,DAT_0800b264);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar3,uVar4);\n    uVar3 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar10 = FUNC_08008640(uVar6,uVar5,DAT_0800b268,DAT_0800b26c);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b270,DAT_0800b274);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b278,DAT_0800b27c);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b280,DAT_0800b284);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b288,DAT_0800b28c);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar6 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    if (iVar2 == -1) {\n      uVar9 = FUNC_080082d4((int)uVar9,uVar3,(int)uVar10,uVar6);\n      uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n      iVar2 = FUNC_080082d0(uVar7,local_2c,(int)uVar9,(int)((ulonglong)uVar9 >> 0x20));\n      return iVar2;\n    }\n    uVar9 = FUNC_080082d4((int)uVar9,uVar3,(int)uVar10,uVar6);\n    puVar1 = PTR_DAT_0800b2b0;\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n    uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),\n                         *(undefined4 *)(PTR_DAT_0800b2b4 + iVar2 * 8),\n                         *(undefined4 *)((int)(PTR_DAT_0800b2b4 + iVar2 * 8) + 4));\n    uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n    iVar2 = FUNC_080082d0(*(undefined4 *)(puVar1 + iVar2 * 8),\n                         *(undefined4 *)((int)(puVar1 + iVar2 * 8) + 4),(int)uVar9,\n                         (int)((ulonglong)uVar9 >> 0x20));\n    if ((int)param_2 < 0) {\n      return iVar2;\n    }\n  }\n  return iVar2;\n}\n\n", 
        "called": [
            "FUN_08008894", 
            "FUN_08008640", 
            "FUN_080082d0", 
            "FUN_0800b2cc", 
            "FUN_080082d4", 
            "FUN_08008b60"
        ], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x0800af78", 
        "calling": [
            "FUN_08009990"
        ], 
        "current_name": "FUNC_0800af78"
    }, 
    "FUN_08007d08": {
        "renaming": {
            "puVar1": "flags", 
            "FUN_08007d08": "initialize_flags_08007d08"
        }, 
        "code": "void initialize_flags_08007d08()\\n{\\n  uint32_t *flags = DAT_08007d9c;\\n  set_flag(flags);\\n  flags[0] = 0x80;\\n  flags[1] = 0;\\n  flags[2] = 0;\\n  flags[3] = 0;\\n  flags[4] = 0;\\n  flags[5] = 1;\\n  flags[6] = 0x6800;\\n  flags[7] = 0;\\n  flags[8] = 0;\\n  flags[9] = 0;\\n  flags[10] = (uint32_t)((uint64_t)DAT_08007da4 * (uint64_t)*(uint32_t *)PTR_DAT_08007da0 >> 0x35) - 1;\\n  flags[11] = 199;\\n  flags[12] = 0;\\n  flags[13] = 100;\\n  flags[14] = 0;\\n  flags[15] = 0;\\n  flags[17] = 0;\\n}", 
        "called": [
            "FUN_08007a10"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007d08", 
        "calling": [
            "FUN_08007e08"
        ], 
        "imported": true, 
        "current_name": "initialize_flags_08007d08"
    }, 
    "FUN_080091fc": {
        "renaming": {
            "param_1": "num1", 
            "calculateResultAndReturnConcatenation_08009204_08009204": "calculate_result_and_return_concatenation", 
            "param_2": "num2", 
            "FUN_080091fc": "calculate_and_concatenate_results_080091fc"
        }, 
        "code": "void calculate_and_concatenate_results_080091fc(undefined4 num1, undefined4 num2)\\n{\\n  calculateResultAndReturnConcatenation_08009204_08009204(num2, num1);\\n  return;\\n}", 
        "called": [
            "FUN_08009204"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080091fc", 
        "calling": [
            "FUN_08009264", 
            "FUN_08009250"
        ], 
        "imported": true, 
        "current_name": "calculate_and_concatenate_results_080091fc"
    }, 
    "FUN_080058a0": {
        "renaming": {
            "update_data_at_index_08003618": "update_data_at_index", 
            "PTR_DAT_080058f4": "data_array", 
            "calculateAndUpdateValue_08005324": "calculate_and_update_value", 
            "PTR_DAT_080058f0": "data_pointer", 
            "PTR_DAT_080058fc": "global_array", 
            "FUN_080058a0": "update_or_reset_data_080058a0", 
            "DAT_080058f8": "global_constant"
        }, 
        "code": "void update_or_reset_data_080058a0() {\\n  int* data_ptr = *(int**)PTR_DAT_080058f0;\\n  if (*data_ptr == 0) {\\n    PTR_DAT_080058f4[1] = 0;\\n  }\\n  else {\\n    int index_difference = *(int*)(data_ptr + 4) - *(int*)(PTR_DAT_080058f4 + 4);\\n    update_data_at_index(index_difference);\\n    *(int*)(PTR_DAT_080058f4 + 28) = 0;\\n    calculate_and_update_value(*(int*)(PTR_DAT_080058f4 + 28));\\n    *(int*)(PTR_DAT_080058f4 + 24) = DAT_080058f8;\\n    *(int*)(PTR_DAT_080058f4 + 16) = 0;\\n    PTR_DAT_080058f4[1] = 2;\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08005324", 
            "FUN_08003618"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080058a0", 
        "calling": [
            "FUN_08003a74"
        ], 
        "imported": true, 
        "current_name": "update_or_reset_data_080058a0"
    }, 
    "FUN_080036c6": {
        "renaming": {
            "local_c": "current_char", 
            "param_1": "string_to_send", 
            "send_byte_to_device_08008250": "send_byte_to_device", 
            "FUN_080036c6": "send_string_to_device_080036c6"
        }, 
        "code": "void send_string_to_device_080036c6(char *string_to_send)\\n{\\n  char *current_char = string_to_send;\\n  while (*current_char != '\\0') {\\n    send_byte_to_device(*current_char);\\n    current_char++;\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08008250"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080036c6", 
        "calling": [
            "FUN_08004250", 
            "FUN_08004900", 
            "FUN_08004228", 
            "FUN_080046d0", 
            "FUN_08004940", 
            "FUN_08004148", 
            "FUN_080041a0", 
            "FUN_080044e8", 
            "FUN_08004030", 
            "FUN_0800423c"
        ], 
        "imported": true, 
        "current_name": "send_string_to_device_080036c6"
    }, 
    "FUN_08008190": {
        "renaming": {
            "puVar1": "data_pointer", 
            "FUN_08008190": "initialize_data_08008190"
        }, 
        "code": "void initialize_data_08008190()\\n{\\n  uint *data_pointer;\\n  data_pointer = DAT_08008240;\\n  set_flag_08007ea4(DAT_08008240);\\n  data_pointer[3] &= 0xffffdfff;\\n  data_pointer[3] &= 0xffff400c | 0xc;\\n  data_pointer[4] &= 0xffff8090;\\n  data_pointer[5] &= 0xfffff000;\\n  *data_pointer &= 0xfffffc00;\\n  calculate_shifted_data_08007f54(data_pointer,0x1c200);\\n  data_pointer[6] = data_pointer[6];\\n  data_pointer[3] |= 0x2000;\\n  return;\\n}", 
        "called": [
            "FUN_08007ea4", 
            "FUN_08007f54"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08008190", 
        "calling": [
            "FUN_08007540"
        ], 
        "imported": true, 
        "current_name": "initialize_data_08008190"
    }, 
    "FUN_080074c8": {
        "renaming": {
            "enable_task_execution_if_not_already_enabled_08003a18": "enable_task_execution_if_not_already_enabled", 
            "param_1": "task_flags", 
            "PTR_DAT_0800751c": "task_enabled_ptr_2", 
            "enable_task_if_not_enabled_0800195c": "enable_task_if_not_enabled", 
            "PTR_DAT_08007518": "task_enabled_ptr_1", 
            "FUN_080074c8": "enable_tasks_080074c8"
        }, 
        "code": "void enable_tasks_080074c8(uint task_flags)\\n{\\n  if ((task_flags & 1) != 0) {\\n    set_bit_in_memory(0x3e);\\n  }\\n  if ((*(int *)PTR_DAT_08007518 != 0) && ((task_flags & 0x1e) != 0)) {\\n    enable_task_if_not_enabled();\\n  }\\n  if ((*(int *)PTR_DAT_0800751c != 0) && ((task_flags & 0x80) != 0)) {\\n    enable_task_execution_if_not_already_enabled(task_flags);\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08007402", 
            "FUN_0800195c", 
            "FUN_08003a18"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080074c8", 
        "calling": [
            "FUN_08007930"
        ], 
        "imported": true, 
        "current_name": "enable_tasks_080074c8"
    }, 
    "FUN_0800b430": {
        "renaming": {
            "FUN_0800b430": "fillMemoryWithByte_0800b430", 
            "puVar2": "endAddress", 
            "param_1": "memoryAddress", 
            "param_2": "byteValue", 
            "param_3": "memorySize", 
            "puVar1": "currentAddress", 
            "uVar3": "remainingBytes", 
            "uVar4": "wordValue", 
            "bVar5": "loopCondition"
        }, 
        "code": "void fillMemoryWithByte_0800b430(uint32_t* memoryAddress, uint8_t byteValue, uint32_t memorySize)\\n{\\n  uint32_t* currentAddress = memoryAddress;\\n  uint32_t* endAddress = memoryAddress + (memorySize / 4);\\n  uint32_t remainingBytes = memorySize % 4;\\n  uint32_t wordValue = (byteValue << 24) | (byteValue << 16) | (byteValue << 8) | byteValue;\\n  while (currentAddress < endAddress) {\\n    *currentAddress++ = wordValue;\\n  }\\n  uint8_t* remainingByteAddress = (uint8_t*)currentAddress;\\n  while (remainingBytes-- > 0) {\\n    *remainingByteAddress++ = byteValue;\\n  }\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800b430", 
        "calling": [
            "FUN_08001994", 
            "FUN_080002f0", 
            "FUN_08001ddc", 
            "FUN_080004ac", 
            "FUN_080079c0", 
            "FUN_08002f24", 
            "FUN_080005b4", 
            "FUN_08005814", 
            "FUN_08004d7c", 
            "FUN_080024c4"
        ], 
        "imported": true, 
        "current_name": "fillMemoryWithByte_0800b430"
    }, 
    "FUN_08004030": {
        "renaming": {
            "FUN_08004030": "send_error_message_08004030", 
            "param_1": "error_code"
        }, 
        "code": "void send_error_message_08004030(char error_code) {\\n  if (error_code == '\\0') {\\n    send_string_to_device(PTR_DAT_08004108);\\n  }\\n  else {\\n    send_string_to_device(PTR_s_error__0800410c);\\n    switch(error_code) {\\n      case '\\x01':\\n        send_string_to_device(PTR_s_Bad_number_format_08004110);\\n        break;\\n      case '\\x02':\\n        send_string_to_device(PTR_s_Expected_command_letter_08004114);\\n        break;\\n      case '\\x03':\\n        send_string_to_device(PTR_s_Unsupported_statement_08004118);\\n        break;\\n      case '\\x04':\\n        send_string_to_device(PTR_s_Invalid_radius_0800411c);\\n        break;\\n      case '\\x05':\\n        send_string_to_device(PTR_s_Modal_group_violation_08004120);\\n        break;\\n      case '\\x06':\\n        send_string_to_device(PTR_s_Invalid_statement_08004124);\\n        break;\\n      case '\\a':\\n        send_string_to_device(PTR_s_Setting_disabled_08004128);\\n        break;\\n      case '\\b':\\n        send_string_to_device(PTR_s_Value___0_0_0800412c);\\n        break;\\n      case '\\t':\\n        send_string_to_device(PTR_s_Value___3_usec_08004130);\\n        break;\\n      case '\\n':\\n        send_string_to_device(PTR_s_EEPROM_read_fail__Using_defaults_08004134);\\n        break;\\n      case '\\v':\\n        send_string_to_device(PTR_s_Busy_or_queued_08004138);\\n        break;\\n      case '\\f':\\n        send_string_to_device(PTR_s_Alarm_lock_0800413c);\\n        break;\\n      case '\\r':\\n        send_string_to_device(PTR_s_Line_overflow_08004140);\\n    }\\n    send_string_to_device(PTR_DAT_08004144);\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_080036c6"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08004030", 
        "calling": [
            "FUN_08003f34", 
            "FUN_080004ac", 
            "FUN_080051b4", 
            "FUN_080044e8", 
            "FUN_080039bc", 
            "FUN_08003b98"
        ], 
        "imported": true, 
        "current_name": "send_error_message_08004030"
    }, 
    "FUN_08005360": {
        "renaming": {
            "FUN_08005360": "isMemorySizeLessThanThreshold_08005360", 
            "uVar1": "memoryThreshold", 
            "uVar2": "currentMemorySize"
        }, 
        "code": "bool isMemorySizeLessThanThreshold_08005360()\\n{\\n  uint32_t currentMemorySize = *(uint32_t*)(DAT_0800539c + 0x18) + *(uint32_t*)(DAT_0800539c + 0x14);\\n  uint32_t memoryThreshold = DAT_0800539c;\\n  if (memoryThreshold < currentMemorySize) {\\n    currentMemorySize -= 420000;\\n  }\\n  return memoryThreshold < currentMemorySize;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005360", 
        "calling": [
            "FUN_080053a0"
        ], 
        "imported": true, 
        "current_name": "isMemorySizeLessThanThreshold_08005360"
    }, 
    "FUN_08003980": {
        "renaming": {
            "FUN_08003980": "resetData_08003980", 
            "PTR_DAT_0800399c": "dataPointer2", 
            "PTR_DAT_08003998": "dataPointer1"
        }, 
        "code": "void resetData_08003980()\\n{\\n  uint32_t* PTR_DAT_08003998 = PTR_DAT_08003998;\\n  uint32_t* PTR_DAT_0800399c = PTR_DAT_0800399c;\\n  *PTR_DAT_08003998 = 0;\\n  *PTR_DAT_0800399c = 0;\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08003980", 
        "calling": [
            "FUN_08003f34", 
            "FUN_080039a0"
        ], 
        "imported": true, 
        "current_name": "resetData_08003980"
    }, 
    "FUN_08006de0": {
        "renaming": {
            "FUN_08006de0": "is_bit_set_08006de0", 
            "uVar1": "is_set", 
            "param_1": "bit_position", 
            "isBitSet_08006a18": "is_bit_set_at_position"
        }, 
        "code": "int is_bit_set_08006de0(char bit_position) {\\n  int is_set = isBitSet_08006a18(bit_position);\\n  return is_set;\\n}", 
        "called": [
            "FUN_08006a18"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006de0", 
        "calling": [], 
        "imported": true, 
        "current_name": "is_bit_set_08006de0"
    }, 
    "FUN_08007540": {
        "renaming": {
            "initialize_and_set_flags_08007e08": "initialize_flags", 
            "initialize_data_08008190": "initialize_game_data", 
            "FUN_08007540": "initialize_and_run_game_08007540", 
            "run_game_loop_08001ddc": "run_game_loop", 
            "checkSystemCallAvailability_08005984": "check_syscall_availability", 
            "initialize_system_08007436": "initialize_system", 
            "initializeMemory_080079c0": "initialize_memory", 
            "process_data_0800778c": "process_game_data", 
            "initialize_device_080059b4": "initialize_device"
        }, 
        "code": "int initialize_and_run_game_08007540() {\\n  initialize_device();\\n  initialize_system();\\n  process_game_data();\\n  initialize_flags();\\n  initialize_memory();\\n  initialize_game_data();\\n  checkSystemCallAvailability_08005984(0);\\n  run_game_loop();\\n  return 0;\\n}", 
        "called": [
            "FUN_08001ddc", 
            "FUN_08007e08", 
            "FUN_080079c0", 
            "FUN_08008190", 
            "FUN_0800778c", 
            "FUN_08007436", 
            "FUN_080059b4", 
            "FUN_08005984"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007540", 
        "calling": [
            "FUN_080092c4"
        ], 
        "imported": true, 
        "current_name": "initialize_and_run_game_08007540"
    }, 
    "FUN_080052dc": {
        "renaming": {
            "*(uint *)(DAT_08005308 + 0x14)": "currentData", 
            "dataPointer": "dataAddressPointer", 
            "FUN_080052dc": "updateData_080052dc", 
            "param_1": "newData", 
            "DAT_08005308": "dataAddress", 
            "mask": "bitMask"
        }, 
        "code": "void updateData_080052dc(uint32_t newData)\\n{\\n  uint32_t* dataPointer = (uint32_t*)(DAT_08005308 + 0x14);\\n  uint32_t mask = 0xfffff55f;\\n  uint32_t *(uint *)(DAT_08005308 + 0x14) = *dataPointer;\\n  *dataPointer = newData | (*(uint *)(DAT_08005308 + 0x14) & mask);\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080052dc", 
        "calling": [
            "FUN_080053a0"
        ], 
        "imported": true, 
        "current_name": "updateData_080052dc"
    }, 
    "FUN_080064ec": {
        "renaming": {
            "data_value1": "data_value1", 
            "FUN_080064ec": "calculate_data_080064ec", 
            "DAT_08006624": "data2", 
            "data_flag": "data_flag_value", 
            "DAT_08006620": "data1", 
            "leading_zero_count4": "leading_zero_count4", 
            "DAT_0800661c": "data_address", 
            "data2_pointer": "data2_pointer", 
            "leading_zero_count3": "leading_zero_count3", 
            "leading_zero_count2": "leading_zero_count2", 
            "leading_zero_count1": "leading_zero_count1", 
            "data_flag_pointer": "data_flag_pointer", 
            "data1_pointer": "data1_pointer"
        }, 
        "code": "uint32_t calculate_data_080064ec()\\n{\\n  uint32_t* data_flag_pointer = (uint32_t*)(DAT_0800661c + 8);\\n  uint32_t* DAT_08006620_pointer = (uint32_t*)(DAT_0800661c + 4);\\n  uint32_t* DAT_08006624_pointer = (uint32_t*)(DAT_0800661c + 4);\\n  uint32_t data_flag = *data_flag_pointer & 0xc;\\n  if (data_flag == 8) {\\n    uint32_t data_value1 = *DAT_08006620_pointer & 0x3f;\\n    uint32_t leading_zero_count1 = count_leading_zeroes(0x200);\\n    if ((*DAT_08006620_pointer & 0x400000) >> (leading_zero_count1 & 0xff) == 0) {\\n      uint32_t leading_zero_count2 = count_leading_zeroes(0x3fe0000);\\n      uint32_t local_c = ((*DAT_08006620_pointer & 0x7fc0) >> (leading_zero_count2 & 0xff)) * (DAT_08006620 / data_value1);\\n    }\\n    else {\\n      uint32_t leading_zero_count3 = count_leading_zeroes(0x3fe0000);\\n      uint32_t local_c = ((*DAT_08006620_pointer & 0x7fc0) >> (leading_zero_count3 & 0xff)) * (DAT_08006624 / data_value1);\\n    }\\n    uint32_t leading_zero_count4 = count_leading_zeroes(0xc000);\\n    return local_c / ((((*DAT_08006620_pointer & 0x30000) >> (leading_zero_count4 & 0xff)) + 1) * 2);\\n  }\\n  if (data_flag < 9) {\\n    if (data_flag == 0) {\\n      return DAT_08006620;\\n    }\\n    if (data_flag == 4) {\\n      return DAT_08006624;\\n    }\\n  }\\n  return DAT_08006620;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080064ec", 
        "calling": [
            "FUN_08006628"
        ], 
        "imported": true, 
        "current_name": "calculate_data_080064ec"
    }, 
    "FUN_08006ba0": {
        "renaming": {
            "bits_to_shift_amount": "bits_to_shift_amount", 
            "data": "data", 
            "uVar1": "bits_to_shift_amount", 
            "FUN_08006ba0": "calculate_bits_08006ba0", 
            "param_1": "bits_to_keep", 
            "bits_to_shift_keep": "bits_to_shift_keep", 
            "param_2": "bits_to_shift", 
            "param_3": "data"
        }, 
        "code": "uint32_t calculate_bits_08006ba0(uint32_t bits_to_keep, uint32_t bits_to_shift, uint32_t data)\\n{\\n  uint32_t bits_to_shift_keep = bits_to_keep & 7;\\n  uint32_t bits_to_shift_amount = 7 - bits_to_shift_keep;\\n  if (bits_to_shift_amount > 3) {\\n    bits_to_shift_amount = 4;\\n  }\\n  if (bits_to_keep + 4 < 7) {\\n    bits_to_shift_keep = 0;\\n  }\\n  else {\\n    bits_to_shift_keep = bits_to_shift_keep - 3;\\n  }\\n  return data & (1 << (bits_to_shift_keep & 0xff)) - 1U | ((1 << (bits_to_shift_amount & 0xff)) - 1U & bits_to_shift) << (bits_to_shift_keep & 0xff);\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006ba0", 
        "calling": [
            "FUN_08006cf6"
        ], 
        "imported": true, 
        "current_name": "calculate_bits_08006ba0"
    }, 
    "FUN_080003ec": {
        "renaming": {
            "FUN_080003ec": "check_sum_080003ec", 
            "param_1": "data", 
            "local_1c": "remaining_bytes", 
            "local_9": "sum", 
            "local_18": "current_index", 
            "param_2": "length", 
            "param_3": "expected_sum", 
            "cVar1": "current_byte", 
            "local_14": "current_data_pointer"
        }, 
        "code": "bool check_sum_080003ec(char *data, int length, int expected_sum){\n  char current_byte;\n  uint8_t sum = 0;\n  \n  if (*(int *)PTR_DAT_08000470 == 0) {\n    initializeMemory_080002f0();\n  }\n  \n  for (int i = 0; i < length; i++) {\n    current_byte = get_memory_value_08000310(i);\n    sum += current_byte;\n    *data++ = current_byte;\n  }\n  \n  return sum == expected_sum;\n}", 
        "called": [
            "FUN_080002f0", 
            "FUN_08000310"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080003ec", 
        "calling": [
            "FUN_08004d2c", 
            "FUN_08004d7c", 
            "FUN_08004dd2"
        ], 
        "imported": true, 
        "current_name": "check_sum_080003ec"
    }, 
    "FUN_08002896": {
        "renaming": {
            "FUN_08002896": "adjust_char_value_08002896", 
            "param_1": "input_char", 
            "local_9": "adjusted_value"
        }, 
        "code": "char adjust_char_value_08002896(char input_char)\\n{\\n  char adjusted_value = input_char;\\n  if (input_char == '\\0') {\\n    adjusted_value = '\\x12';\\n  }\\n  return adjusted_value - 1;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002896", 
        "calling": [
            "FUN_08002a94"
        ], 
        "imported": true, 
        "current_name": "adjust_char_value_08002896"
    }, 
    "FUN_0800a348": {
        "renaming": {
            "FUN_0800a348": "FUNC_0800a348"
        }, 
        "code": "\nundefined4 FUNC_0800a348(undefined4 param_1,uint param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  longlong lVar8;\n  undefined4 local_30;\n  undefined4 uStack_2c;\n  undefined4 local_28;\n  undefined4 uStack_24;\n  \n  uVar4 = param_2 & 0x7fffffff;\n  if (uVar4 < 0x3e400000) {\n    iVar1 = calculateValue_08008ba0();\n    if (iVar1 == 0) {\n      return 0;\n    }\n    uVar5 = FUNC_08008640(param_1,param_2,param_1,param_2);\n    uVar3 = (undefined4)((ulonglong)uVar5 >> 0x20);\n    uVar2 = (undefined4)uVar5;\n    uVar6 = FUNC_08008640(uVar2,uVar3,DAT_0800a558,DAT_0800a55c);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a560,DAT_0800a564);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a568,DAT_0800a56c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a570,DAT_0800a574);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a578,DAT_0800a57c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a580,DAT_0800a584);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n  }\n  else {\n    uVar5 = FUNC_08008640(param_1,param_2,param_1,param_2);\n    uVar3 = (undefined4)((ulonglong)uVar5 >> 0x20);\n    uVar2 = (undefined4)uVar5;\n    uVar6 = FUNC_08008640(uVar2,uVar3,DAT_0800a558,DAT_0800a55c);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a560,DAT_0800a564);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a568,DAT_0800a56c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a570,DAT_0800a574);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a578,DAT_0800a57c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a580,DAT_0800a584);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    if (DAT_0800a590 < (int)uVar4) {\n      if (DAT_0800a594 < (int)uVar4) {\n        lVar8 = (ulonglong)DAT_0800a598 << 0x20;\n        iVar1 = DAT_0800a59c;\n      }\n      else {\n        lVar8 = FUNC_080082d0(0,DAT_0800a58c,0,uVar4 - 0x200000);\n        iVar1 = uVar4 - 0x200000;\n      }\n      uStack_24 = (undefined4)((ulonglong)lVar8 >> 0x20);\n      local_28 = (undefined4)lVar8;\n      uVar5 = FUNC_08008640(uVar2,uVar3,0,DAT_0800a588);\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),0,iVar1);\n      uVar6 = FUNC_08008640(uVar2,uVar3,(int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n      uVar7 = FUNC_08008640(param_1,param_2,param_3,param_4);\n      uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar7,\n                           (int)((ulonglong)uVar7 >> 0x20));\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                           (int)((ulonglong)uVar6 >> 0x20));\n      uVar2 = FUNC_080082d0(local_28,uStack_24,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n      return uVar2;\n    }\n  }\n  uStack_2c = (undefined4)((ulonglong)uVar6 >> 0x20);\n  local_30 = (undefined4)uVar6;\n  uVar2 = (undefined4)((ulonglong)uVar5 >> 0x20);\n  uVar6 = FUNC_08008640((int)uVar5,uVar2,0,DAT_0800a588);\n  uVar5 = FUNC_08008640((int)uVar5,uVar2,local_30,uStack_2c);\n  uVar7 = FUNC_08008640(param_1,param_2,param_3,param_4);\n  uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar7,\n                       (int)((ulonglong)uVar7 >> 0x20));\n  uVar5 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar5,\n                       (int)((ulonglong)uVar5 >> 0x20));\n  uVar2 = FUNC_080082d0(0,DAT_0800a58c,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  return uVar2;\n}\n\n", 
        "called": [
            "FUN_08008640", 
            "FUN_08008ba0", 
            "FUN_080082d0", 
            "FUN_080082d4"
        ], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x0800a348", 
        "calling": [
            "FUN_080096e8", 
            "FUN_08009410"
        ], 
        "current_name": "FUNC_0800a348"
    }, 
    "FUN_080001ac": {
        "renaming": {
            "FUN_080001ac": "concatenate_080001ac", 
            "DAT_080001bc": "global_variable", 
            "param_1": "first_half", 
            "param_2": "second_half", 
            "PTR_FUN_080001c4": "ptr_function", 
            "PTR_DAT_080001c0": "ptr_data"
        }, 
        "code": "typedef unsigned long long uint64_t;\n\nuint64_t concatenate_080001ac(uint64_t param_1, uint64_t param_2) {\n  if (DAT_080001bc != 0) {\n    param_1 = PTR_FUN_080001c4;\n    param_2 = PTR_DAT_080001c0;\n  }\n  return ((uint64_t)param_2 << 32) | param_1;\n}", 
        "called": [
            "FUN_0800b5b0"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080001ac", 
        "calling": [
            "FUN_0800b3e8"
        ], 
        "imported": true, 
        "current_name": "concatenate_080001ac"
    }, 
    "FUN_08003740": {
        "renaming": {
            "FUN_08003740": "print_binary_representation_08003740", 
            "param_1": "data", 
            "print_binary_representation_080036f0": "print_binary_representation_helper", 
            "PTR_": "PTR_", 
            "DAT_": "DAT_"
        }, 
        "code": "void print_binary_representation_08003740(void* data, int num_bits) {\\n  print_binary_representation_08003740_helper(data, num_bits);\\n  return;\\n}\\n\\nvoid print_binary_representation_08003740_helper(void* data, int num_bits) {\\n  print_binary_representation_08003740_080036f0(data, num_bits);\\n  return;\\n}", 
        "called": [
            "FUN_080036f0"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08003740", 
        "calling": [], 
        "imported": true, 
        "current_name": "print_binary_representation_08003740"
    }, 
    "FUN_08000478": {
        "renaming": {
            "param_1": "data_value_1", 
            "FUN_08000478": "set_data_values_08000478", 
            "param_2": "data_value_2", 
            "param_3": "data_value_3"
        }, 
        "code": "void set_data_values_08000478(undefined data_value_1, undefined data_value_2, undefined data_value_3)\\n{\\n  PTR_DAT_080004a8[0x19] = data_value_1;\\n  PTR_DAT_080004a8[0x1a] = data_value_2;\\n  PTR_DAT_080004a8[0x1b] = data_value_3;\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08000478", 
        "calling": [
            "FUN_080004ac", 
            "FUN_080005b4"
        ], 
        "imported": true, 
        "current_name": "set_data_values_08000478"
    }, 
    "FUN_08006d2e": {
        "renaming": {
            "set_bit_at_index_080069b4": "set_bit_at_index", 
            "param_1": "bit_index", 
            "FUN_08006d2e": "set_bit_08006d2e"
        }, 
        "code": "void set_bit_08006d2e(char bit_index)\\n{\\n  set_bit_08006d2e_at_index_080069b4(bit_index);\\n  return;\\n}", 
        "called": [
            "FUN_080069b4"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006d2e", 
        "calling": [], 
        "imported": true, 
        "current_name": "set_bit_08006d2e"
    }, 
    "FUN_08007e1c": {
        "renaming": {
            "param_1": "byte_to_send", 
            "FUN_08007e1c": "send_byte_to_device_08007e1c"
        }, 
        "code": "void send_byte_to_device_08007e1c(byte byte_to_send)\\n{\\n  // Wait until the device is ready to receive data\\n  while ((*DAT_08007e48 & 0x80) == 0);\\n  // Send the byte to the device\\n  DAT_08007e48[1] = (uint)byte_to_send;\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007e1c", 
        "calling": [
            "FUN_08008250", 
            "FUN_0800826a"
        ], 
        "imported": true, 
        "current_name": "send_byte_to_device_08007e1c"
    }, 
    "FUN_0800adf0": {
        "renaming": {
            "iVar1": "calculationResult", 
            "param_1": "input1", 
            "FUN_0800adf0": "calculateResult_0800adf0", 
            "param_2": "input2", 
            "param_3": "input3", 
            "param_4": "input4", 
            "param_5": "flag", 
            "uVar3": "result2", 
            "uVar2": "intermediateResult1", 
            "uVar5": "intermediateResult2", 
            "uVar4": "result1", 
            "uVar7": "intermediateResult3", 
            "uVar6": "result4", 
            "uVar8": "intermediateResult4"
        }, 
        "code": "undefined4 calculateResult_0800adf0(uint32_t input1, uint32_t input2, uint32_t input3, uint32_t input4, int flag)\\n{\\n  int calculationResult;\\n  undefined8 intermediateResult1;\\n  undefined8 intermediateResult2;\\n  undefined8 intermediateResult3;\\n  undefined8 intermediateResult4;\\n  undefined8 intermediateResult5;\\n  undefined8 intermediateResult6;\\n  undefined8 intermediateResult7;\\n  undefined8 intermediateResult8;\\n  if (((input2 & 0x7fffffff) < 0x3e400000) && (calculationResult = calculateValue(), calculationResult == 0)) {\\n    return input1;\\n  }\\n  intermediateResult1 = skippedFunction1(input1, input2, input1);\\n  uint32_t result1 = (uint32_t)(intermediateResult1 >> 0x20);\\n  uint32_t result2 = (uint32_t)intermediateResult1;\\n  intermediateResult2 = skippedFunction1(input1, input2, result2, result1);\\n  uint32_t result3 = (uint32_t)(intermediateResult2 >> 0x20);\\n  uint32_t result4 = (uint32_t)intermediateResult2;\\n  intermediateResult3 = skippedFunction2(result2, result1, PTR_DAT_0800af40, PTR_DAT_0800af44);\\n  intermediateResult3 = skippedFunction3((int)intermediateResult3, (int)(intermediateResult3 >> 0x20), PTR_DAT_0800af48, PTR_DAT_0800af4c);\\n  intermediateResult3 = skippedFunction1((int)intermediateResult3, (int)(intermediateResult3 >> 0x20), result2, result1);\\n  intermediateResult3 = skippedFunction4((int)intermediateResult3, (int)(intermediateResult3 >> 0x20), PTR_DAT_0800af50, PTR_DAT_0800af54);\\n  intermediateResult3 = skippedFunction1((int)intermediateResult3, (int)(intermediateResult3 >> 0x20), result2, result1);\\n  intermediateResult3 = skippedFunction3((int)intermediateResult3, (int)(intermediateResult3 >> 0x20), PTR_DAT_0800af58, PTR_DAT_0800af5c);\\n  intermediateResult3 = skippedFunction1((int)intermediateResult3, (int)(intermediateResult3 >> 0x20), result2, result1);\\n  intermediateResult3 = skippedFunction4((int)intermediateResult3, (int)(intermediateResult3 >> 0x20), PTR_DAT_0800af60, PTR_DAT_0800af64);\\n  uint32_t result5 = (uint32_t)(intermediateResult3 >> 0x20);\\n  if (flag != 0) {\\n    intermediateResult4 = skippedFunction1(input3, input4, 0, PTR_DAT_0800af70);\\n    intermediateResult5 = skippedFunction1(result2, result1, (int)intermediateResult3, result5);\\n    intermediateResult5 = skippedFunction3((int)intermediateResult4, (int)(intermediateResult4 >> 0x20), (int)intermediateResult5,\\n                         (int)(intermediateResult5 >> 0x20));\\n    intermediateResult5 = skippedFunction1((int)intermediateResult5, (int)(intermediateResult5 >> 0x20), result2, result1);\\n    intermediateResult5 = skippedFunction3((int)intermediateResult5, (int)(intermediateResult5 >> 0x20), input3, input4);\\n    intermediateResult4 = skippedFunction1(result2, result1, PTR_DAT_0800af68, PTR_DAT_0800af6c);\\n    intermediateResult5 = skippedFunction4((int)intermediateResult5, (int)(intermediateResult5 >> 0x20), (int)intermediateResult4,\\n                         (int)(intermediateResult4 >> 0x20));\\n    uint32_t result6 = skippedFunction3(input1, input2, (int)intermediateResult5, (int)(intermediateResult5 >> 0x20));\\n    return result6;\\n  }\\n  intermediateResult3 = skippedFunction1(result2, result1, (int)intermediateResult3, result5);\\n  intermediateResult3 = skippedFunction3((int)intermediateResult3, (int)(intermediateResult3 >> 0x20), PTR_DAT_0800af68, PTR_DAT_0800af6c);\\n  intermediateResult3 = skippedFunction1((int)intermediateResult3, (int)(intermediateResult3 >> 0x20), result4, result3);\\n  uint32_t result7 = skippedFunction4((int)intermediateResult3, (int)(intermediateResult3 >> 0x20), input1, input2);\\n  return result7;\\n}\\n", 
        "called": [
            "FUN_08008640", 
            "FUN_08008ba0", 
            "FUN_080082d0", 
            "FUN_080082d4"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800adf0", 
        "calling": [
            "FUN_080096e8", 
            "FUN_08009410"
        ], 
        "imported": true, 
        "current_name": "calculateResult_0800adf0"
    }, 
    "FUN_08003a74": {
        "renaming": {
            "display_status_message_080041a0": "display_status_message", 
            "updateDeviceFlagsIfFlagTwoIsSet_0800585c": "update_device_flags_if_flag_two_is_set", 
            "printCurrentAndWorkPosition_08004940": "print_current_and_work_position", 
            "FUN_08003a74": "display_alarm_if_needed_08003a74", 
            "displayAlarmMessage_08004148": "display_alarm_message", 
            "PTR_DAT_08003b94": "device_data", 
            "updateData_0800587c": "update_data", 
            "update_or_reset_data_080058a0": "update_or_reset_data", 
            "PTR_DAT_08003b90": "alarm_data"
        }, 
        "code": "void display_alarm_if_needed_08003a74() {\\n  byte alarm_flags = PTR_DAT_08003b90[2];\\n  if (alarm_flags != 0) {\\n    if ((alarm_flags & 0x60) != 0) {\\n      PTR_DAT_08003b90[1] = 6;\\n      if ((alarm_flags & 0x40) == 0) {\\n        displayAlarmMessage_08004148(0xfffffffe);\\n      }\\n      else {\\n        displayAlarmMessage_08004148(0xffffffff);\\n        display_status_message_080041a0(1);\\n        PTR_DAT_08003b90[2] &= 0xef;\\n        while ((PTR_DAT_08003b90[2] & 0x10) == 0);\\n      }\\n      PTR_DAT_08003b90[2] &= 0x9f;\\n    }\\n    if ((alarm_flags & 0x10) == 0) {\\n      if ((alarm_flags & 1) != 0) {\\n        printCurrentAndWorkPosition_08004940();\\n        PTR_DAT_08003b90[2] &= 0xfe;\\n      }\\n      if ((alarm_flags & 8) != 0) {\\n        updateData_0800587c();\\n        PTR_DAT_08003b90[2] &= 0xf7;\\n      }\\n      if ((alarm_flags & 4) != 0) {\\n        update_or_reset_data_080058a0();\\n        PTR_DAT_08003b90[2] &= 0xfb;\\n      }\\n      if ((alarm_flags & 2) != 0) {\\n        updateDeviceFlagsIfFlagTwoIsSet_0800585c();\\n        if ((PTR_DAT_08003b94[0x28] & 2) != 0) {\\n          PTR_DAT_08003b90[0x10] = 1;\\n        }\\n        PTR_DAT_08003b90[2] &= 0xfd;\\n      }\\n    }\\n    else {\\n      *PTR_DAT_08003b90 = 1;\\n    }\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08004940", 
            "FUN_0800587c", 
            "FUN_080041a0", 
            "FUN_08004148", 
            "FUN_0800585c", 
            "FUN_080058a0"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08003a74", 
        "calling": [
            "FUN_08003f34", 
            "FUN_08002408", 
            "FUN_08001ddc", 
            "FUN_08001e98", 
            "FUN_08002fd4", 
            "FUN_080024c4"
        ], 
        "imported": true, 
        "current_name": "display_alarm_if_needed_08003a74"
    }, 
    "FUN_08005cec": {
        "renaming": {
            "FUN_08005cec": "FUNC_08005cec"
        }, 
        "code": "\nundefined4 FUNC_08005cec(uint *param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  if ((*param_1 & 1) != 0) {\n    if (((DAT_08005fac[2] & 0xc) == 4) ||\n       (((DAT_08005fac[2] & 0xc) == 8 && ((DAT_08005fac[1] & 0x400000) == 0x400000)))) {\n      if (((*DAT_08005fac & 0x20000) != 0) && (param_1[1] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      *DAT_08005fb0 = 0;\n      iVar1 = getValueFromPointer_08005a84();\n      while ((*DAT_08005fac & 0x20000) != 0) {\n        uVar2 = getValueFromPointer_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n      *DAT_08005fb0 = (char)param_1[1];\n      if (param_1[1] == 1) {\n        iVar1 = getValueFromPointer_08005a84();\n        while ((*DAT_08005fac & 0x20000) == 0) {\n          uVar2 = getValueFromPointer_08005a84();\n          if (iVar1 + 5000U <= uVar2) {\n            return 3;\n          }\n        }\n      }\n      else {\n        iVar1 = getValueFromPointer_08005a84();\n        while ((*DAT_08005fac & 0x20000) != 0) {\n          uVar2 = getValueFromPointer_08005a84();\n          if (iVar1 + 5000U <= uVar2) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*param_1 & 2) != 0) {\n    if (((DAT_08005fac[2] & 0xc) == 0) ||\n       (((DAT_08005fac[2] & 0xc) == 8 && ((DAT_08005fac[1] & 0x400000) == 0)))) {\n      if (((*DAT_08005fac & 2) != 0) && (param_1[3] != 1)) {\n        return 1;\n      }\n    }\n    else if (param_1[3] == 0) {\n      *DAT_08005fb4 = 0;\n      iVar1 = getValueFromPointer_08005a84();\n      while ((*DAT_08005fac & 2) != 0) {\n        uVar2 = getValueFromPointer_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08005fb4 = 1;\n      iVar1 = getValueFromPointer_08005a84();\n      while ((*DAT_08005fac & 2) == 0) {\n        uVar2 = getValueFromPointer_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n      uVar2 = count_leading_zeroes(0x1f000000);\n      *DAT_08005fac = param_1[4] << (uVar2 & 0xff) | *DAT_08005fac & 0xffffff07;\n    }\n  }\n  if ((*param_1 & 8) != 0) {\n    if (param_1[5] == 0) {\n      *DAT_08005fb8 = 0;\n      iVar1 = getValueFromPointer_08005a84();\n      while ((DAT_08005fac[0x1d] & 2) != 0) {\n        uVar2 = getValueFromPointer_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08005fb8 = 1;\n      iVar1 = getValueFromPointer_08005a84();\n      while ((DAT_08005fac[0x1d] & 2) == 0) {\n        uVar2 = getValueFromPointer_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*param_1 & 4) != 0) {\n    DAT_08005fac[0x10] = DAT_08005fac[0x10] | 0x10000000;\n    *DAT_08005fbc = *DAT_08005fbc | 0x100;\n    iVar1 = getValueFromPointer_08005a84();\n    while ((*DAT_08005fbc & 0x100) == 0) {\n      uVar2 = getValueFromPointer_08005a84();\n      if (iVar1 + 100U <= uVar2) {\n        return 3;\n      }\n    }\n    *DAT_08005fc0 = 0;\n    iVar1 = getValueFromPointer_08005a84();\n    while ((DAT_08006180[0x1c] & 2) != 0) {\n      uVar2 = getValueFromPointer_08005a84();\n      if (iVar1 + 5000U <= uVar2) {\n        return 3;\n      }\n    }\n    *DAT_08006184 = (char)param_1[2];\n    if (param_1[2] == 1) {\n      iVar1 = getValueFromPointer_08005a84();\n      while ((DAT_08006180[0x1c] & 2) == 0) {\n        uVar2 = getValueFromPointer_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iVar1 = getValueFromPointer_08005a84();\n      while ((DAT_08006180[0x1c] & 2) != 0) {\n        uVar2 = getValueFromPointer_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (param_1[6] != 0) {\n    if ((DAT_08006180[2] & 0xc) == 8) {\n      return 1;\n    }\n    if (param_1[6] == 2) {\n      *DAT_08006188 = 0;\n      iVar1 = getValueFromPointer_08005a84();\n      while ((*DAT_08006180 & 0x2000000) != 0) {\n        uVar2 = getValueFromPointer_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n      uVar2 = count_leading_zeroes(0x3fe0000);\n      uVar3 = count_leading_zeroes(0xc000);\n      uVar4 = count_leading_zeroes(0xf0);\n      DAT_08006180[1] =\n           param_1[0xb] << (uVar4 & 0xff) |\n           param_1[8] | param_1[9] << (uVar2 & 0xff) | (param_1[10] >> 1) - 1 << (uVar3 & 0xff) |\n           param_1[7] | 0x20000000;\n      *DAT_08006188 = 1;\n      iVar1 = getValueFromPointer_08005a84();\n      while ((*DAT_08006180 & 0x2000000) == 0) {\n        uVar2 = getValueFromPointer_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08006188 = 0;\n      iVar1 = getValueFromPointer_08005a84();\n      while ((*DAT_08006180 & 0x2000000) != 0) {\n        uVar2 = getValueFromPointer_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n", 
        "called": [
            "FUN_08005a84"
        ], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x08005cec", 
        "calling": [
            "FUN_08007436"
        ], 
        "current_name": "FUNC_08005cec"
    }, 
    "FUN_08006b00": {
        "renaming": {
            "param_1": "data_index", 
            "FUN_08006b00": "set_data_value_08006b00", 
            "param_2": "data_value"
        }, 
        "code": "void set_data_value_08006b00(byte data_index, uint data_value)\\n{\\n  if ((char)data_index < '\\0') {\\n    // Set the data value at the specified index in the first array\\n    *(char *)((data_index & 0xf) + DAT_08006b4c + 0x14) = (char)((data_value & 0xff) << 4);\\n  }\\n  else {\\n    // Set the data value at the specified index in the second array\\n    *(char *)((char)data_index + DAT_08006b50 + 0x300) = (char)((data_value & 0xff) << 4);\\n  }\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006b00", 
        "calling": [
            "FUN_08006c9c", 
            "FUN_08006cf6"
        ], 
        "imported": true, 
        "current_name": "set_data_value_08006b00"
    }, 
    "FUN_0800b4d0": {
        "renaming": {
            "DAT_0800b4dc": "isParamListEmpty", 
            "FUN_0800b4d0": "checkAndAddParamToLisIfNotNull_0800b4d0", 
            "PTR_LAB_0800b4f0_1_0800b4e0": "firstLabelPtr", 
            "add_param_to_list_0800b524": "addParamToList"
        }, 
        "code": "void checkAndAddParamToLisIfNotNull_0800b4d0(void)\\n{\\n  if (DAT_0800b4dc == 0) {\\n    addParamToList(0, PTR_LAB_0800b4f0_1_0800b4e0, 0);\\n    return;\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_0800b524"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800b4d0", 
        "calling": [
            "FUN_0800b3e8"
        ], 
        "imported": true, 
        "current_name": "checkAndAddParamToLisIfNotNull_0800b4d0"
    }, 
    "FUN_08007f54": {
        "renaming": {
            "constant8": "0x1", 
            "constant9": "0x4", 
            "iVar2": "temp1", 
            "constant4": "0x10", 
            "iVar3": "temp2", 
            "constant5": "0xc", 
            "constant6": "0x8000", 
            "constant7": "0x2", 
            "shift": "shift", 
            "param_1": "input1", 
            "FUN_08007f54": "calculate_shifted_data_08007f54", 
            "constant1": "0x19", 
            "constant2": "0x32", 
            "uVar4": "temp3", 
            "constant3": "-100", 
            "mask": "mask", 
            "PTR_DAT_08008188": "PTR_DAT_2", 
            "lVar1": "result1", 
            "PTR_DAT_08008184": "PTR_DAT_1", 
            "uint": "uint", 
            "ptr2": "ptr2", 
            "param_2": "input2", 
            "ptr1": "ptr1", 
            "constant10": "0x2", 
            "PTR_DAT_0800818c": "PTR_DAT"
        }, 
        "code": "void calculate_shifted_data_08007f54(int input1, int input2)\\n{\\n  longlong result1;\\n  int temp1;\\n  int temp2;\\n  undefined8 temp3;\\n  uint mask = 0xf;\\n  uint shift = 0x25;\\n  uint constant1 = 0x19;\\n  uint constant2 = 0x32;\\n  uint constant3 = -100;\\n  uint constant4 = 0x10;\\n  uint constant5 = 0xc;\\n  uint constant6 = 0x8000;\\n  uint constant7 = 0x2;\\n  uint constant8 = 0x1;\\n  uint constant9 = 0x4;\\n  uint constant10 = 0x2;\\n  \\n  uint* ptr1 = (uint *)(input1 + constant5);\\n  uint* ptr2 = (uint *)(input1 + 8);\\n  \\n  if ((*ptr1 & constant6) == 0) {\\n    if ((input1 != PTR_DAT_0800818c_08008184) && (input1 != PTR_DAT_0800818c_08008188)) {\\n      temp3 = calculate_shifted_data_08007f54_08006680();\\n      result1 = (ulonglong)PTR_DAT_0800818c_0800818c * ((ulonglong)(uint)((int)temp3 * constant1) / (ulonglong)(uint)(input2 << constant10));\\n      temp1 = calculate_shifted_data_08007f54_08006680((int)temp3,(int)((ulonglong)temp3 >> shift),(int)result1);\\n      temp2 = calculate_shifted_data_08007f54_08006680();\\n      *ptr2 = ((uint)result1 >> shift) << constant4 | (uint)PTR_DAT_0800818c_0800818c * (ulonglong)(((uint)(temp1 * constant1) / (uint)(input2 << constant10) + (uint)((ulonglong)PTR_DAT_0800818c_0800818c * ((ulonglong)(uint)(temp2 * constant1) / (ulonglong)(uint)(input2 << constant10)) >> shift) * constant3) * constant4 + constant2) >> shift & mask;\\n      return;\\n    }\\n    temp3 = calculate_shifted_data_08007f54_080066cc();\\n    result1 = (ulonglong)PTR_DAT_0800818c_0800818c * ((ulonglong)(uint)((int)temp3 * constant1) / (ulonglong)(uint)(input2 << constant10));\\n    temp1 = calculate_shifted_data_08007f54_080066cc((int)temp3,(int)((ulonglong)temp3 >> shift),(int)result1);\\n    temp2 = calculate_shifted_data_08007f54_080066cc();\\n    *ptr2 = ((uint)result1 >> shift) << constant4 | (uint)PTR_DAT_0800818c_0800818c * (ulonglong)(((uint)(temp1 * constant1) / (uint)(input2 << constant10) + (uint)((ulonglong)PTR_DAT_0800818c_0800818c * ((ulonglong)(uint)(temp2 * constant1) / (ulonglong)(uint)(input2 << constant10)) >> shift) * constant3) * constant4 + constant2) >> shift & mask;\\n  }\\n  else {\\n    if ((input1 != PTR_DAT_0800818c_08008184) && (input1 != PTR_DAT_0800818c_08008188)) {\\n      temp3 = calculate_shifted_data_08007f54_08006680();\\n      result1 = (ulonglong)PTR_DAT_0800818c_0800818c * ((ulonglong)(uint)((int)temp3 * constant1) / (ulonglong)(uint)(input2 << constant7));\\n      temp1 = calculate_shifted_data_08007f54_08006680((int)temp3,(int)((ulonglong)temp3 >> shift),(int)result1);\\n      temp2 = calculate_shifted_data_08007f54_08006680();\\n      *ptr2 = ((uint)result1 >> shift) << constant4 | (uint)PTR_DAT_0800818c_0800818c * (ulonglong)(((uint)(temp1 * constant1) / (uint)(input2 << constant7) + (uint)((ulonglong)PTR_DAT_0800818c_0800818c * ((ulonglong)(uint)(temp2 * constant1) / (ulonglong)(uint)(input2 << constant7)) >> shift) * constant3) * constant4 + constant2) >> shift & mask;\\n      return;\\n    }\\n    temp3 = calculate_shifted_data_08007f54_080066cc();\\n    result1 = (ulonglong)PTR_DAT_0800818c_0800818c * ((ulonglong)(uint)((int)temp3 * constant1) / (ulonglong)(uint)(input2 << constant7));\\n    temp1 = calculate_shifted_data_08007f54_080066cc((int)temp3,(int)((ulonglong)temp3 >> shift),(int)result1);\\n    temp2 = calculate_shifted_data_08007f54_080066cc();\\n    *ptr2 = ((uint)result1 >> shift) << constant4 | (uint)PTR_DAT_0800818c_0800818c * (ulonglong)(((uint)(temp1 * constant1) / (uint)(input2 << constant7) + (uint)((ulonglong)PTR_DAT_0800818c_0800818c * ((ulonglong)(uint)(temp2 * constant1) / (ulonglong)(uint)(input2 << constant7)) >> shift) * constant3) * constant4 + constant2) >> shift & mask;\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08006680", 
            "FUN_080066cc"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007f54", 
        "calling": [
            "FUN_08008190"
        ], 
        "imported": true, 
        "current_name": "calculate_shifted_data_08007f54"
    }, 
    "FUN_08003b98": {
        "renaming": {
            "FUN_08003b98": "FUNC_08003b98"
        }, 
        "code": "\nuint FUNC_08003b98(char *param_1)\n\n{\n  byte bVar1;\n  int iVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  undefined4 local_14;\n  undefined4 local_10;\n  byte local_a;\n  byte local_9;\n  \n  if (*param_1 != '$') {\n    uVar4 = FUNC_080005b4(param_1);\n    return uVar4;\n  }\n  local_a = 1;\n  local_9 = '\\0';\n  bVar1 = param_1[1];\n  if (bVar1 == 0) {\n    printGrblSettings_0800423c();\n    return 0;\n  }\n  if ((0x58 < bVar1) || (bVar1 < 0x23)) goto switchD_08003bdc_caseD_25;\n  switch(bVar1) {\n  case 0x23:\n    local_a = 2;\n    if (param_1[2] != '\\0') {\n      return 3;\n    }\n    verifyAndPrintData_080044e8();\n    break;\n  case 0x24:\n    local_a = 2;\n    if (param_1[2] != '\\0') {\n      return 3;\n    }\n    FUNC_08004250();\n    break;\n  case 0x43:\n    local_a = 2;\n    if (param_1[2] != '\\0') {\n      return 3;\n    }\n    if (PTR_DAT_08003f2c[1] == '\\a') {\n      enable_task_execution_if_not_already_enabled_080025e8();\n      display_status_message_080041a0(5);\n    }\n    else {\n      if (PTR_DAT_08003f2c[1] != '\\0') {\n        return 0xb;\n      }\n      PTR_DAT_08003f2c[1] = 7;\n      display_status_message_080041a0(4);\n    }\n    break;\n  case 0x47:\n    local_a = 2;\n    if (param_1[2] != '\\0') {\n      return 3;\n    }\n    print_device_info_080046d0();\n    break;\n  case 0x48:\n    if ((PTR_DAT_08003f30[0x28] & 0x10) == 0) {\n      return 7;\n    }\n    if ((PTR_DAT_08003f2c[1] != '\\0') && (PTR_DAT_08003f2c[1] != '\\x06')) {\n      return 0xb;\n    }\n    initialize_device_080024c4();\n    if (*PTR_DAT_08003f2c == '\\0') {\n      verify_and_send_messages_080039bc();\n    }\n    break;\n  case 0x4e:\n    local_a = 2;\n    if (param_1[2] == '\\0') {\n      for (local_9 = 0; local_9 < 2; local_9 = local_9 + 1) {\n        iVar2 = verify_checksum_08004d2c(local_9,param_1);\n        if (iVar2 == 0) {\n          send_error_message_08004030(10);\n        }\n        else {\n          print_device_information_08004900(local_9,param_1);\n        }\n      }\n      return 0;\n    }\n    local_9 = '\\x01';\n  default:\nswitchD_08003bdc_caseD_25:\n    iVar2 = parse_integer_from_string_08002638(param_1,&local_a,&local_10);\n    if (iVar2 == 0) {\n      return 1;\n    }\n    bVar1 = local_a + 1;\n    if (param_1[local_a] != '=') {\n      return 3;\n    }\n    local_a = bVar1;\n    if (local_9 == '\\0') {\n      iVar2 = parse_integer_from_string_08002638(param_1,&local_a,&local_14);\n      if (iVar2 == 0) {\n        return 1;\n      }\n      if (param_1[local_a] == '\\0') {\n        uVar3 = convertFloatToInteger_08009278(local_10);\n        uVar4 = FUNC_08004e30(uVar3,local_14);\n        return uVar4;\n      }\n      return 3;\n    }\n    do {\n      param_1[(uint)local_a - (uint)bVar1] = param_1[local_a];\n      uVar4 = (uint)local_a;\n      local_a = local_a + 1;\n    } while (param_1[uVar4] != '\\0');\n    local_9 = bVar1;\n    local_9 = FUNC_080005b4(param_1);\n    if (local_9 != 0) {\n      return (uint)local_9;\n    }\n    uVar5 = FUNC_08008590(local_10);\n    uVar5 = decode_float_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_9 = calculate_value_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    set_memory_checksum_08004bc0(local_9,param_1);\n    break;\n  case 0x58:\n    local_a = 2;\n    if (param_1[2] != '\\0') {\n      return 3;\n    }\n    if (PTR_DAT_08003f2c[1] == '\\x06') {\n      display_status_message_080041a0(3);\n      PTR_DAT_08003f2c[1] = 0;\n    }\n  }\n  return 0;\n}\n\n", 
        "called": [
            "FUN_08004900", 
            "FUN_08004250", 
            "FUN_08004bc0", 
            "FUN_080046d0", 
            "FUN_08009798", 
            "FUN_08004d2c", 
            "FUN_080044e8", 
            "FUN_080024c4", 
            "FUN_080039bc", 
            "FUN_08009278", 
            "FUN_08008bf0", 
            "FUN_080025e8", 
            "FUN_08002638", 
            "FUN_080005b4", 
            "FUN_080041a0", 
            "FUN_08008590", 
            "FUN_08004030", 
            "FUN_08004e30", 
            "FUN_0800423c"
        ], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x08003b98", 
        "calling": [
            "FUN_08003f34"
        ], 
        "current_name": "FUNC_08003b98"
    }, 
    "FUN_080024c4": {
        "renaming": {
            "PTR_DAT_080025e4": "ptr_dat_4", 
            "uVar1": "flag_one", 
            "PTR_DAT_080025d8": "ptr_dat_1", 
            "PTR_DAT_080025dc": "ptr_dat_2", 
            "uVar3": "flag_three", 
            "PTR_DAT_080025e0": "ptr_dat_3", 
            "FUN_080024c4": "initialize_device_080024c4", 
            "uVar2": "flag_two", 
            "local_13": "is_alarm_needed", 
            "local_12": "is_light_on", 
            "local_11": "is_fan_on"
        }, 
        "code": "void initialize_device_080024c4()\\n{\\n  int flag_one;\\n  int flag_two;\\n  int flag_three;\\n  char is_alarm_needed;\\n  char is_fan_on;\\n  char is_light_on;\\n  PTR_DAT_080025d8[1] = 5;\\n  *(int *)PTR_DAT_080025dc = 0;\\n  update_device_flags_and_check_status();\\n  display_alarm_if_needed();\\n  if (*PTR_DAT_080025d8 == 0)\\n  {\\n    fill_memory_with_byte(PTR_DAT_080025e0, 0, 0xc);\\n    set_and_store_twos_complement();\\n    PTR_DAT_080025d8[1] = 0;\\n    if ((*(ushort *)(PTR_DAT_080025e4 + 0x2a) & 0x20) == 0)\\n    {\\n      is_fan_on = -1;\\n    }\\n    else\\n    {\\n      is_fan_on = 1;\\n    }\\n    if ((*(ushort *)(PTR_DAT_080025e4 + 0x2a) & 0x80) == 0)\\n    {\\n      is_light_on = -1;\\n    }\\n    else\\n    {\\n      is_light_on = 1;\\n    }\\n    if ((*(ushort *)(PTR_DAT_080025e4 + 0x2a) & 0x200) == 0)\\n    {\\n      is_alarm_needed = -1;\\n    }\\n    else\\n    {\\n      is_alarm_needed = 1;\\n    }\\n    flag_one = calculate_twos_complement(is_fan_on);\\n    flag_one = FUNC_08008eec(flag_one,*(int *)(PTR_DAT_080025e4 + 0x38));\\n    flag_two = calculate_twos_complement(is_light_on);\\n    flag_two = FUNC_08008eec(flag_two,*(int *)(PTR_DAT_080025e4 + 0x38));\\n    flag_three = calculate_twos_complement(is_alarm_needed);\\n    flag_three = FUNC_08008eec(flag_three,*(int *)(PTR_DAT_080025e4 + 0x38));\\n    check_device_status_and_update_if_necessary(flag_one, flag_two, flag_three, *(int *)(PTR_DAT_080025e4 + 0x30), 0);\\n    update_device_flags_if_flag_two_is_set();\\n    display_alarm_until_condition_met();\\n    set_and_store_twos_complement();\\n    if ((PTR_DAT_080025e4[0x28] & 8) != 0)\\n    {\\n      *(int *)PTR_DAT_080025dc = 1;\\n    }\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_0800283a", 
            "FUN_08003a74", 
            "FUN_08008e44", 
            "FUN_08001d4c", 
            "FUN_0800585c", 
            "FUN_08001e98", 
            "FUN_08002fd4", 
            "FUN_0800b430", 
            "FUN_08008eec"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080024c4", 
        "calling": [
            "FUN_08003b98"
        ], 
        "imported": true, 
        "current_name": "initialize_device_080024c4"
    }, 
    "FUN_08002f40": {
        "renaming": {
            "uVar1": "newChar", 
            "*PTR_DAT_08002f70": "*targetChar", 
            "incrementChar_08002870": "incrementChar", 
            "FUN_08002f40": "updateCharIfDifferent_08002f40", 
            "*PTR_DAT_08002f6c": "*currentChar"
        }, 
        "code": "void updateCharIfDifferent_08002f40(void)\\n{\\n  undefined newChar;\\n  if (*PTR_DAT_08002f6c != *PTR_DAT_08002f70) {\\n    newChar = incrementChar_08002870(*PTR_DAT_08002f70);\\n    *PTR_DAT_08002f70 = newChar;\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08002870"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002f40", 
        "calling": [
            "FUN_080053a0"
        ], 
        "imported": true, 
        "current_name": "updateCharIfDifferent_08002f40"
    }, 
    "FUN_08009054": {
        "renaming": {
            "FUN_08009054": "FUNC_08009054"
        }, 
        "code": "\nuint FUNC_08009054(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_0800904a:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08009000:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_0800906c;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_0800906c:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n", 
        "called": [], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x08009054", 
        "calling": [
            "FUN_08001994", 
            "FUN_08003004", 
            "FUN_08004250", 
            "FUN_08004940", 
            "FUN_08002908", 
            "FUN_080028bc", 
            "FUN_08002e08", 
            "FUN_08003618", 
            "FUN_080004fc", 
            "FUN_08001f00"
        ], 
        "current_name": "FUNC_08009054"
    }, 
    "FUN_080025e8": {
        "renaming": {
            "clear_globals_and_check_status_080057e4": "clear_globals_and_check_status", 
            "do_nothing_and_return_08005250": "do_nothing_and_return", 
            "PTR_DAT_08002634": "task_flags", 
            "perform_tasks_08000210": "perform_tasks", 
            "FUN_080025e8": "enable_task_execution_if_not_already_enabled_080025e8"
        }, 
        "code": "void enable_task_execution_if_not_already_enabled_080025e8(void)\\n{\\n    if ((PTR_DAT_08002634[2] & 0x10) == 0) {\\n        PTR_DAT_08002634[2] |= 0x10;\\n        do_nothing_and_return();\\n        perform_tasks();\\n        if ((byte)PTR_DAT_08002634[1] - 3 < 3) {\\n            PTR_DAT_08002634[2] |= 0x20;\\n            clear_globals_and_check_status();\\n        }\\n    }\\n    return;\\n}", 
        "called": [
            "FUN_08005250", 
            "FUN_08000210", 
            "FUN_080057e4"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080025e8", 
        "calling": [
            "FUN_080005b4", 
            "FUN_0800195c", 
            "FUN_08003a18", 
            "FUN_08003b98", 
            "FUN_08005900"
        ], 
        "imported": true, 
        "current_name": "enable_task_execution_if_not_already_enabled_080025e8"
    }, 
    "FUN_080001c8": {
        "renaming": {
            "FUN_080001c8": "do_nothing_080001c8"
        }, 
        "code": "void do_nothing_080001c8()\\n{\\n  // This function does nothing\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080001c8", 
        "calling": [
            "FUN_08000220"
        ], 
        "imported": true, 
        "current_name": "do_nothing_080001c8"
    }, 
    "FUN_08005250": {
        "renaming": {
            "FUN_08005250": "do_nothing_and_return_08005250", 
            "do_nothing_08005214": "do_nothing"
        }, 
        "code": "void do_nothing_and_return_08005250(void)\\n{\\n  do_nothing();\\n  return;\\n}", 
        "called": [
            "FUN_08005214"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005250", 
        "calling": [
            "FUN_080025e8", 
            "FUN_08005238", 
            "FUN_0800525c"
        ], 
        "imported": true, 
        "current_name": "do_nothing_and_return_08005250"
    }, 
    "FUN_08007430": {
        "renaming": {
            "FUN_08007430": "wait_indefinitely_08007430"
        }, 
        "code": "void wait_indefinitely_08007430()\\n{\\n  // This function waits indefinitely by doing nothing in an infinite loop\\n  while(true) {}\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007430", 
        "calling": [
            "FUN_08007436"
        ], 
        "imported": true, 
        "current_name": "wait_indefinitely_08007430"
    }, 
    "FUN_08008640": {
        "renaming": {
            "FUN_08008640": "FUNC_08008640"
        }, 
        "code": "\nulonglong FUNC_08008640(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = calculate_result_0800881c();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n", 
        "called": [
            "FUN_0800881c"
        ], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x08008640", 
        "calling": [
            "FUN_08003004", 
            "FUN_080046d0", 
            "FUN_08004940", 
            "FUN_0800b2e8", 
            "FUN_0800a1bc", 
            "FUN_08009b24", 
            "FUN_080044e8", 
            "FUN_08009d78", 
            "FUN_08001994", 
            "FUN_0800adf0", 
            "FUN_0800af78", 
            "FUN_08002638", 
            "FUN_0800a5a0", 
            "FUN_0800056c", 
            "FUN_0800a348", 
            "FUN_08002c18", 
            "FUN_08001f00"
        ], 
        "current_name": "FUNC_08008640"
    }, 
    "FUN_08007436": {
        "renaming": {
            "DAT_080074c0": "PTR_DAT_080074c0", 
            "local_c": "param_5", 
            "DAT_080074c4": "PTR_DAT_080074c4", 
            "validate_param_0800618c": "validate_parameters", 
            "local_4c": "flag_1", 
            "FUN_08007436": "initialize_system_08007436", 
            "local_1c": "param_1", 
            "local_2c": "flag_5", 
            "local_18": "param_2", 
            "local_28": "flag_6", 
            "local_48": "flag_2", 
            "local_10": "param_4", 
            "FUNC_08005cec": "check_flag_1", 
            "local_20": "flag_8", 
            "local_30": "flag_4", 
            "local_14": "param_3", 
            "local_24": "flag_7", 
            "local_34": "flag_3"
        }, 
        "code": "void initialize_system_08007436(void)\\n{\\n  int status;\\n  uint32_t flag_1 = 1;\\n  uint32_t flag_2 = 1;\\n  uint32_t flag_3 = 2;\\n  uint32_t flag_4 = 0x400000;\\n  uint32_t flag_5 = 8;\\n  uint32_t flag_6 = 0x150;\\n  uint32_t flag_7 = 2;\\n  uint32_t flag_8 = 7;\\n  status = check_flag_1(&flag_1);\\n  if (status != 0) {\\n    wait_indefinitely();\\n  }\\n  uint32_t param_1 = 0xf;\\n  uint32_t param_2 = 2;\\n  uint32_t param_3 = 0;\\n  uint32_t param_4 = 0x1400;\\n  uint32_t param_5 = 0x1000;\\n  status = validate_parameters(&param_1, 5);\\n  if (status != 0) {\\n    wait_indefinitely();\\n  }\\n  *(uint *)(DAT_080074c0 + 0x40) = *(uint *)(DAT_080074c0 + 0x40) | 0x10000000;\\n  *DAT_080074c4 = *DAT_080074c4 | 0xc000;\\n  return;\\n}", 
        "called": [
            "FUN_08007430", 
            "FUN_0800618c", 
            "FUN_08005cec"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007436", 
        "calling": [
            "FUN_08007540"
        ], 
        "imported": true, 
        "current_name": "initialize_system_08007436"
    }, 
    "FUN_08005814": {
        "renaming": {
            "FUN_08005814": "initializeMemoryAndValue_08005814", 
            "fillMemoryWithByte_0800b430": "fillMemoryWithByte", 
            "calculateAndUpdateValue_08005324": "updateValue", 
            "PTR_DAT_08005838": "PTR_DATA_FLAG", 
            "PTR_DAT_08005834": "PTR_DATA_START"
        }, 
        "code": "void initializeMemoryAndValue_08005814(void)\\n{\\n  fillMemoryWithByte_0800b430(PTR_DAT_08005834, 0, 0x24);\\n  updateValue(800);\\n  *(int *)PTR_DAT_08005838 = 0;\\n  return;\\n}", 
        "called": [
            "FUN_08005324", 
            "FUN_0800b430"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005814", 
        "calling": [
            "FUN_08001ddc"
        ], 
        "imported": true, 
        "current_name": "initializeMemoryAndValue_08005814"
    }, 
    "FUN_08005bdc": {
        "renaming": {
            "param_1": "data_index", 
            "FUN_08005bdc": "set_data_value_at_index_08005bdc", 
            "param_2": "data_value"
        }, 
        "code": "void set_data_value_at_index_08005bdc(byte data_index, uint data_value)\\n{\\n  if ((char)data_index < '\\0') {\\n    // Set the data value at the specified index in the first array\\n    *(char *)((data_index & 0xf) + DAT_08005c28 + 0x14) = (char)((data_value & 0xff) << 4);\\n  }\\n  else {\\n    // Set the data value at the specified index in the second array\\n    *(char *)((char)data_index + DAT_08005c2c + 0x300) = (char)((data_value & 0xff) << 4);\\n  }\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005bdc", 
        "calling": [
            "FUN_08005c30"
        ], 
        "imported": true, 
        "current_name": "set_data_value_at_index_08005bdc"
    }, 
    "FUN_080002f0": {
        "renaming": {
            "PTR_DAT_0800030c": "PTR_FLAG_ADDRESS", 
            "fillMemoryWithByte_0800b430": "fillMemory", 
            "FUN_080002f0": "initializeMemory_080002f0", 
            "PTR_DAT_08000308": "PTR_MEMORY_ADDRESS"
        }, 
        "code": "void initializeMemory_080002f0(void)\\n{\\n  // Fill memory with 0xff\\n  fillMemoryWithByte_0800b430(PTR_DAT_08000308, 0xff, 4);\\n\\n  // Set the value at PTR_DAT_0800030c to 1\\n  *(int *)PTR_DAT_0800030c = 1;\\n  return;\\n}", 
        "called": [
            "FUN_0800b430"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080002f0", 
        "calling": [
            "FUN_08000374", 
            "FUN_080003ec", 
            "FUN_08000340", 
            "FUN_08000310"
        ], 
        "imported": true, 
        "current_name": "initializeMemory_080002f0"
    }, 
    "FUN_080073c0": {
        "renaming": {
            "FUN_080073c0": "do_nothing_080073c0"
        }, 
        "code": "void do_nothing_080073c0()\\n{\\n  // This function does nothing\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080073c0", 
        "calling": [
            "FUN_0800738e"
        ], 
        "imported": true, 
        "current_name": "do_nothing_080073c0"
    }, 
    "FUN_0800778c": {
        "renaming": {
            "local_c": "loop_counter", 
            "local_1c": "mask2", 
            "local_18": "mask3", 
            "FUN_0800778c": "process_data_0800778c", 
            "local_10": "data", 
            "local_20": "mask1", 
            "local_14": "mask4", 
            "local_24": "bit_position"
        }, 
        "code": "void process_data_0800778c(void)\\n{\\n  int bit_position;\\n  uint mask1;\\n  uint mask2;\\n  uint mask3;\\n  uint mask4;\\n  uint* data;\\n  uint loop_counter;\\n  for (loop_counter = 0; loop_counter < 0x11; loop_counter++) {\\n    data = (uint *)(PTR_DAT_0800784c + loop_counter * 0x18);\\n    *(uint *)(DAT_08007850 + 0x30) |= 1 << (*data >> 4 & 0xff);\\n    bit_position = 1 << (*data & 0xf);\\n    mask1 = data[1];\\n    mask2 = data[2];\\n    mask3 = data[3];\\n    mask4 = data[4];\\n    FUNC_08006e88(((*data >> 4) + 0x100080) * 0x400, &bit_position);\\n    if (-1 < (int)data[5]) {\\n      set_parameter(((*data >> 4) + 0x100080) * 0x400, 1 << (*data & 0xf) & 0xffff, data[5] & 0xff);\\n    }\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08006e88", 
            "FUN_0800733e"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800778c", 
        "calling": [
            "FUN_08007540"
        ], 
        "imported": true, 
        "current_name": "process_data_0800778c"
    }, 
    "FUN_080001d4": {
        "renaming": {
            "FUN_080001d4": "do_nothing_080001d4"
        }, 
        "code": "void do_nothing_080001d4()\\n{\\n  // This function does nothing\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080001d4", 
        "calling": [
            "FUN_08000210"
        ], 
        "imported": true, 
        "current_name": "do_nothing_080001d4"
    }, 
    "FUN_08001ddc": {
        "renaming": {
            "verify_and_send_messages_080039bc": "verify_and_send_messages", 
            "display_status_message_080041a0": "display_status_message", 
            "display_alarm_if_needed_08003a74": "display_alarm_if_needed", 
            "PTR_DAT_08001e94": "device_data", 
            "validate_and_verify_data_080051b4": "validate_and_verify_data", 
            "initializeMemoryAndValue_08005814": "initialize_memory_and_value", 
            "copyAndIncrementCharThenFillMemoryWithByte_08002f24": "copy_and_increment_char_then_fill_memory_with_byte", 
            "process_input_and_send_error_message_08003f34": "process_input_and_send_error_message", 
            "fillMemoryWithByte_0800b430": "fill_memory_with_byte", 
            "initialize_system_080004ac": "initialize_system", 
            "set_and_store_twos_complement_0800283a": "set_and_store_twos_complement", 
            "PTR_DAT_08001e90": "data_array", 
            "reset_data_080001f8": "reset_data", 
            "initialize_pointer_to_zero_08005238": "initialize_pointer_to_zero", 
            "FUN_08001ddc": "run_game_loop_08001ddc", 
            "update_device_and_clear_globals_0800583c": "update_device_and_clear_globals", 
            "doNothing_08008244": "do_nothing", 
            "initialize_game_080039a0": "initialize_game", 
            "checkFlagStatus_0800192c": "check_flag_status"
        }, 
        "code": "void run_game_loop_08001ddc(void)\\n{\\n  doNothing_08008244();\\n  validate_and_verify_data();\\n  update_device_and_clear_globals();\\n  fillMemoryWithByte_0800b430(PTR_DAT_08001e90, 0, 0x14);\\n  *PTR_DAT_08001e90 = 1;\\n  PTR_DAT_08001e90[1] = 1;\\n  do {\\n    if (*PTR_DAT_08001e90 != 0) {\\n      doNothing_08008244();\\n      copy_and_increment_char_then_fillMemoryWithByte_0800b430();\\n      initialize_system();\\n      initialize_game();\\n      initialize_pointer_to_zero();\\n      reset_data();\\n      checkFlagStatus_0800192c();\\n      initialize_memory_and_value();\\n      set_and_store_twos_complement();\\n      *PTR_DAT_08001e90 = 0;\\n      PTR_DAT_08001e90[2] = 0;\\n      if ((PTR_DAT_08001e90[4] & 2) != 0) {\\n        PTR_DAT_08001e90[0x10] = 1;\\n      }\\n      if ((PTR_DAT_08001e90[1] == 1) && ((PTR_DAT_08001e90[4] & 0x10) != 0)) {\\n        PTR_DAT_08001e90[1] = 6;\\n      }\\n      if (PTR_DAT_08001e90[1] == 6) {\\n        display_status_message(2);\\n      }\\n      else {\\n        PTR_DAT_08001e90[1] = 0;\\n        verify_and_send_messages();\\n      }\\n    }\\n    display_alarm_if_needed();\\n    process_input_and_send_error_message();\\n  } while(true);\\n}", 
        "called": [
            "FUN_08003f34", 
            "FUN_08002f24", 
            "FUN_080001f8", 
            "FUN_0800583c", 
            "FUN_08008244", 
            "FUN_080039a0", 
            "FUN_080051b4", 
            "FUN_080039bc", 
            "FUN_0800b430", 
            "FUN_080004ac", 
            "FUN_0800192c", 
            "FUN_0800283a", 
            "FUN_08003a74", 
            "FUN_080041a0", 
            "FUN_080082ba", 
            "FUN_08005814", 
            "FUN_08005238"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08001ddc", 
        "calling": [
            "FUN_08007540"
        ], 
        "imported": true, 
        "current_name": "run_game_loop_08001ddc"
    }, 
    "FUN_080069b4": {
        "renaming": {
            "param_1": "bit_index", 
            "FUN_080069b4": "set_bit_at_index_080069b4"
        }, 
        "code": "void set_bit_at_index_080069b4(byte bit_index)\\n{\\n  // Calculate the index of the array and the bit to set\\n  int array_index = (uint)(int)(char)bit_index >> 5;\\n  int bit_to_set = 1 << (bit_index & 0x1f);\\n  // Set the bit at the specified index in the array\\n  *(int *)(DAT_080069e0 + array_index * 4) = bit_to_set;\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080069b4", 
        "calling": [
            "FUN_08006d2e"
        ], 
        "imported": true, 
        "current_name": "set_bit_at_index_080069b4"
    }, 
    "FUN_08009228": {
        "renaming": {
            "FUN_08009228": "is_input_empty_08009228", 
            "in_CY": "input_char", 
            "calculateResultAndReturnConcatenation_08009204_08009204": "calculate_result_and_concatenate"
        }, 
        "code": "bool is_input_empty_08009228(void)\\n{\\n  char input_char;\\n  calculateResultAndReturnConcatenation_08009204_08009204();\\n  return input_char == '\\0';\\n}", 
        "called": [
            "FUN_08009204"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08009228", 
        "calling": [
            "FUN_080029d8", 
            "FUN_08003004", 
            "FUN_08002afc", 
            "FUN_080005b4", 
            "FUN_08003826", 
            "FUN_08004e30"
        ], 
        "imported": true, 
        "current_name": "is_input_empty_08009228"
    }, 
    "FUN_08007c7c": {
        "renaming": {
            "FUN_08007c7c": "clear_flags_and_update_parameters_08007c7c", 
            "FUNC_080053a0": "skip", 
            "_DAT_40000010": "_flags", 
            "update_parameter_value_08005778": "update_parameter_value", 
            "update_parameter_08005760": "update_parameter", 
            "_DAT_4000000c": "_flags_c"
        }, 
        "code": "void clear_flags_and_update_parameters_08007c7c(void)\\n{\\n  bool is_flag_2_set = (_DAT_40000010 & 2) != 0;\\n  bool is_flag_4_set = (_DAT_40000010 & 4) != 0;\\n  bool is_flag_1_set = (_DAT_40000010 & 1) != 0;\\n  bool is_flag_2c_set = (_DAT_4000000c & 2) != 0;\\n  bool is_flag_4c_set = (_DAT_4000000c & 4) != 0;\\n  bool is_flag_1c_set = (_DAT_4000000c & 1) != 0;\\n\\n  if (is_flag_2_set && is_flag_2c_set) {\\n    _DAT_40000010 &= ~2;\\n    update_parameter_value();\\n  }\\n  if (is_flag_4_set && is_flag_4c_set) {\\n    _DAT_40000010 &= ~4;\\n    update_parameter();\\n  }\\n  if (is_flag_1_set && is_flag_1c_set) {\\n    _DAT_40000010 &= ~1;\\n    skip();\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08005760", 
            "FUN_080053a0", 
            "FUN_08005778"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007c7c", 
        "calling": [], 
        "imported": true, 
        "current_name": "clear_flags_and_update_parameters_08007c7c"
    }, 
    "FUN_08007b70": {
        "renaming": {
            "_DAT_40000038": "global_var_2", 
            "FUN_08007b70": "set_device_flags_08007b70", 
            "_DAT_40000034": "global_var_1"
        }, 
        "code": "void set_device_flags_08007b70()\\n{\\n  // Initialize the local flag variable\\n  uint flags = 1;\\n  // Check if the first global variable is not zero and set the corresponding flag\\n  if (_DAT_40000034 != 0) {\\n    flags = 3;\\n  }\\n  // Check if the second global variable is not zero and set the corresponding flag\\n  if (_DAT_40000038 != 0) {\\n    flags |= 4;\\n  }\\n  // Set the device flags using the local flags variable\\n  _DAT_4000000c |= flags;\\n  // Set the first bit of the first global variable\\n  _DAT_40000000 |= 1;\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007b70", 
        "calling": [
            "FUN_08005790"
        ], 
        "imported": true, 
        "current_name": "set_device_flags_08007b70"
    }, 
    "FUN_08004d2c": {
        "renaming": {
            "iVar1": "checksum", 
            "check_sum_080003ec": "calculate_checksum", 
            "FUN_08004d2c": "verify_checksum_08004d2c", 
            "param_1": "length", 
            "param_2": "data", 
            "set_memory_checksum_08004bc0": "save_checksum"
        }, 
        "code": "bool verify_checksum_08004d2c(byte length, undefined *data)\\n{\\n  int checksum = calculate_checksum(data, (ushort)length * 0x101 + 0x300, 0x100);\\n  if (checksum == 0) {\\n    *data = 0;\\n    save_checksum(length, data);\\n  }\\n  return checksum != 0;\\n}", 
        "called": [
            "FUN_08004bc0", 
            "FUN_080003ec"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08004d2c", 
        "calling": [
            "FUN_080039bc", 
            "FUN_08003b98"
        ], 
        "imported": true, 
        "current_name": "verify_checksum_08004d2c"
    }, 
    "FUN_08003004": {
        "renaming": {
            "FUN_08003004": "FUNC_08003004"
        }, 
        "code": "\nvoid FUNC_08003004(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 char param_5)\n\n{\n  undefined *puVar1;\n  undefined uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 uVar10;\n  uint uVar11;\n  ushort *puVar12;\n  int iVar13;\n  uint uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  undefined8 uVar17;\n  undefined4 local_20;\n  undefined4 local_1c;\n  \n  puVar12 = (ushort *)(PTR_DAT_08003234 + (uint)(byte)*PTR_DAT_08003230 * 0x40);\n  uVar3 = FUNC_08008eec(*(undefined4 *)PTR_DAT_08003238,param_1);\n  uVar15 = FUNC_08008590(uVar3);\n  iVar4 = calculateValue_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  uVar3 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003238 + 4),param_2);\n  uVar15 = FUNC_08008590(uVar3);\n  iVar5 = calculateValue_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  uVar3 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003238 + 8),param_3);\n  uVar15 = FUNC_08008590(uVar3);\n  iVar6 = calculateValue_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  *puVar12 = 0;\n  if (iVar4 < *(int *)PTR_DAT_0800323c) {\n    *puVar12 = *puVar12 | 0x20;\n  }\n  if (iVar5 < *(int *)(PTR_DAT_0800323c + 4)) {\n    *puVar12 = *puVar12 | 0x880;\n  }\n  if (iVar6 < *(int *)(PTR_DAT_0800323c + 8)) {\n    *puVar12 = *puVar12 | 0x200;\n  }\n  iVar13 = iVar4 - *(int *)PTR_DAT_0800323c;\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 2) = iVar13;\n  iVar13 = iVar5 - *(int *)(PTR_DAT_0800323c + 4);\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 4) = iVar13;\n  iVar13 = iVar6 - *(int *)(PTR_DAT_0800323c + 8);\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 6) = iVar13;\n  uVar11 = *(uint *)(puVar12 + 6);\n  if (*(uint *)(puVar12 + 6) < *(uint *)(puVar12 + 4)) {\n    uVar11 = *(uint *)(puVar12 + 4);\n  }\n  uVar14 = *(uint *)(puVar12 + 2);\n  if (*(uint *)(puVar12 + 2) < uVar11) {\n    uVar14 = uVar11;\n  }\n  *(uint *)(puVar12 + 8) = uVar14;\n  if (*(int *)(puVar12 + 8) != 0) {\n    uVar3 = calculateTwosComplement_08008e44(iVar4 - *(int *)PTR_DAT_0800323c);\n    uVar3 = FUNC_08009054(uVar3,*(undefined4 *)PTR_DAT_08003238);\n    uVar7 = calculateTwosComplement_08008e44(iVar5 - *(int *)(PTR_DAT_0800323c + 4));\n    uVar7 = FUNC_08009054(uVar7,*(undefined4 *)(PTR_DAT_08003238 + 4));\n    uVar8 = calculateTwosComplement_08008e44(iVar6 - *(int *)(PTR_DAT_0800323c + 8));\n    uVar8 = FUNC_08009054(uVar8,*(undefined4 *)(PTR_DAT_08003238 + 8));\n    uVar9 = FUNC_08008eec(uVar3,uVar3);\n    uVar10 = FUNC_08008eec(uVar7,uVar7);\n    uVar9 = FUNC_08008cdc(uVar9,uVar10);\n    uVar10 = FUNC_08008eec(uVar8,uVar8);\n    uVar9 = FUNC_08008cdc(uVar9,uVar10);\n    uVar15 = FUNC_08008590(uVar9);\n    uVar15 = process_input_and_return_result_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar9 = calculateFloat_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x10) = uVar9;\n    uVar9 = FUNC_08009054(0x3f800000,*(undefined4 *)(puVar12 + 0x10));\n    if (param_5 == '\\0') {\n      local_1c = FUNC_08008eec(param_4,uVar9);\n    }\n    else {\n      local_1c = FUNC_08009054(0x3f800000,param_4);\n    }\n    uVar10 = FUNC_08008eec(*(undefined4 *)(puVar12 + 0x10),local_1c);\n    *(undefined4 *)(puVar12 + 10) = uVar10;\n    uVar10 = calculateTwosComplement_08008e44(*(undefined4 *)(puVar12 + 8));\n    uVar10 = FUNC_08008eec(uVar10,local_1c);\n    uVar15 = FUNC_08008590(uVar10);\n    uVar15 = calculate_result_08009318((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar10 = calculate_value_08008bf0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x1e) = uVar10;\n    uVar10 = calculateTwosComplement_08008e44(*(undefined4 *)(puVar12 + 8));\n    uVar10 = FUNC_08008eec(uVar10,uVar9);\n    uVar10 = FUNC_08008eec(uVar10,*(undefined4 *)(PTR_DAT_08003560 + 0x20));\n    uVar10 = FUNC_08009054(uVar10,DAT_08003564);\n    uVar15 = FUNC_08008590(uVar10);\n    uVar15 = calculate_result_08009318((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar10 = calculateValue_08008ba0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x18) = uVar10;\n    uVar3 = FUNC_08008eec(uVar3,uVar9);\n    uVar7 = FUNC_08008eec(uVar7,uVar9);\n    uVar8 = FUNC_08008eec(uVar8,uVar9);\n    local_20 = 0;\n    if ((*PTR_DAT_08003568 != *PTR_DAT_0800356c) &&\n       (iVar13 = is_end_of_input_reached_08009264(*(undefined4 *)(PTR_DAT_08003570 + 0x18),0), iVar13 != 0)) {\n      uVar9 = FUNC_08008eec(*(uint *)(PTR_DAT_08003570 + 0xc) ^ 0x80000000,uVar3);\n      uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003570 + 0x10),uVar7);\n      uVar9 = FUNC_08008cd8(uVar9,uVar10);\n      uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003570 + 0x14),uVar8);\n      uVar9 = FUNC_08008cd8(uVar9,uVar10);\n      uVar15 = FUNC_08008590(uVar9);\n      iVar13 = is_end_of_input_08008b24((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08003550,DAT_08003554);\n      if (iVar13 != 0) {\n        iVar13 = is_input_empty_08009228(*(undefined4 *)(PTR_DAT_08003570 + 0x18),*(undefined4 *)(puVar12 + 10)\n                             );\n        if (iVar13 == 0) {\n          local_20 = *(undefined4 *)(puVar12 + 10);\n        }\n        else {\n          local_20 = *(undefined4 *)(PTR_DAT_08003570 + 0x18);\n        }\n        uVar15 = FUNC_08008590(uVar9);\n        iVar13 = is_end_of_string_reached_08008b60((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08003558,DAT_0800355c\n                             );\n        if (iVar13 != 0) {\n          uVar15 = FUNC_08008590(uVar9);\n          uVar15 = FUNC_080082d0(0,DAT_08003574,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar15 = FUNC_08008640((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),0,DAT_08003578);\n          uVar15 = process_input_and_return_result_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar9 = calculateFloat_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar15 = FUNC_08008590(local_20);\n          uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003560 + 0x20),\n                                *(undefined4 *)(PTR_DAT_08003560 + 0x24));\n          uVar10 = FUNC_08008eec(uVar10,uVar9);\n          uVar16 = FUNC_08008590(uVar10);\n          uVar17 = FUNC_08008590(uVar9);\n          uVar17 = FUNC_080082d0(0,DAT_08003574,(int)uVar17,(int)((ulonglong)uVar17 >> 0x20));\n          uVar16 = FUNC_08008894((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar17,\n                                (int)((ulonglong)uVar17 >> 0x20));\n          uVar16 = process_input_and_return_result_080098d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n          iVar13 = is_end_of_input_08008b24((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                (int)((ulonglong)uVar16 >> 0x20));\n          if (iVar13 == 0) {\n            uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003560 + 0x20),\n                                  *(undefined4 *)(PTR_DAT_08003560 + 0x24));\n            uVar10 = FUNC_08008eec(uVar10,uVar9);\n            uVar15 = FUNC_08008590(uVar10);\n            uVar16 = FUNC_08008590(uVar9);\n            uVar16 = FUNC_080082d0(0,DAT_08003574,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n            uVar15 = FUNC_08008894((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                  (int)((ulonglong)uVar16 >> 0x20));\n            uVar15 = process_input_and_return_result_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n            local_20 = calculateFloat_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(puVar12 + 0xe) = local_20;\n    uVar10 = calculate_result_from_input_08002978(*(uint *)(PTR_DAT_08003560 + 0x20) ^ 0x80000000,0,\n                          *(undefined4 *)(puVar12 + 0x10));\n    iVar13 = is_input_empty_08009228(local_20,uVar10);\n    uVar9 = uVar10;\n    if (iVar13 != 0) {\n      uVar9 = local_20;\n    }\n    *(undefined4 *)(puVar12 + 0xc) = uVar9;\n    iVar13 = check_results_08009250(uVar10,*(undefined4 *)(puVar12 + 10));\n    if (iVar13 == 0) {\n      *(undefined *)((int)puVar12 + 0x25) = 0;\n    }\n    else {\n      *(undefined *)((int)puVar12 + 0x25) = 1;\n    }\n    *(undefined *)(puVar12 + 0x12) = 1;\n    puVar1 = PTR_DAT_080035e0;\n    *(undefined4 *)(PTR_DAT_080035e0 + 0xc) = uVar3;\n    *(undefined4 *)(puVar1 + 0x10) = uVar7;\n    *(undefined4 *)(puVar1 + 0x14) = uVar8;\n    *(undefined4 *)(PTR_DAT_080035e0 + 0x18) = *(undefined4 *)(puVar12 + 10);\n    *PTR_DAT_080035e8 = *PTR_DAT_080035e4;\n    uVar2 = incrementChar_08002870(*PTR_DAT_080035e8);\n    *PTR_DAT_080035e4 = uVar2;\n    puVar1 = PTR_DAT_080035e0;\n    *(int *)PTR_DAT_080035e0 = iVar4;\n    *(int *)(puVar1 + 4) = iVar5;\n    *(int *)(puVar1 + 8) = iVar6;\n    process_input_and_calculate_result_08002a94_and_process_inputs_08002ba8_and_process_data_08002e08_08002edc();\n  }\n  return;\n}\n\n", 
        "called": [
            "FUN_08008b24", 
            "FUN_08008894", 
            "FUN_080095b8", 
            "FUN_08008640", 
            "FUN_08008ba0", 
            "FUN_080082d0", 
            "FUN_08002edc", 
            "FUN_08008bf0", 
            "FUN_08008cd8", 
            "FUN_08009250", 
            "FUN_08002978", 
            "FUN_08008cdc", 
            "FUN_08008e44", 
            "FUN_08008c30", 
            "FUN_08009054", 
            "FUN_08009264", 
            "FUN_08009318", 
            "FUN_08002870", 
            "FUN_080098d0", 
            "FUN_08009228", 
            "FUN_08008590", 
            "FUN_08008eec", 
            "FUN_08008b60"
        ], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x08003004", 
        "calling": [
            "FUN_08001e98"
        ], 
        "current_name": "FUNC_08003004"
    }, 
    "FUN_080066cc": {
        "renaming": {
            "uVar1": "shifted_data", 
            "FUN_080066cc": "calculate_shifted_data_080066cc", 
            "uVar2": "leading_zeroes", 
            "PTR_DAT_08006714": "data_pointer"
        }, 
        "code": "uint calculate_shifted_data_080066cc(void)\\n{\\n  uint shifted_data = calculate_data_and_shift_right();\\n  uint leading_zeroes = count_leading_zeroes(0x70000);\\n  uint shifted_amount = (*(uint *)(PTR_DAT_08006714 + 8) & 0xe000) >> (leading_zeroes & 0xff);\\n  return shifted_data >> shifted_amount;\\n}", 
        "called": [
            "FUN_08006628"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080066cc", 
        "calling": [
            "FUN_08007f54"
        ], 
        "imported": true, 
        "current_name": "calculate_shifted_data_080066cc"
    }, 
    "FUN_080018fc": {
        "renaming": {
            "param_1": "data_value", 
            "FUN_080018fc": "set_data_value_080018fc"
        }, 
        "code": "void set_data_value_080018fc(uint data_value)\\n{\\n  // Set the data value at a specific memory location\\n  *(uint *)(DAT_08001928 + 0x14) = data_value | *(uint *)(DAT_08001928 + 0x14) & 0xfffff55f;\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080018fc", 
        "calling": [
            "FUN_08001994"
        ], 
        "imported": true, 
        "current_name": "set_data_value_080018fc"
    }, 
    "FUN_080039bc": {
        "renaming": {
            "verify_checksum_08004d2c": "verify_checksum", 
            "iVar1": "verification_result", 
            "PTR_DAT_08003a14": "message_pointer", 
            "FUN_080039bc": "verify_and_send_messages_080039bc", 
            "local_9": "message_index", 
            "FUNC_080005b4": "get_error_code", 
            "send_error_message_08004030": "send_error_message", 
            "send_string_to_device_0800369c": "send_string_to_device", 
            "uVar2": "error_code"
        }, 
        "code": "void verify_and_send_messages_080039bc(void)\\n{\\n  int verification_result;\\n  undefined4 error_code;\\n  byte message_index;\\n  for (message_index = 0; message_index < 2; message_index++) {\\n    verification_result = verify_checksum(PTR_DAT_08003a14, message_index);\\n    if (verification_result == 0) {\\n      send_error_message(10);\\n    }\\n    else if (*PTR_DAT_08003a14 != '\\0') {\\n      send_string_to_device(PTR_DAT_08003a14);\\n      error_code = get_error_code(PTR_DAT_08003a14);\\n      send_error_message(error_code);\\n    }\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_080005b4", 
            "FUN_08004d2c", 
            "FUN_0800369c", 
            "FUN_08004030"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080039bc", 
        "calling": [
            "FUN_08001ddc", 
            "FUN_08003b98"
        ], 
        "imported": true, 
        "current_name": "verify_and_send_messages_080039bc"
    }, 
    "FUN_0800618c": {
        "renaming": {
            "iVar2": "value1", 
            "DAT_08006404": "PTR_DAT_08006404", 
            "param_1": "param_array", 
            "calculate_data_and_shift_right_08006628": "calculate_data_and_shift_right", 
            "lVar1": "temp", 
            "FUN_0800618c": "validate_param_0800618c", 
            "result": "result", 
            "getValueFromPointer_08005a84": "getValueFromPointer", 
            "param_2": "param_length", 
            "DAT_08006400": "PTR_DAT_08006400", 
            "uVar3": "value3", 
            "check_param_within_range_08005c30": "check_param_within_range", 
            "uVar5": "value5", 
            "uVar4": "value4"
        }, 
        "code": "uint32_t validate_param_0800618c(uint32_t *param_array, uint32_t param_length) {\\n  uint32_t value1;\\n  uint32_t value2;\\n  uint32_t value3;\\n  uint32_t value4;\\n  uint32_t value5;\\n  uint32_t result = 0;\\n  if ((*DAT_08006400 & 0xf) < param_length) {\\n    *(char *)DAT_08006400 = (char)param_length;\\n    if (param_length != (*DAT_08006400 & 0xf)) {\\n      return 1;\\n    }\\n    if ((*param_array & 1) != 0) {\\n      uint32_t param_value = param_array[1];\\n      if (param_value == 1) {\\n        if ((*DAT_08006404 & 0x20000) == 0) {\\n          return 1;\\n        }\\n      }\\n      else if (param_value == 2) {\\n        if ((*DAT_08006404 & 0x2000000) == 0) {\\n          return 1;\\n        }\\n      }\\n      else if ((*DAT_08006404 & 2) == 0) {\\n        return 1;\\n      }\\n      DAT_08006404[2] = param_value | DAT_08006404[2] & 0xfffffffc;\\n      value1 = getValueFromPointer_08005a84();\\n      value2 = value1 + 5000;\\n      if (param_value == 1) {\\n        while ((DAT_08006404[2] & 0xc) != 4) {\\n          value3 = getValueFromPointer_08005a84();\\n          if (value2 <= value3) {\\n            return 3;\\n          }\\n        }\\n      }\\n      else if (param_value == 2) {\\n        while ((DAT_08006404[2] & 0xc) != 8) {\\n          value3 = getValueFromPointer_08005a84();\\n          if (value2 <= value3) {\\n            return 3;\\n          }\\n        }\\n      }\\n      else {\\n        while ((DAT_08006404[2] & 0xc) != 0) {\\n          value3 = getValueFromPointer_08005a84();\\n          if (value2 <= value3) {\\n            return 3;\\n          }\\n        }\\n      }\\n    }\\n  }\\n  else {\\n    if ((*param_array & 1) != 0) {\\n      uint32_t param_value = param_array[1];\\n      if (param_value == 1) {\\n        if ((*DAT_08006404 & 0x20000) == 0) {\\n          return 1;\\n        }\\n      }\\n      else if (param_value == 2) {\\n        if ((*DAT_08006404 & 0x2000000) == 0) {\\n          return 1;\\n        }\\n      }\\n      else if ((*DAT_08006404 & 2) == 0) {\\n        return 1;\\n      }\\n      DAT_08006404[2] = param_value | DAT_08006404[2] & 0xfffffffc;\\n      value1 = getValueFromPointer_08005a84();\\n      value2 = value1 + 5000;\\n      if (param_value == 1) {\\n        while ((DAT_08006404[2] & 0xc) != 4) {\\n          value3 = getValueFromPointer_08005a84();\\n          if (value2 <= value3) {\\n            return 3;\\n          }\\n        }\\n      }\\n      else if (param_value == 2) {\\n        while ((DAT_08006404[2] & 0xc) != 8) {\\n          value3 = getValueFromPointer_08005a84();\\n          if (value2 <= value3) {\\n            return 3;\\n          }\\n        }\\n      }\\n      else {\\n        while ((DAT_08006404[2] & 0xc) != 0) {\\n          value3 = getValueFromPointer_08005a84();\\n          if (value2 <= value3) {\\n            return 3;\\n          }\\n        }\\n      }\\n    }\\n    *(char *)DAT_08006400 = (char)param_length;\\n    if (param_length != (*DAT_08006400 & 0xf)) {\\n      return 1;\\n    }\\n  }\\n  if ((*param_array & 2) != 0) {\\n    DAT_08006404[2] = param_array[2] | DAT_08006404[2] & 0xffffff0f;\\n  }\\n  if ((*param_array & 4) != 0) {\\n    DAT_08006404[2] = param_array[3] | DAT_08006404[2] & 0xffffe3ff;\\n  }\\n  if ((*param_array & 8) != 0) {\\n    DAT_08006404[2] = param_array[4] << 3 | DAT_08006404[2] & 0xffff1fff;\\n  }\\n  value5 = calculate_data_and_shift_right_08006628();\\n  uint64_t temp = (uint64_t)PTR_DAT_08006408 * (value5 & 0xffffffff);\\n  value1 = (uint32_t)(temp >> 0x26);\\n  value2 = (uint32_t)(value5 >> 0x20);\\n  value3 = (uint32_t)temp;\\n  check_param_within_range_08005c30(value1, value2, value3);\\n  return result;\\n}", 
        "called": [
            "FUN_08005a84", 
            "FUN_08005c30", 
            "FUN_08006628"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800618c", 
        "calling": [
            "FUN_08007436"
        ], 
        "imported": true, 
        "current_name": "validate_param_0800618c"
    }, 
    "FUN_08006998": {
        "renaming": {
            "FUN_08006998": "get_data_value_08006998"
        }, 
        "code": "uint get_data_value_08006998()\\n{\\n  // Get a specific data value from memory and extract the relevant bits\\n  uint data_value = *(uint *)(DAT_080069b0 + 0xc);\\n  uint relevant_bits = data_value >> 8 & 7;\\n  return relevant_bits;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006998", 
        "calling": [
            "FUN_08006d8a", 
            "FUN_08006cf6"
        ], 
        "imported": true, 
        "current_name": "get_data_value_08006998"
    }, 
    "FUN_080004ac": {
        "renaming": {
            "PTR_DAT_080004f8": "PTR_CHECKSUM_RESULT", 
            "iVar1": "checksum_result", 
            "PTR_DAT_080004f4": "PTR_CHECKSUM", 
            "verify_checksum_08004d7c": "verify_checksum", 
            "set_data_values_08000478": "set_data_values", 
            "fillMemoryWithByte_0800b430": "fillMemoryWithByte", 
            "FUN_080004ac": "initialize_system_080004ac", 
            "PTR_DAT_080004f0": "PTR_DATA_BUFFER"
        }, 
        "code": "void initialize_system_080004ac(void)\\n{\\n  int checksum_result;\\n  // Initialize memory\\n  fillMemoryWithByte_0800b430(PTR_DAT_080004f0, 0, 0x38);\\n  // Set data values\\n  set_data_values_08000478(0, 1, 2);\\n  // Set flag\\n  PTR_DAT_080004f0[4] = 1;\\n  // Verify checksum\\n  checksum_result = verify_checksum(PTR_DAT_080004f0[0x1c], PTR_DAT_080004f4);\\n  if (checksum_result == 0) {\\n    send_error_message(10);\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08000478", 
            "FUN_08004d7c", 
            "FUN_0800b430", 
            "FUN_08004030"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080004ac", 
        "calling": [
            "FUN_08001ddc"
        ], 
        "imported": true, 
        "current_name": "initialize_system_080004ac"
    }, 
    "FUN_080078f4": {
        "renaming": {
            "local_c": "combined_data_value", 
            "FUN_080078f4": "get_combined_data_value_080078f4", 
            "local_10": "i"
        }, 
        "code": "uint get_combined_data_value_080078f4()\\n{\\n  // Initialize the local variable to hold the combined data value\\n  uint combined_data_value = 0;\\n  // Loop through the array and combine the data values\\n  for (int i = 0; i < 4; i++) {\\n    combined_data_value |= *(uint *)(PTR_DAT_0800792c + i * 4);\\n  }\\n  return combined_data_value;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080078f4", 
        "calling": [
            "FUN_08001994", 
            "FUN_08007930"
        ], 
        "imported": true, 
        "current_name": "get_combined_data_value_080078f4"
    }, 
    "FUN_080041a0": {
        "renaming": {
            "PTR_s_Caution__Unlocked_08004218": "CAUTION_MESSAGE", 
            "PTR_s_Disabled_08004220": "DISABLED_MESSAGE", 
            "PTR_DAT_0800420c": "STATUS_MESSAGE_HEADER", 
            "param_1": "status", 
            "PTR_s_Reset_to_continue_08004210": "RESET_TO_CONTINUE_MESSAGE", 
            "PTR_s___H____X__to_unlock_08004214": "UNLOCK_MESSAGE", 
            "FUN_080041a0": "display_status_message_080041a0", 
            "PTR_s_Enabled_0800421c": "ENABLED_MESSAGE", 
            "PTR_DAT_08004224": "STATUS_MESSAGE_FOOTER"
        }, 
        "code": "void display_status_message_080041a0(int status)\\n{\\n  send_string_to_device(PTR_DAT_0800420c);\\n  switch(status) {\\n  case 1:\\n    send_string_to_device(PTR_s_Reset_to_continue_08004210);\\n    break;\\n  case 2:\\n    send_string_to_device(PTR_s___H____X__to_unlock_08004214);\\n    break;\\n  case 3:\\n    send_string_to_device(PTR_s_Caution__Unlocked_08004218);\\n    break;\\n  case 4:\\n    send_string_to_device(PTR_s_Enabled_0800421c);\\n    break;\\n  case 5:\\n    send_string_to_device(PTR_s_Disabled_08004220);\\n  }\\n  send_string_to_device(PTR_DAT_08004224);\\n  return;\\n}", 
        "called": [
            "FUN_080036c6"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080041a0", 
        "calling": [
            "FUN_08001ddc", 
            "FUN_08003a74", 
            "FUN_08003b98"
        ], 
        "imported": true, 
        "current_name": "display_status_message_080041a0"
    }, 
    "FUN_08008bf0": {
        "renaming": {
            "iVar1": "intermediate_value", 
            "param_1": "data_value_1", 
            "param_2": "data_value_2", 
            "FUN_08008bf0": "calculate_value_08008bf0", 
            "uVar2": "shift_amount"
        }, 
        "code": "uint calculate_value_08008bf0(uint param_1, uint param_2)\\n{\\n  // Check if the most significant bit of param_2 is set\\n  if ((param_2 & 0x80000000) != 0) {\\n    return 0;\\n  }\\n  // Calculate the intermediate value\\n  int intermediate_value = param_2 * 2 + 0x200000;\\n  // Check if the intermediate value is less than a certain value\\n  if (param_2 * 2 < 0xffe00000) {\\n    // Check if the intermediate value is negative\\n    if (intermediate_value >= 0) {\\n      return 0;\\n    }\\n    // Calculate the shift amount\\n    uint shift_amount = -(intermediate_value >> 0x15) - 0x3e1;\\n    // Check if the shift amount is positive\\n    if ((int)shift_amount >= 0) {\\n      return (param_2 << 0xb | 0x80000000 | param_1 >> 0x15) >> (shift_amount & 0xff);\\n    }\\n  }\\n  // Check if param_1 and param_2 are both zero\\n  else if ((param_1 | param_2 << 0xc) != 0) {\\n    return 0;\\n  }\\n  return 0xffffffff;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08008bf0", 
        "calling": [
            "FUN_08001994", 
            "FUN_08003004", 
            "FUN_08002408", 
            "FUN_080005b4", 
            "FUN_08003b98", 
            "FUN_08002c18", 
            "FUN_08004e30", 
            "FUN_08001f00"
        ], 
        "imported": true, 
        "current_name": "calculate_value_08008bf0"
    }, 
    "FUN_08003a18": {
        "renaming": {
            "param_1": "input_byte", 
            "FUN_08003a18": "enable_task_execution_if_not_already_enabled_08003a18"
        }, 
        "code": "void enable_task_execution_if_not_already_enabled_08003a18(uint8_t input_byte) {\\n    if ((input_byte & 0x80) != 0) {\\n        enable_task_execution_if_not_already_enabled_08003a18_080025e8();\\n    }\\n    else {\\n        if ((input_byte & 0x40) != 0) {\\n            PTR_DAT_08003a70[2] |= 8;\\n        }\\n        else if ((input_byte & 0x20) != 0) {\\n            PTR_DAT_08003a70[2] |= 2;\\n        }\\n    }\\n    return;\\n}", 
        "called": [
            "FUN_080025e8"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08003a18", 
        "calling": [
            "FUN_080074c8"
        ], 
        "imported": true, 
        "current_name": "enable_task_execution_if_not_already_enabled_08003a18"
    }, 
    "FUN_08005790": {
        "renaming": {
            "FUN_08005790": "updateDeviceFlags_08005790", 
            "PTR_DAT_080057d4": "deviceType", 
            "PTR_DAT_080057d8": "deviceData", 
            "setGlobalVariable_08007c5e": "setDeviceSpeed", 
            "set_device_flags_08007b70": "setDeviceFlags", 
            "setGlobalValue_08007c40": "setDeviceMode", 
            "PTR_DAT_080057e0": "deviceSerialNumber", 
            "PTR_DAT_080057dc": "deviceSerialNumber"
        }, 
        "code": "void updateDeviceFlags_08005790(void)\\n{\\n  doNothing();\\n  if (PTR_DAT_080057d4[1] == 0x03) {\\n    *(unsigned short *)PTR_DAT_080057dc = *(unsigned short *)(PTR_DAT_080057d4 + 0x18);\\n    *(unsigned short *)(PTR_DAT_080057dc + 2) = *(unsigned short *)(PTR_DAT_080057d4 + 0x1a);\\n    setGlobalValue_08007c40(0x69);\\n    setGlobalVariable_08007c5e(((byte)PTR_DAT_080057d4[0xd] + 5) * 0x15);\\n    set_device_flags_08007b70();\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08007c5e", 
            "FUN_08007b70", 
            "FUN_08005318", 
            "FUN_08007c40"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005790", 
        "calling": [
            "FUN_0800583c", 
            "FUN_08001d4c", 
            "FUN_0800585c"
        ], 
        "imported": true, 
        "current_name": "updateDeviceFlags_08005790"
    }, 
    "FUN_08001994": {
        "renaming": {
            "FUN_08001994": "FUNC_08001994"
        }, 
        "code": "\nvoid FUNC_08001994(byte param_1,char param_2,char param_3,undefined4 param_4)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  byte local_61;\n  uint local_5c;\n  uint local_58;\n  uint local_54;\n  ushort local_4e;\n  uint local_4c;\n  int local_48;\n  undefined4 local_44;\n  uint local_40;\n  uint local_3c;\n  ushort local_36;\n  uint local_34;\n  uint local_30;\n  int local_2c;\n  int local_28;\n  int local_24;\n  int local_20;\n  ushort local_1a;\n  uint local_18;\n  char local_11;\n  \n  local_11 = '\\0';\n  fillMemoryWithByte_0800b430(&local_5c,0,0xc);\n  if ((param_1 & 1) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = FUNC_08008590(*(undefined4 *)PTR_DAT_08001c90);\n    local_5c = calculateValue_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  if ((param_1 & 2) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = FUNC_08008590(*(undefined4 *)(PTR_DAT_08001c90 + 4));\n    local_58 = calculateValue_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  if ((param_1 & 4) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = FUNC_08008590(*(undefined4 *)(PTR_DAT_08001c90 + 8));\n    local_54 = calculateValue_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  uVar2 = local_54;\n  if (local_54 < local_58) {\n    uVar2 = local_58;\n  }\n  local_40 = local_5c;\n  if (local_5c < uVar2) {\n    local_40 = uVar2;\n  }\n  uVar3 = calculateResult_0800854c(local_40);\n  uVar4 = calculateResult_0800854c(local_11);\n  uVar4 = process_input_and_return_result_080098d0((int)uVar4,(int)((ulonglong)uVar4 >> 0x20));\n  uVar3 = FUNC_08008894((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),(int)uVar4,\n                       (int)((ulonglong)uVar4 >> 0x20));\n  local_44 = calculateFloat_08008c30((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar1 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08001c90 + 0x20),local_44);\n  uVar1 = FUNC_08009054(uVar1,DAT_08001c94);\n  uVar3 = FUNC_08008590(uVar1);\n  uVar3 = calculate_result_08009318((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  local_48 = calculate_value_08008bf0((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar3 = calculateResult_0800854c(local_11);\n  uVar3 = process_input_and_return_result_080098d0((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar4 = FUNC_08008590(param_4);\n  uVar3 = FUNC_08008640((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),(int)uVar4,\n                       (int)((ulonglong)uVar4 >> 0x20));\n  uVar1 = calculateFloat_08008c30((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar1 = FUNC_08008eec(local_44,uVar1);\n  uVar1 = FUNC_08009054(DAT_08001c98,uVar1);\n  uVar3 = FUNC_08008590(uVar1);\n  local_4c = calculateValue_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  local_18 = DAT_08001c9c;\n  if (local_4c < DAT_08001c9c) {\n    local_18 = local_4c;\n  }\n  local_4e = *(ushort *)(PTR_DAT_08001c90 + 0x18);\n  local_1a = *(ushort *)(PTR_DAT_08001c90 + 0x1a) ^ *(ushort *)(PTR_DAT_08001c90 + 0x2a) & 0xaa0;\n  if (param_2 == '\\0') {\n    local_1a = local_1a ^ 0xaa0;\n  }\n  set_data_value_080018fc(local_1a);\n  setParam_080018cc(local_4e);\n  local_28 = -(local_40 >> 1);\n  local_2c = local_18 - (byte)PTR_DAT_08001c90[0xd];\n  local_30 = 0;\n  local_34 = 10000;\n  local_61 = param_1;\n  local_24 = local_28;\n  local_20 = local_28;\n  while( true ) {\n    local_36 = local_4e;\n    local_3c = get_combined_data_value_080078f4();\n    if (param_3 == '\\0') {\n      local_3c = local_3c ^ 0x1e;\n    }\n    if (((local_61 & 1) != 0) && (local_20 = local_20 + local_5c, 0 < local_20)) {\n      if ((local_3c & 0x10) == 0) {\n        local_61 = local_61 & 0xfe;\n      }\n      else {\n        local_36 = local_36 ^ 0x10;\n      }\n      local_20 = local_20 - local_40;\n    }\n    if (((local_61 & 2) != 0) && (local_24 = local_24 + local_58, 0 < local_24)) {\n      if ((local_3c & 8) == 0) {\n        local_61 = local_61 & 0xfd;\n      }\n      else {\n        local_36 = local_36 ^ 0x440;\n      }\n      local_24 = local_24 - local_40;\n    }\n    if (((local_61 & 4) != 0) && (local_28 = local_28 + local_54, 0 < local_28)) {\n      if ((local_3c & 4) == 0) {\n        local_61 = local_61 & 0xfb;\n      }\n      else {\n        local_36 = local_36 ^ 0x100;\n      }\n      local_28 = local_28 - local_40;\n    }\n    if ((local_61 == 0) || ((PTR_DAT_08001d40[2] & 0x10) != 0)) break;\n    setParam_080018cc(local_36);\n    doNothing_08002828(PTR_DAT_08001d44[0xd]);\n    setParam_080018cc(local_4e);\n    doNothing_08002828(local_2c);\n    if ((local_4c < local_18) && (local_34 = local_18 + local_34, 20000 < local_34)) {\n      local_34 = local_34 - 20000;\n      local_30 = local_48 + local_30;\n      local_18 = DAT_08001d48 / local_30;\n      if (local_18 < local_4c) {\n        local_18 = local_4c;\n      }\n      local_2c = local_18 - (byte)PTR_DAT_08001d44[0xd];\n    }\n  }\n  return;\n}\n\n", 
        "called": [
            "FUN_08008894", 
            "FUN_080018fc", 
            "FUN_080095b8", 
            "FUN_080078f4", 
            "FUN_08008640", 
            "FUN_08002828", 
            "FUN_08008bf0", 
            "FUN_0800b430", 
            "FUN_080018cc", 
            "FUN_08008c30", 
            "FUN_08009054", 
            "FUN_0800854c", 
            "FUN_08009318", 
            "FUN_080098d0", 
            "FUN_08008590", 
            "FUN_08008eec"
        ], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x08001994", 
        "calling": [
            "FUN_08001d4c"
        ], 
        "current_name": "FUNC_08001994"
    }, 
    "FUN_08007854": {
        "renaming": {
            "param_1": "bit_index", 
            "FUN_08007854": "get_bit_at_index_08007854"
        }, 
        "code": "uint get_bit_at_index_08007854(uint bit_index)\\n{\\n  // Calculate the index of the array and the bit to retrieve\\n  int array_index = (int)bit_index >> 4;\\n  int bit_offset = bit_index & 0xf;\\n  // Retrieve the bit at the specified index from the array\\n  uint bit_value = *(uint *)(array_index * 0x400 + 0x40020010) >> bit_offset & 1;\\n  return bit_value;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007854", 
        "calling": [
            "FUN_08007884"
        ], 
        "imported": true, 
        "current_name": "get_bit_at_index_08007854"
    }, 
    "FUN_08004900": {
        "renaming": {
            "param_1": "device_name", 
            "FUN_08004900": "print_device_information_08004900", 
            "PTR_DAT_0800493c": "end_of_device_info_prompt", 
            "print_abs_value_080037fc": "print_device_id", 
            "PTR_DAT_08004938": "device_id_prompt", 
            "param_2": "device_id", 
            "send_string_to_device_0800369c": "send_device_id", 
            "send_string_to_device_080036c6": "send_string_to_device", 
            "PTR_DAT_08004934": "device_name_prompt"
        }, 
        "code": "void print_device_information_08004900(undefined device_name, undefined4 device_id)\\n{\\n  send_string_to_device(device_name);\\n  print_device_id(device_id);\\n  send_end_of_device_info();\\n  return;\\n}", 
        "called": [
            "FUN_080036c6", 
            "FUN_0800369c", 
            "FUN_080037fc"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08004900", 
        "calling": [
            "FUN_08003b98"
        ], 
        "imported": true, 
        "current_name": "print_device_information_08004900"
    }, 
    "FUN_08005318": {
        "renaming": {
            "FUN_08005318": "do_nothing_08005318"
        }, 
        "code": "void do_nothing_08005318(void)\\n{\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005318", 
        "calling": [
            "FUN_08005790"
        ], 
        "imported": true, 
        "current_name": "do_nothing_08005318"
    }, 
    "FUN_08004228": {
        "renaming": {
            "FUN_08004228": "send_help_message_08004228", 
            "PTR_s__Grbl_0_8c______for_help__08004238": "help_message"
        }, 
        "code": "void send_help_message_08004228(void)\\n{\\n  send_string_to_device(PTR_s__Grbl_0_8c______for_help__08004238);\\n  return;\\n}", 
        "called": [
            "FUN_080036c6"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08004228", 
        "calling": [
            "FUN_080039a0"
        ], 
        "imported": true, 
        "current_name": "send_help_message_08004228"
    }, 
    "FUN_08009b24": {
        "renaming": {
            "FUN_08009b24": "FUNC_08009b24"
        }, 
        "code": "\nuint FUNC_08009b24(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  undefined4 uVar5;\n  int iVar6;\n  uint uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  undefined8 uVar13;\n  int local_3c;\n  \n  uVar1 = DAT_08009d70;\n  param_2 = param_2 & 0x7fffffff;\n  param_4 = param_4 & 0x7fffffff;\n  uVar3 = param_1;\n  uVar7 = param_2;\n  if (param_2 < param_4) {\n    uVar3 = param_3;\n    param_3 = param_1;\n    uVar7 = param_4;\n    param_4 = param_2;\n  }\n  if (0x3c00000 < (int)(uVar7 - param_4)) {\n    uVar3 = FUNC_080082d4(uVar3,uVar7,param_3,param_4);\n    return uVar3;\n  }\n  if (DAT_08009d68 < (int)uVar7) {\n    if (DAT_08009d74 < (int)uVar7) {\n      if ((uVar7 & 0xfffff | uVar3) != 0) {\n        uVar3 = FUNC_080082d4(uVar3,uVar7,param_3,param_4);\n      }\n      if ((param_4 ^ 0x7ff00000 | param_3) != 0) {\n        return uVar3;\n      }\n      return param_3;\n    }\n    uVar7 = uVar7 + 0xda800000;\n    param_4 = param_4 + 0xda800000;\n    local_3c = 600;\n  }\n  else {\n    local_3c = 0;\n  }\n  uVar11 = CONCAT44(uVar7,uVar3);\n  uVar10 = CONCAT44(param_4,param_3);\n  if ((int)param_4 <= DAT_08009d6c) {\n    if ((int)param_4 < 0x100000) {\n      if ((param_4 | param_3) == 0) {\n        return uVar3;\n      }\n      uVar10 = FUNC_08008640(param_3,param_4,0,DAT_08009d70);\n      uVar11 = FUNC_08008640(uVar3,uVar7,0,uVar1);\n      local_3c = local_3c + -0x3fe;\n    }\n    else {\n      uVar7 = uVar7 + 0x25800000;\n      uVar11 = CONCAT44(uVar7,uVar3);\n      param_4 = param_4 + 0x25800000;\n      uVar10 = CONCAT44(param_4,param_3);\n      local_3c = local_3c + -600;\n    }\n  }\n  uVar9 = (undefined4)((ulonglong)uVar11 >> 0x20);\n  uVar8 = (undefined4)uVar11;\n  iVar6 = (int)((ulonglong)uVar10 >> 0x20);\n  uVar5 = (undefined4)uVar10;\n  uVar10 = FUNC_080082d0(uVar8,uVar9,uVar5,iVar6);\n  iVar4 = (int)((ulonglong)uVar10 >> 0x20);\n  uVar1 = (undefined4)uVar10;\n  iVar2 = is_end_of_input_08008b24(uVar5,iVar6,uVar1,iVar4);\n  if (iVar2 == 0) {\n    uVar10 = FUNC_08008640(0,param_4,0);\n    uVar11 = FUNC_08008640(uVar1,iVar4 + -0x80000000,uVar1,iVar4);\n    uVar12 = FUNC_080082d4(uVar8,uVar9,uVar8,uVar9);\n    uVar12 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),0,uVar7 + 0x100000);\n    uVar12 = FUNC_08008640((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),uVar5,iVar6);\n    uVar13 = FUNC_080082d0(uVar5,iVar6,0,param_4);\n    uVar13 = FUNC_08008640((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),0,uVar7 + 0x100000);\n    uVar12 = FUNC_080082d4((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar13,\n                          (int)((ulonglong)uVar13 >> 0x20));\n    uVar11 = FUNC_080082d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                          (int)((ulonglong)uVar12 >> 0x20));\n    FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                 (int)((ulonglong)uVar11 >> 0x20));\n    uVar10 = FUNC_0800a1bc();\n  }\n  else {\n    uVar10 = FUNC_08008640(0,uVar7,0,uVar7);\n    uVar11 = FUNC_08008640(uVar5,iVar6 + -0x80000000,uVar5,iVar6);\n    uVar12 = FUNC_080082d4(uVar8,uVar9,0,uVar7);\n    uVar13 = FUNC_080082d0(uVar8,uVar9,0,uVar7);\n    uVar12 = FUNC_08008640((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar13,\n                          (int)((ulonglong)uVar13 >> 0x20));\n    uVar11 = FUNC_080082d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                          (int)((ulonglong)uVar12 >> 0x20));\n    FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                 (int)((ulonglong)uVar11 >> 0x20));\n    uVar10 = FUNC_0800a1bc();\n  }\n  uVar3 = (uint)uVar10;\n  if (local_3c != 0) {\n    uVar3 = FUNC_08008640(uVar3,(int)((ulonglong)uVar10 >> 0x20),0,local_3c * 0x100000 + 0x3ff00000);\n  }\n  return uVar3;\n}\n\n", 
        "called": [
            "FUN_08008b24", 
            "FUN_0800a1bc", 
            "FUN_08008640", 
            "FUN_080082d0", 
            "FUN_080082d4"
        ], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x08009b24", 
        "calling": [
            "FUN_0800981c"
        ], 
        "current_name": "FUNC_08009b24"
    }, 
    "FUN_080076c8": {
        "renaming": {
            "param_1": "num", 
            "PTR_": "ptr", 
            "DAT_": "mask", 
            "FUN_080076c8": "updateBit_080076c8"
        }, 
        "code": "void updateBit_080076c8(uint num)\\n{\\n    uint* PTR_ = (uint*)((int)num >> 4) * 0x400 + 0x40020014;\\n    uint DAT_ = 1 << (num & 0xf);\\n    *PTR_ = (*PTR_) ^ DAT_;\\n    return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080076c8", 
        "calling": [
            "FUN_08007756"
        ], 
        "imported": true, 
        "current_name": "updateBit_080076c8"
    }, 
    "FUN_0800530c": {
        "renaming": {
            "FUN_0800530c": "doNothing_0800530c"
        }, 
        "code": "void doNothing_0800530c(void)\\n{\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800530c", 
        "calling": [
            "FUN_080057e4"
        ], 
        "imported": true, 
        "current_name": "doNothing_0800530c"
    }, 
    "FUN_08006a8c": {
        "renaming": {
            "DAT_08006abc": "array_base_address", 
            "param_1": "bit_index", 
            "PTR_DAT_08006abc": "array_ptr", 
            "FUN_08006a8c": "set_bit_in_array_08006a8c"
        }, 
        "code": "void set_bit_in_array_08006a8c(byte bit_index) {\\n    int* PTR_DAT_08006abc = (int*)(DAT_08006abc + (((uint)(int)(char)bit_index >> 5) + 0x60) * 4);\\n    int bit_mask = 1 << (bit_index & 0x1f);\\n    *PTR_DAT_08006abc = bit_mask;\\n    return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006a8c", 
        "calling": [
            "FUN_08006dfe"
        ], 
        "imported": true, 
        "current_name": "set_bit_in_array_08006a8c"
    }, 
    "FUN_0800283a": {
        "renaming": {
            "setValuesInGlobalArray_080035ec": "set_values_in_global_array", 
            "*(undefined4 *)(PTR_DAT_08002868 + 8)": "second_value", 
            "*(undefined4 *)(PTR_DAT_08002868 + 0xc)": "third_value", 
            "*(undefined4 *)(PTR_DAT_08002868 + 4)": "first_value", 
            "FUN_0800283a": "set_and_store_twos_complement_0800283a", 
            "calculate_and_store_twos_complement_080004fc": "calculate_and_store_twos_complement"
        }, 
        "code": "void set_and_store_twos_complement_0800283a(void)\\n{\\n  int *(undefined4 *)(PTR_DAT_08002868 + 4) = *(int *)(PTR_DAT_08002868 + 4);\\n  int *(undefined4 *)(PTR_DAT_08002868 + 8) = *(int *)(PTR_DAT_08002868 + 8);\\n  int *(undefined4 *)(PTR_DAT_08002868 + 0xc) = *(int *)(PTR_DAT_08002868 + 0xc);\\n  setValuesInGlobalArray_080035ec(*(undefined4 *)(PTR_DAT_08002868 + 4), *(undefined4 *)(PTR_DAT_08002868 + 8), *(undefined4 *)(PTR_DAT_08002868 + 0xc));\\n  calculate_and_store_twos_complement_080004fc(*(undefined4 *)(PTR_DAT_08002868 + 4), *(undefined4 *)(PTR_DAT_08002868 + 8), *(undefined4 *)(PTR_DAT_08002868 + 0xc));\\n  return;\\n}", 
        "called": [
            "FUN_080035ec", 
            "FUN_080004fc"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800283a", 
        "calling": [
            "FUN_08001ddc", 
            "FUN_080024c4"
        ], 
        "imported": true, 
        "current_name": "set_and_store_twos_complement_0800283a"
    }, 
    "FUN_0800881c": {
        "renaming": {
            "bVar4": "var_7", 
            "uVar1": "var_1", 
            "param_1": "input_param_1", 
            "unaff_r4": "var_4", 
            "param_2": "input_param_2", 
            "param_3": "input_param_3", 
            "param_4": "input_param_4", 
            "uVar3": "var_3", 
            "uVar2": "var_2", 
            "FUN_0800881c": "calculate_result_0800881c", 
            "in_r12": "var_6"
        }, 
        "code": "ulonglong calculate_result_0800881c(uint input_param_1, uint input_param_2, uint input_param_3, uint input_param_4) {\\n  uint var_1;\\n  uint var_2;\\n  uint var_3;\\n  uint var_4;\\n  uint var_5;\\n  uint var_6;\\n  bool var_7;\\n  var_2 = input_param_4 >> 0x14;\\n  var_3 = input_param_2 & 0x80000000;\\n  var_6 = 0x7ff8000000000000;\\n  if (input_param_1 != input_param_3 && var_2 != input_param_3) {\\n    var_7 = (input_param_1 | input_param_2 << 1) == 0;\\n    if (!var_7) {\\n      var_7 = (input_param_3 | input_param_4 << 1) == 0;\\n    }\\n    if (var_7) {\\n      return (ulonglong)((input_param_2 ^ input_param_4) & 0x80000000) << 0x20;\\n    }\\n    if (input_param_1 == 0) {\\n      do {\\n        var_1 = input_param_1 & 0x80000000;\\n        input_param_1 = input_param_1 << 1;\\n        input_param_2 = input_param_2 * 2 + (uint)(var_1 != 0);\\n      } while ((input_param_2 & 0x100000) == 0);\\n      input_param_2 = input_param_2 | var_3;\\n      if (var_2 != 0) {\\n        return CONCAT44(input_param_2, input_param_1);\\n      }\\n    }\\n    do {\\n      var_2 = input_param_3 & 0x80000000;\\n      input_param_3 = input_param_3 << 1;\\n      input_param_4 = input_param_4 * 2 + (uint)(var_2 != 0);\\n    } while ((input_param_4 & 0x100000) == 0);\\n    return CONCAT44(input_param_2, input_param_1);\\n  }\\n  var_7 = (input_param_1 | input_param_2 << 1) == 0;\\n  if (var_7) {\\n    input_param_2 = input_param_4;\\n    input_param_1 = input_param_3;\\n  }\\n  if (!var_7) {\\n    var_7 = (input_param_3 | input_param_4 << 1) == 0;\\n  }\\n  var_5 = input_param_2;\\n  if (((!var_7) && ((input_param_1 != input_param_3 || ((input_param_2 | input_param_4 << 0xc) == 0)))) && ((var_2 != input_param_3 || (input_param_1 = input_param_3, var_5 = input_param_4, (input_param_3 | input_param_4 << 0xc) == 0)))) {\\n    return (ulonglong)((input_param_2 ^ input_param_4) & 0x80000000 | 0x7ff00000) << 0x20;\\n  }\\n  return CONCAT44(var_5, input_param_1) | var_6;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800881c", 
        "calling": [
            "FUN_08008640"
        ], 
        "imported": true, 
        "current_name": "calculate_result_0800881c"
    }, 
    "FUN_08004bc0": {
        "renaming": {
            "FUN_08004bc0": "set_memory_checksum_08004bc0", 
            "param_1": "data", 
            "param_2": "value"
        }, 
        "code": "void set_memory_checksum_08004bc0(byte data, uint32_t value){\\n    uint32_t address = (ushort)data * 0x101 + 0x300;\\n    uint32_t size = 0x100;\\n    set_memory_with_checksum_08000374(address, value, size);\\n    return;\\n}", 
        "called": [
            "FUN_08000374"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08004bc0", 
        "calling": [
            "FUN_08004d2c", 
            "FUN_08003b98"
        ], 
        "imported": true, 
        "current_name": "set_memory_checksum_08004bc0"
    }, 
    "FUN_08008b4c": {
        "renaming": {
            "FUN_08008b4c": "check_for_zero_or_carry_flag_08008b4c", 
            "compare_and_return_uint_values_08008af0": "compare_and_return_uint_values", 
            "in_ZR": "zero_flag", 
            "in_CY": "carry_flag"
        }, 
        "code": "bool check_for_zero_or_carry_flag_08008b4c(void)\\n{\\n  bool zero_flag = compare_and_return_uint_values();\\n  bool carry_flag = (bool)in_CY;\\n  return !carry_flag || zero_flag;\\n}", 
        "called": [
            "FUN_08008af0"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08008b4c", 
        "calling": [
            "FUN_0800a5a0"
        ], 
        "imported": true, 
        "current_name": "check_for_zero_or_carry_flag_08008b4c"
    }, 
    "FUN_08004c2a": {
        "renaming": {
            "FUN_08004c2a": "initializeMemory_08004c2a", 
            "PTR_DAT_08004c44": "dataPointer", 
            "set_memory_with_checksum_08000374": "setMemoryWithChecksum", 
            "set_memory_value_08000340": "setMemoryValue"
        }, 
        "code": "void initializeMemory_08004c2a(void)\\n{\\n  setMemoryValue(0, 5);\\n  setMemoryWithChecksum(1, PTR_DAT_08004c44, 0x40);\\n  return;\\n}", 
        "called": [
            "FUN_08000374", 
            "FUN_08000340"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08004c2a", 
        "calling": [
            "FUN_08004c48", 
            "FUN_08004e30"
        ], 
        "imported": true, 
        "current_name": "initializeMemory_08004c2a"
    }, 
    "FUN_0800826a": {
        "renaming": {
            "FUN_0800826a": "send_byte_to_device_0800826a", 
            "param_1": "data"
        }, 
        "code": "int send_byte_to_device_0800826a(unsigned char data){\n                      send_byte_to_device_0800826a_08007e1c(data);\n                      return 0;\n                  }", 
        "called": [
            "FUN_08007e1c"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800826a", 
        "calling": [], 
        "imported": true, 
        "current_name": "send_byte_to_device_0800826a"
    }, 
    "FUN_08008b60": {
        "renaming": {
            "FUN_08008b60": "is_end_of_string_reached_08008b60", 
            "in_CY": "current_char"
        }, 
        "code": "bool is_end_of_string_reached_08008b60(void)\\n{\\n  char current_char;\\n  compare_and_return_uint_values();\\n  return current_char == '\\0';\\n}", 
        "called": [
            "FUN_08008af0"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08008b60", 
        "calling": [
            "FUN_08003004", 
            "FUN_0800af78", 
            "FUN_08009318", 
            "FUN_080094c0"
        ], 
        "imported": true, 
        "current_name": "is_end_of_string_reached_08008b60"
    }, 
    "FUN_08005324": {
        "renaming": {
            "FUN_08005324": "calculateAndUpdateValue_08005324", 
            "param_1": "value", 
            "minimumValue": "minimumValue", 
            "local_14": "calculatedValue"
        }, 
        "code": "void calculateAndUpdateValue_08005324(uint value) {\\n  uint minimumValue = 800;\\n  uint calculatedValue = DAT_08005358 / (value < minimumValue ? minimumValue : value);\\n  *(uint *)(PTR_DAT_0800535c + 0x14) = calculatedValue;\\n  updateGlobalValue_08007bf0(calculatedValue);\\n  return;\\n}", 
        "called": [
            "FUN_08007bf0"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005324", 
        "calling": [
            "FUN_080053a0", 
            "FUN_08005814", 
            "FUN_080058a0"
        ], 
        "imported": true, 
        "current_name": "calculateAndUpdateValue_08005324"
    }, 
    "FUN_08000310": {
        "renaming": {
            "PTR_DAT_0800033c": "memory_values", 
            "FUN_08000310": "get_memory_value_08000310", 
            "param_1": "index", 
            "initializeMemory_080002f0": "initialize_memory", 
            "PTR_DAT_08000338": "memory_initialized"
        }, 
        "code": "uint32_t get_memory_value_08000310(uint32_t index) {\\n  if (*PTR_DAT_08000338 == 0) {\\n    initialize_memory();\\n  }\\n  return PTR_DAT_0800033c[index & 0x3ff];\\n}", 
        "called": [
            "FUN_080002f0"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08000310", 
        "calling": [
            "FUN_080003ec", 
            "FUN_08004dd2"
        ], 
        "imported": true, 
        "current_name": "get_memory_value_08000310"
    }, 
    "FUN_08005208": {
        "renaming": {
            "FUN_08005208": "do_nothing_08005208"
        }, 
        "code": "void do_nothing_08005208(void)\\n{\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005208", 
        "calling": [
            "FUN_0800525c"
        ], 
        "imported": true, 
        "current_name": "do_nothing_08005208"
    }, 
    "FUN_08007a70": {
        "renaming": {
            "local_c": "index", 
            "DAT_08007acc": "PTR_DAT_08007acc", 
            "param_1": "data_value", 
            "FUN_08007a70": "set_data_value_and_set_bit_in_array_08007a70", 
            "DAT_08007ac8": "PTR_DAT_08007ac8", 
            "param_2": "param_2", 
            "param_3": "param_3"
        }, 
        "code": "void set_data_value_and_set_bit_in_array_08007a70(int data_value, int param_2, int param_3) {\\n  int index;\\n  if (data_value == 0x40000000) {\\n    index = 0x1c;\\n  }\\n  else if (data_value == DAT_08007ac8) {\\n    index = 0x1d;\\n  }\\n  else {\\n    if (data_value != DAT_08007acc) {\\n      return;\\n    }\\n    index = 0x1e;\\n  }\\n  set_data_value_at_index_08006cf6(index, param_2, param_3);\\n  setBitInArray_080079e0(index);\\n  return;\\n}", 
        "called": [
            "FUN_080079e0", 
            "FUN_08006cf6"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007a70", 
        "calling": [
            "FUN_08007ad0"
        ], 
        "imported": true, 
        "current_name": "set_data_value_and_set_bit_in_array_08007a70"
    }, 
    "FUN_0800b5b0": {
        "renaming": {
            "FUN_0800b5b0": "do_nothing_0800b5b0"
        }, 
        "code": "void do_nothing_0800b5b0() {\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800b5b0", 
        "calling": [
            "FUN_080001ac", 
            "FUN_0800b3e8", 
            "FUN_08000188"
        ], 
        "imported": true, 
        "current_name": "do_nothing_0800b5b0"
    }, 
    "FUN_08002978": {
        "renaming": {
            "uVar1": "intermediate_result_1", 
            "param_1": "input_1", 
            "FUNC_08008590": "process_input", 
            "process_input_and_return_result_080098d0": "calculate_processed_input", 
            "FUN_08002978": "calculate_result_from_input_08002978", 
            "param_2": "input_2", 
            "FUNC_08008cdc": "calculate_something_2", 
            "param_3": "input_3", 
            "calculateFloat_08008c30": "calculate_float", 
            "FUNC_08008eec": "calculate_something_1", 
            "uVar3": "intermediate_result_4", 
            "uVar2": "intermediate_result_2", 
            "FUNC_08008cd8": "calculate_something_3"
        }, 
        "code": "float calculate_result_from_input_08002978(float input_1, float input_2, float input_3) {\\n  float intermediate_result_1 = FUNC_08008eec(input_2, input_2);\\n  float intermediate_result_2 = FUNC_08008cdc(input_1, input_1);\\n  intermediate_result_2 = FUNC_08008eec(intermediate_result_2, input_3);\\n  float intermediate_result_3 = FUNC_08008cd8(intermediate_result_1, intermediate_result_2);\\n  long long intermediate_result_4 = FUNC_08008590(intermediate_result_3);\\n  int processed_input_1 = (int)intermediate_result_4;\\n  int processed_input_2 = (int)((unsigned long long)intermediate_result_4 >> 0x20);\\n  float final_result = calculateFloat_08008c30(processed_input_1, processed_input_2);\\n  return final_result;\\n}", 
        "called": [
            "FUN_08008cdc", 
            "FUN_08008c30", 
            "FUN_080098d0", 
            "FUN_08008590", 
            "FUN_08008cd8", 
            "FUN_08008eec"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002978", 
        "calling": [
            "FUN_080029d8", 
            "FUN_08003004", 
            "FUN_08002afc"
        ], 
        "imported": true, 
        "current_name": "calculate_result_from_input_08002978"
    }, 
    "FUN_08009d78": {
        "renaming": {
            "FUN_08009d78": "FUNC_08009d78"
        }, 
        "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nint FUNC_08009d78(undefined4 param_1,uint param_2,undefined8 *param_3)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  int iVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  undefined4 local_50;\n  undefined4 uStack_4c;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  \n  uVar8 = param_2 & 0x7fffffff;\n  if ((int)uVar8 <= DAT_08009fb0) {\n    *(undefined4 *)param_3 = param_1;\n    *(uint *)((int)param_3 + 4) = param_2;\n    *(undefined4 *)(param_3 + 1) = 0;\n    *(undefined4 *)((int)param_3 + 0xc) = 0;\n    return 0;\n  }\n  if ((int)uVar8 <= DAT_08009fb4) {\n    if ((int)param_2 < 1) {\n      uVar10 = FUNC_080082d4(param_1,param_2,DAT_08009f88,DAT_08009f8c);\n      uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar1 = (undefined4)uVar10;\n      if (uVar8 != DAT_0800a1b8) {\n        uVar10 = FUNC_080082d4(uVar1,uVar3,DAT_0800a1b0,DAT_0800a1b4);\n        *param_3 = uVar10;\n        uVar10 = FUNC_080082d0(uVar1,uVar3);\n        uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800a1b0,DAT_0800a1b4\n                             );\n        param_3[1] = uVar10;\n        return -1;\n      }\n      uVar10 = FUNC_080082d4(uVar1,uVar3,DAT_0800a190,DAT_0800a194);\n      uVar1 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar11 = FUNC_080082d4((int)uVar10,uVar1,DAT_0800a198,DAT_0800a19c);\n      *param_3 = uVar11;\n      uVar10 = FUNC_080082d0((int)uVar10,uVar1);\n      uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800a198,DAT_0800a19c);\n      param_3[1] = uVar10;\n      return -1;\n    }\n    uVar10 = FUNC_080082d0();\n    uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar1 = (undefined4)uVar10;\n    if (uVar8 != DAT_08009fb8) {\n      uVar10 = FUNC_080082d0(uVar1,uVar3,DAT_08009f90,DAT_08009f94);\n      *param_3 = uVar10;\n      uVar10 = FUNC_080082d0(uVar1,uVar3);\n      uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08009f90,DAT_08009f94);\n      param_3[1] = uVar10;\n      return 1;\n    }\n    uVar10 = FUNC_080082d0(uVar1,uVar3,DAT_08009f98,DAT_08009f9c);\n    uVar1 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar11 = FUNC_080082d0((int)uVar10,uVar1,DAT_08009fa0,DAT_08009fa4);\n    *param_3 = uVar11;\n    uVar10 = FUNC_080082d0((int)uVar10,uVar1);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08009fa0,DAT_08009fa4);\n    param_3[1] = uVar10;\n    return 1;\n  }\n  if (DAT_08009fbc < (int)uVar8) {\n    if (DAT_08009fc0 < (int)uVar8) {\n      uVar10 = FUNC_080082d0(param_1,param_2,param_1,param_2);\n      param_3[1] = uVar10;\n      *param_3 = uVar10;\n      return 0;\n    }\n    iVar9 = ((int)uVar8 >> 0x14) + -0x416;\n    calculateValue_08008ba0();\n    local_40 = FUNC_0800856c();\n    uVar10 = FUNC_080082d0(param_1,uVar8 + iVar9 * -0x100000,(int)local_40,\n                          (int)((ulonglong)local_40 >> 0x20));\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08009fc4);\n    calculateValue_08008ba0();\n    local_38 = FUNC_0800856c();\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    local_30 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08009fc4);\n    check_input_is_not_null_char_08008b10((int)local_30,(int)((ulonglong)local_30 >> 0x20),0,0);\n    iVar9 = FUNC_0800a5a0(&local_40,param_3,iVar9);\n    if (-1 < (int)param_2) {\n      return iVar9;\n    }\n    *(int *)((int)param_3 + 4) = *(int *)((int)param_3 + 4) + -0x80000000;\n    *(int *)((int)param_3 + 0xc) = *(int *)((int)param_3 + 0xc) + -0x80000000;\n    return -iVar9;\n  }\n  uVar10 = doNothing_0800b2cc();\n  uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n  uVar11 = FUNC_08008640((int)uVar10,uVar3,DAT_08009fa8,DAT_08009fac);\n  FUNC_080082d4((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08009fcc);\n  iVar9 = calculateValue_08008ba0();\n  uVar11 = FUNC_0800856c();\n  uVar4 = (undefined4)((ulonglong)uVar11 >> 0x20);\n  uVar1 = (undefined4)uVar11;\n  uVar11 = FUNC_08008640(uVar1,uVar4,DAT_08009f88,DAT_08009f8c);\n  uVar10 = FUNC_080082d0((int)uVar10,uVar3,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n  uVar5 = (undefined4)((ulonglong)uVar10 >> 0x20);\n  uVar3 = (undefined4)uVar10;\n  uVar11 = FUNC_08008640(uVar1,uVar4,DAT_08009f90,DAT_08009f94);\n  if ((0x1f < iVar9) || (*(uint *)(PTR_DAT_08009fd0 + (iVar9 + -1) * 4) == uVar8)) {\n    uVar12 = FUNC_080082d0(uVar3,uVar5,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    if ((int)((uVar8 >> 0x14) - ((uint)((int)((ulonglong)uVar12 >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    uVar11 = FUNC_08008640(uVar1,uVar4,DAT_0800a190,DAT_0800a194);\n    uVar6 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar10 = FUNC_080082d0(uVar3,uVar5,(int)uVar11,uVar6);\n    uVar7 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar2 = (undefined4)uVar10;\n    uVar12 = FUNC_080082d0(uVar3,uVar5,uVar2,uVar7);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,uVar6);\n    uVar12 = FUNC_08008640(uVar1,uVar4,DAT_0800a198,DAT_0800a19c);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,\n                          (int)((ulonglong)uVar11 >> 0x20));\n    uVar12 = FUNC_080082d0(uVar2,uVar7,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    if ((int)(((int)uVar8 >> 0x14) - ((uint)((int)((ulonglong)uVar12 >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    uVar11 = FUNC_08008640(uVar1,uVar4,DAT_0800a1a0,DAT_0800a1a4);\n    uVar3 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar10 = FUNC_080082d0(uVar2,uVar7,(int)uVar11,uVar3);\n    uVar12 = FUNC_080082d0(uVar2,uVar7);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,uVar3);\n    uVar12 = FUNC_08008640(uVar1,uVar4,DAT_0800a1a8,DAT_0800a1ac);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,\n                          (int)((ulonglong)uVar11 >> 0x20));\n  }\n  uVar12 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                        (int)((ulonglong)uVar11 >> 0x20));\nLAB_0800a0ce:\n  uStack_4c = (undefined4)((ulonglong)uVar10 >> 0x20);\n  local_50 = (undefined4)uVar10;\n  *param_3 = uVar12;\n  uVar10 = FUNC_080082d0(local_50,uStack_4c);\n  uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                        (int)((ulonglong)uVar11 >> 0x20));\n  param_3[1] = uVar10;\n  if ((int)param_2 < 0) {\n    *(int *)param_3 = (int)uVar12;\n    *(int *)((int)param_3 + 4) = (int)((ulonglong)uVar12 >> 0x20) + -0x80000000;\n    *(int *)(param_3 + 1) = (int)uVar10;\n    *(int *)((int)param_3 + 0xc) = (int)((ulonglong)uVar10 >> 0x20) + -0x80000000;\n    iVar9 = -iVar9;\n  }\n  return iVar9;\n}\n\n", 
        "called": [
            "FUN_08008b10", 
            "FUN_0800a5a0", 
            "FUN_08008640", 
            "FUN_08008ba0", 
            "FUN_080082d0", 
            "FUN_0800b2cc", 
            "FUN_0800856c", 
            "FUN_080082d4"
        ], 
        "skipped": true, 
        "improved": false, 
        "entrypoint": "0x08009d78", 
        "calling": [
            "FUN_080096e8", 
            "FUN_08009410"
        ], 
        "current_name": "FUNC_08009d78"
    }, 
    "FUN_08003826": {
        "renaming": {
            "iVar1": "is_input_empty", 
            "bVar3": "byte_var_3", 
            "local_a": "remainder", 
            "acStack_1d": "result", 
            "param_1": "input", 
            "local_9": "i", 
            "FUN_08003826": "print_float_08003826", 
            "uVar2": "integer_part", 
            "uVar4": "index", 
            "local_24": "modified_input"
        }, 
        "code": "void print_float_08003826(uint input){\\n  int is_input_empty = is_input_empty_08009228(input,0);\\n  uint modified_input = input;\\n  if (is_input_empty != 0) {\\n    send_byte_to_device_08008250(0x2d);\\n    modified_input = input ^ 0x80000000;\\n  }\\n  for (byte i = PTR_DAT_08003970[0x3d]; i > 1; i -= 2) {\\n    modified_input = FUNC_08008eec(modified_input,DAT_08003974);\\n  }\\n  if (i != 0) {\\n    modified_input = FUNC_08008eec(modified_input,DAT_08003978);\\n  }\\n  uint integer_part = FUNC_08008cdc(modified_input,0x3f000000);\\n  byte decimal_point_index = (byte)PTR_DAT_08003970[0x3d] + 1;\\n  char result[14];\\n  result[decimal_point_index] = '.';\\n  byte index = decimal_point_index + 1;\\n  while (integer_part != 0) {\\n    if (index == PTR_DAT_08003970[0x3d] + 1) {\\n      index++;\\n    }\\n    uint remainder = integer_part % 10;\\n    integer_part = integer_part / 10;\\n    result[index] = remainder + '0';\\n    index++;\\n  }\\n  while (index < PTR_DAT_08003970[0x3d] + 1) {\\n    result[index] = '0';\\n    index++;\\n  }\\n  if (index == PTR_DAT_08003970[0x3d] + 1) {\\n    byte bVar3 = index + 1;\\n    index += 2;\\n    result[bVar3 + 1] = '0';\\n  }\\n  for (; index != 0; index--) {\\n    send_byte_to_device_08008250(result[index]);\\n  }\\n}", 
        "called": [
            "FUN_08008250", 
            "FUN_08008cdc", 
            "FUN_08009228", 
            "FUN_08009278", 
            "FUN_08008eec"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08003826", 
        "calling": [
            "FUN_08004250", 
            "FUN_080046d0", 
            "FUN_08004940", 
            "FUN_080044e8"
        ], 
        "imported": true, 
        "current_name": "print_float_08003826"
    }, 
    "FUN_0800923c": {
        "renaming": {
            "in_ZR": "is_ZR_nonzero", 
            "in_CY": "is_CY_zero", 
            "calculateResultAndReturnConcatenation_08009204_08009204": "calculate_result_and_return_concatenation", 
            "FUN_0800923c": "check_result_and_return_concatenation_0800923c"
        }, 
        "code": "bool check_result_and_return_concatenation_0800923c(void)\\n{\\n  bool is_CY_zero;\\n  bool is_ZR_nonzero;\\n  calculateResultAndReturnConcatenation_08009204_08009204();\\n  return !is_CY_zero || is_ZR_nonzero;\\n}", 
        "called": [
            "FUN_08009204"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800923c", 
        "calling": [
            "FUN_080005b4", 
            "FUN_08004e30", 
            "FUN_08001f00"
        ], 
        "imported": true, 
        "current_name": "check_result_and_return_concatenation_0800923c"
    }, 
    "FUN_08002afc": {
        "renaming": {
            "iVar1": "is_input_empty", 
            "param_1": "input1", 
            "param_2": "input2", 
            "FUN_08002afc": "process_input_08002afc", 
            "uVar3": "result2", 
            "uVar2": "result1"
        }, 
        "code": "void process_input_08002afc(int input1, int input2) {\\n  int is_input_empty;\\n  undefined4 result1;\\n  undefined4 result2;\\n  \\n  if (input1 != 0 && *(char *)(input1 + 0x25) == '\\0' && (is_input_empty = is_input_empty_08009228(*(undefined4 *)(input1 + 0x18), *(undefined4 *)(input2 + 0x18))) != 0) {\\n    result2 = *(undefined4 *)(input2 + 0x18);\\n    result1 = calculate_result_from_input_08002978(*(uint *)(PTR_DAT_08002ba4 + 0x20) ^ 0x80000000, *(undefined4 *)(input1 + 0x18), *(undefined4 *)(input1 + 0x20));\\n    is_input_empty = is_input_empty_08009228(result2, result1);\\n    if (is_input_empty != 0) {\\n      result2 = *(undefined4 *)(input2 + 0x18);\\n    }\\n    else {\\n      result2 = calculate_result_from_input_08002978(*(uint *)(PTR_DAT_08002ba4 + 0x20) ^ 0x80000000, *(undefined4 *)(input1 + 0x18), *(undefined4 *)(input1 + 0x20));\\n    }\\n    if (checkResultIsNotEmpty_08009214(result2, *(undefined4 *)(input2 + 0x18)) == 0) {\\n      *(undefined4 *)(input2 + 0x18) = result2;\\n      *(undefined *)(input2 + 0x24) = 1;\\n    }\\n  }\\n  return;\\n}", 
        "called": [
            "FUN_08002978", 
            "FUN_08009214", 
            "FUN_08009228"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002afc", 
        "calling": [
            "FUN_08002ba8"
        ], 
        "imported": true, 
        "current_name": "process_input_08002afc"
    }, 
    "FUN_08004c48": {
        "renaming": {
            "DAT_08004d10": "data1", 
            "DAT_08004d20": "data5", 
            "DAT_08004d1c": "data4", 
            "param_1": "data", 
            "FUN_08004c48": "initializeData_08004c48", 
            "DAT_08004d14": "data2", 
            "DAT_08004d24": "data6", 
            "DAT_08004d18": "data3", 
            "PTR_DAT_08004d0c": "ptrData", 
            "DAT_08004d28": "data7"
        }, 
        "code": "void initializeData_08004c48(char data)\\n{\\n    if (data != '\\0') {\\n        int* PTR_DAT_08004d0c = (int*) PTR_DAT_08004d0c;\\n        int DAT_08004d10 = DAT_08004d10;\\n        PTR_DAT_08004d0c[0] = DAT_08004d10;\\n        PTR_DAT_08004d0c[1] = DAT_08004d10;\\n        PTR_DAT_08004d0c[2] = DAT_08004d10;\\n        PTR_DAT_08004d0c[13] = 10;\\n        PTR_DAT_08004d0c[4] = DAT_08004d14;\\n        PTR_DAT_08004d0c[5] = DAT_08004d18;\\n        PTR_DAT_08004d0c[8] = DAT_08004d1c;\\n        PTR_DAT_08004d0c[7] = DAT_08004d20;\\n        *(short*)(PTR_DAT_08004d0c + 6) = 0;\\n        *(short*)(PTR_DAT_08004d0c + 6) = 0xa80;\\n        PTR_DAT_08004d0c[9] = DAT_08004d24;\\n    }\\n    PTR_DAT_08004d0c[40] = 0;\\n    PTR_DAT_08004d0c[40] |= 2;\\n    PTR_DAT_08004d0c[40] |= 0x10;\\n    *(short*)(PTR_DAT_08004d0c + 42) = 0;\\n    PTR_DAT_08004d0c[44] = DAT_08004d28;\\n    PTR_DAT_08004d0c[48] = DAT_08004d14;\\n    *(short*)(PTR_DAT_08004d0c + 52) = 100;\\n    PTR_DAT_08004d0c[56] = 0x3f800000;\\n    PTR_DAT_08004d0c[60] = 0x19;\\n    PTR_DAT_08004d0c[61] = 3;\\n    PTR_DAT_08004d0c[62] = 0x19;\\n    initializeMemory_08004c2a();\\n    return;\\n}", 
        "called": [
            "FUN_08004c2a"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08004c48", 
        "calling": [
            "FUN_080051b4", 
            "FUN_08004dd2"
        ], 
        "imported": true, 
        "current_name": "initializeData_08004c48"
    }, 
    "FUN_080002a0": {
        "renaming": {
            "param_1": "value", 
            "FUN_080002a0": "wait_for_value_to_be_greater_than_sum_of_value_and_parameter_080002a0"
        }, 
        "code": "void wait_for_value_to_be_greater_than_sum_of_value_and_parameter_080002a0(int value)\\n{\\n  wait_for_value_to_be_greater_than_sum_of_value_and_parameter_080002a0(value);\\n  return;\\n}", 
        "called": [
            "FUN_08005a98"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080002a0", 
        "calling": [
            "FUN_08002408"
        ], 
        "imported": true, 
        "current_name": "wait_for_value_to_be_greater_than_sum_of_value_and_parameter_080002a0"
    }, 
    "FUN_08009250": {
        "renaming": {
            "in_ZR": "zero_result", 
            "in_CY": "carry_result", 
            "calculate_and_concatenate_results_080091fc": "calculate_and_concatenate_results", 
            "FUN_08009250": "check_results_08009250"
        }, 
        "code": "bool check_results_08009250(void)\\n{\\n  bool zero_result;\\n  bool carry_result;\\n  calculate_and_concatenate_results();\\n  return !(bool)carry_result || (bool)zero_result;\\n}", 
        "called": [
            "FUN_080091fc"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08009250", 
        "calling": [
            "FUN_08003004", 
            "FUN_08001f00"
        ], 
        "imported": true, 
        "current_name": "check_results_08009250"
    }, 
    "FUN_0800640c": {
        "renaming": {
            "local_c": "local_5", 
            "DAT_080064b0": "data_ptr_0", 
            "param_1": "data_type", 
            "local_1c": "local_1", 
            "local_18": "local_2", 
            "param_2": "param_2", 
            "param_3": "param_3", 
            "local_10": "local_3", 
            "FUN_0800640c": "process_data_0800640c", 
            "DAT_080064b4": "data_ptr_4", 
            "local_14": "local_4", 
            "DAT_080064b8": "data_ptr_8"
        }, 
        "code": "void process_data_0800640c(int data_type, uint32_t param_2, uint32_t param_3) {\\n  uint32_t* data_ptr = (data_type == 0) ? (uint32_t*)DAT_080064b4 : (uint32_t*)DAT_080064b8;\\n  uint32_t flag = (data_type == 0) ? 1 : 4;\\n  *(uint32_t*)(DAT_080064b0 + 0x30) |= flag;\\n  uint32_t local_1 = (data_type == 0) ? 0x100 : 0x200;\\n  uint32_t local_2 = 2;\\n  uint32_t local_3 = 3;\\n  uint32_t local_4 = 0;\\n  uint32_t local_5 = 0;\\n  FUNC_08006e88(data_ptr, &local_1);\\n  uint32_t mask = (data_type == 0) ? 0xf89fffff : 0x7ffffff;\\n  *(uint32_t*)(DAT_080064b0 + 8) = (param_2 | (param_3 << 3)) | (*(uint32_t*)(DAT_080064b0 + 8) & mask);\\n}", 
        "called": [
            "FUN_08006e88"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800640c", 
        "calling": [], 
        "imported": true, 
        "current_name": "process_data_0800640c"
    }, 
    "FUN_08008af0": {
        "renaming": {
            "param_1": "value1", 
            "param_2": "value2", 
            "param_3": "value3", 
            "param_4": "value4", 
            "FUN_08008af0": "compare_and_return_uint_values_08008af0"
        }, 
        "code": "void compare_and_return_uint_values_08008af0(uint32_t value1, uint32_t value2, uint32_t value3, uint32_t value4)\\n{\\n  compare_and_return_uint_values_08008af0_08008b00_08008b00(value3, value4, value1, value2);\\n  return;\\n}", 
        "called": [
            "FUN_08008b00"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08008af0", 
        "calling": [
            "FUN_08008b4c", 
            "FUN_08008b60"
        ], 
        "imported": true, 
        "current_name": "compare_and_return_uint_values_08008af0"
    }, 
    "FUN_08006e1a": {
        "renaming": {
            "FUN_08006e1a": "is_bit_set_08006e1a", 
            "uVar1": "is_set", 
            "param_1": "bit_index", 
            "isBitSet_08006ac0": "check_bit"
        }, 
        "code": "int is_bit_set_08006e1a(int bit_index) {\\n  int is_set = isBitSet_08006ac0(bit_index);\\n  return is_set;\\n}", 
        "called": [
            "FUN_08006ac0"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08006e1a", 
        "calling": [], 
        "imported": true, 
        "current_name": "is_bit_set_08006e1a"
    }, 
    "FUN_080052ac": {
        "renaming": {
            "*PTR_080052d8": "old_param", 
            "0xfffffaaf": "mask", 
            "FUN_080052ac": "update_param_080052ac", 
            "param_1": "new_param", 
            "DAT_080052d8": "param_data", 
            "PTR_080052d8": "param_ptr"
        }, 
        "code": "void update_param_080052ac(uint new_param)\\n{\\n  uint* PTR_080052d8 = (uint*)(DAT_080052d8 + 0x14);\\n  uint *PTR_080052d8 = *PTR_080052d8;\\n  uint mask = 0xfffffaaf;\\n  *PTR_080052d8 = (new_param | (*PTR_080052d8 & mask));\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080052ac", 
        "calling": [
            "FUN_08005760", 
            "FUN_08005778", 
            "FUN_0800583c"
        ], 
        "imported": true, 
        "current_name": "update_param_080052ac"
    }, 
    "FUN_08008286": {
        "renaming": {
            "FUN_08008286": "process_next_byte_08008286", 
            "iVar2": "bit_set", 
            "uVar1": "byte", 
            "getByteFromGlobal_08007e84": "get_next_byte", 
            "isBitSet_08007e58": "is_bit_set", 
            "process_byte_08005900": "process_byte"
        }, 
        "code": "uint8_t process_next_byte_08008286()\\n{\\n  uint8_t byte;\\n  int bit_set = isBitSet_08007e58();\\n  if (bit_set) {\\n    byte = getByteFromGlobal_08007e84();\\n    int result = process_byte(byte);\\n    if (result == 0) {\\n      return byte;\\n    }\\n  }\\n  return 0xff;\\n}", 
        "called": [
            "FUN_08007e84", 
            "FUN_08007e58", 
            "FUN_08005900"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08008286", 
        "calling": [
            "FUN_08003f34"
        ], 
        "imported": true, 
        "current_name": "process_next_byte_08008286"
    }, 
    "FUN_0800b5bc": {
        "renaming": {
            "FUN_0800b5bc": "doNothing_0800b5bc"
        }, 
        "code": "void doNothing_0800b5bc(void)\\n{\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800b5bc", 
        "calling": [], 
        "imported": true, 
        "current_name": "doNothing_0800b5bc"
    }, 
    "FUN_08008b74": {
        "renaming": {
            "FUN_08008b74": "is_valid_input_08008b74", 
            "param_1": "input1", 
            "param_2": "input2", 
            "param_3": "input3", 
            "param_4": "input4"
        }, 
        "code": "int is_valid_input_08008b74(uint input1, int input2, uint input3, int input4) {\\n  int is_input2_valid = (((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0));\\n  int is_input4_valid = (((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0)));\\n  if (is_input2_valid && is_input4_valid) {\\n    return 1;\\n  }\\n  return 0;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08008b74", 
        "calling": [
            "FUN_080098d0"
        ], 
        "imported": true, 
        "current_name": "is_valid_input_08008b74"
    }, 
    "FUN_0800b524": {
        "renaming": {
            "iVar4": "list_ptr", 
            "iVar5": "list_end_ptr", 
            "FUN_0800b524": "add_param_to_list_0800b524", 
            "param_1": "param_type", 
            "param_2": "param_value", 
            "param_3": "param_3", 
            "param_4": "param_4", 
            "puVar1": "global_list_ptr_ptr", 
            "uVar3": "bit_index", 
            "uVar2": "return_value", 
            "uVar6": "list_size", 
            "bit_mask": "bit_mask"
        }, 
        "code": "int add_param_to_list_0800b524(int param_type, int param_value, int param_3, int param_4) {\\n  uint list_size;\\n  int list_ptr;\\n  int list_end_ptr;\\n  uint bit_index;\\n  uint bit_mask;\\n  list_ptr = *global_list_ptr_ptr;\\n  do_nothing(*global_list_ptr_ptr);\\n  list_end_ptr = *(int *)(list_ptr + 0x148);\\n  if (list_end_ptr == 0) {\\n    list_end_ptr = list_ptr + 0x14c;\\n    *(int *)(list_ptr + 0x148) = list_end_ptr;\\n  }\\n  list_size = *(uint *)(list_end_ptr + 4);\\n  if ((int)list_size < 0x20) {\\n    if (param_type != 0) {\\n      list_ptr = list_end_ptr + list_size * 4;\\n      *(int *)(list_ptr + 0x88) = param_3;\\n      bit_mask = 1 << (list_size & 0xff);\\n      *(uint *)(list_end_ptr + 0x188) = *(uint *)(list_end_ptr + 0x188) | bit_mask;\\n      *(int *)(list_ptr + 0x108) = param_4;\\n      if (param_type == 2) {\\n        *(uint *)(list_end_ptr + 0x18c) = bit_mask | *(uint *)(list_end_ptr + 0x18c);\\n      }\\n    }\\n    do_nothing(*global_list_ptr_ptr);\\n    *(uint *)(list_end_ptr + 4) = list_size + 1;\\n    *(int *)(list_end_ptr + (list_size + 2) * 4) = param_value;\\n    do_nothing(*global_list_ptr_ptr);\\n    return 0;\\n  }\\n  else {\\n    do_nothing(*global_list_ptr_ptr);\\n    return -1;\\n  }\\n}", 
        "called": [
            "FUN_0800b520", 
            "FUN_0800b51c"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800b524", 
        "calling": [
            "FUN_0800b4d0"
        ], 
        "imported": true, 
        "current_name": "add_param_to_list_0800b524"
    }, 
    "FUN_08005214": {
        "renaming": {
            "FUN_08005214": "do_nothing_08005214"
        }, 
        "code": "void do_nothing_08005214(void)\\n{\\n  return;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08005214", 
        "calling": [
            "FUN_08005250"
        ], 
        "imported": true, 
        "current_name": "do_nothing_08005214"
    }, 
    "FUN_08007ea4": {
        "renaming": {
            "DAT_08007f44": "FLAG_3", 
            "DAT_08007f50": "FLAG_6", 
            "DAT_08007f40": "FLAG_2", 
            "param_1": "flag_value", 
            "FUN_08007ea4": "set_flag_08007ea4", 
            "DAT_08007f4c": "FLAG_5", 
            "DAT_08007f3c": "PTR_FLAG", 
            "DAT_08007f38": "FLAG_1", 
            "DAT_08007f48": "FLAG_4"
        }, 
        "code": "void set_flag_08007ea4(uint flag_value) {\\n  uint* flag_44 = (uint*)(DAT_08007f3c + 0x44);\\n  uint* flag_40 = (uint*)(DAT_08007f3c + 0x40);\\n  switch(flag_value) {\\n    case DAT_08007f38:\\n      *flag_44 |= 0x10;\\n      break;\\n    case DAT_08007f40:\\n      *flag_40 |= 0x20000;\\n      break;\\n    case DAT_08007f44:\\n      *flag_40 |= 0x40000;\\n      break;\\n    case DAT_08007f48:\\n      *flag_40 |= 0x80000;\\n      break;\\n    case DAT_08007f4c:\\n      *flag_40 |= 0x100000;\\n      break;\\n    case DAT_08007f50:\\n      *flag_44 |= 0x20;\\n      break;\\n  }\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007ea4", 
        "calling": [
            "FUN_08008190"
        ], 
        "imported": true, 
        "current_name": "set_flag_08007ea4"
    }, 
    "FUN_08007756": {
        "renaming": {
            "uVar1": "currentValue", 
            "process_data_08007930": "processData", 
            "FUN_08007756": "checkAndUpdateData_08007756", 
            "getValueFromPointer_08005a84": "getValue", 
            "updateBit_080076c8": "setBit", 
            "incrementValueInGlobalInt_08005a68": "incrementGlobalValue"
        }, 
        "code": "void checkAndUpdateData_08007756(void)\\n{\\n  uint currentValue = getValueFromPointer_08005a84();\\n  if ((currentValue & 0x1ff) == 0) {\\n    setBit(0x3c);\\n  }\\n  if ((currentValue & 0xf) == 0) {\\n    processData();\\n  }\\n  incrementValueInGlobalInt_08005a68();\\n  return;\\n}", 
        "called": [
            "FUN_08005a84", 
            "FUN_080076c8", 
            "FUN_08007930", 
            "FUN_08005a68"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007756", 
        "calling": [], 
        "imported": true, 
        "current_name": "checkAndUpdateData_08007756"
    }, 
    "FUN_0800b520": {
        "renaming": {
            "FUN_0800b520": "do_nothing_0800b520"
        }, 
        "code": "void do_nothing_0800b520(void) {\\n  return;\\n}\\n", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800b520", 
        "calling": [
            "FUN_0800b524"
        ], 
        "imported": true, 
        "current_name": "do_nothing_0800b520"
    }, 
    "FUN_0800423c": {
        "renaming": {
            "PTR_s_____view_Grbl_settings______view_0800424c": "PTR_s_____view_Grbl_settings______view", 
            "FUN_0800423c": "printGrblSettings_0800423c", 
            "send_string_to_device_080036c6": "send_string_to_device"
        }, 
        "code": "void printGrblSettings_0800423c() {\\n  send_string_to_device(PTR_s_____view_Grbl_settings______view_0800424c);\\n  return;\\n}", 
        "called": [
            "FUN_080036c6"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x0800423c", 
        "calling": [
            "FUN_08003b98"
        ], 
        "imported": true, 
        "current_name": "printGrblSettings_0800423c"
    }, 
    "FUN_08009264": {
        "renaming": {
            "in_CY": "current_character", 
            "FUN_08009264": "is_end_of_input_reached_08009264"
        }, 
        "code": "bool is_end_of_input_reached_08009264(void)\\n{\\n  char current_character;\\n  calculate_and_concatenate_results();\\n  return current_character == '\\0';\\n}", 
        "called": [
            "FUN_080091fc"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08009264", 
        "calling": [
            "FUN_080029d8", 
            "FUN_08003004"
        ], 
        "imported": true, 
        "current_name": "is_end_of_input_reached_08009264"
    }, 
    "FUN_08007e08": {
        "renaming": {
            "setFlagsInMemory_08007da8": "set_flags_in_memory", 
            "initialize_flags_08007d08": "initialize_flags", 
            "FUN_08007e08": "initialize_and_set_flags_08007e08", 
            "initialize_data_08007ad0": "initialize_data"
        }, 
        "code": "void initialize_and_set_flags_08007e08(void)\\n{\\n  initialize_data();\\n  initialize_flags();\\n  setFlagsInMemory_08007da8();\\n  return;\\n}", 
        "called": [
            "FUN_08007ad0", 
            "FUN_08007d08", 
            "FUN_08007da8"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08007e08", 
        "calling": [
            "FUN_08007540"
        ], 
        "imported": true, 
        "current_name": "initialize_and_set_flags_08007e08"
    }, 
    "FUN_08002fac": {
        "renaming": {
            "are_equal": "are_equal", 
            "bool": "bool", 
            "*PTR_DAT_08002fcc": "first_pointer", 
            "FUN_08002fac": "are_pointers_equal_08002fac", 
            "*PTR_DAT_08002fd0": "second_pointer"
        }, 
        "code": "bool are_pointers_equal_08002fac() {\\n  bool are_equal = (*PTR_DAT_08002fcc == *PTR_DAT_08002fd0);\\n  return are_equal;\\n}", 
        "called": [], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x08002fac", 
        "calling": [
            "FUN_08001e98"
        ], 
        "imported": true, 
        "current_name": "are_pointers_equal_08002fac"
    }, 
    "FUN_080002b6": {
        "renaming": {
            "bVar3": "isGreaterOrEqual", 
            "lVar4": "valueToAdd", 
            "uVar1": "newValueLow", 
            "param_1": "baseValue", 
            "uVar2": "newValueHigh", 
            "uVar5": "valueToAddFromFunction", 
            "FUN_080002b6": "waitForValueToChange_080002b6"
        }, 
        "code": "void waitForValueToChange_080002b6(uint baseValue) {\\n  uint newValueHigh, newValueLow;\\n  bool isGreaterOrEqual;\\n  longlong valueToAdd = calculateValueToAddToBaseValue();\\n  newValueHigh = (uint)(valueToAdd + (ulonglong)baseValue >> 0x20);\\n  do {\\n    newValueLow = (uint)((ulonglong)calculateValueToAddToBaseValue() >> 0x20);\\n    isGreaterOrEqual = newValueHigh <= newValueLow;\\n    if (newValueLow == newValueHigh) {\\n      isGreaterOrEqual = (uint)(valueToAdd + (ulonglong)baseValue) <= (uint)calculateValueToAddToBaseValue();\\n    }\\n  } while (!isGreaterOrEqual);\\n  return;\\n}", 
        "called": [
            "FUN_08000268"
        ], 
        "skipped": false, 
        "improved": true, 
        "entrypoint": "0x080002b6", 
        "calling": [], 
        "imported": true, 
        "current_name": "waitForValueToChange_080002b6"
    }
}